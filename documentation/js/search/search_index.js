var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.274,1,2.397]],["body/controllers/AppController.html",[0,2.101,1,3.951,2,1.702,3,0.237,4,0.203,5,0.203,6,4.003,7,0.383,8,1.763,9,5.598,10,1.348,11,0.022,12,0.59,13,4.7,14,1.428,15,1.57,16,0.426,17,0.834,18,3.615,19,4.003,20,0.237,21,0.275,22,2.699,23,4.7,24,1.272,25,4.7,26,0.015,27,0.018,28,0.015]],["title/modules/AppModule.html",[29,1.274,30,2.397]],["body/modules/AppModule.html",[1,3.712,2,1.731,3,0.176,4,0.151,5,0.151,11,0.023,16,0.498,17,0.62,18,3.642,19,2.973,20,0.176,21,0.204,26,0.011,27,0.015,28,0.011,29,1.974,30,4.809,31,1.62,32,1.733,33,2.005,34,2.005,35,1.733,36,3.13,37,1.86,38,2.973,39,2.973,40,2.973,41,3.148,42,3.949,43,3.949,44,3.949,45,2.943,46,2.745,47,2.005,48,2.005,49,3.491,50,2.745,51,3.491,52,3.491,53,3.491,54,2.973,55,3.491,56,1.733,57,1.86,58,3.491,59,2.174,60,1.519,61,2.632,62,3.491,63,3.491]],["title/injectables/AppService.html",[18,2.021,64,1.438]],["body/injectables/AppService.html",[3,0.237,4,0.203,5,0.203,7,0.383,8,1.763,9,5.598,11,0.022,12,0.59,14,1.428,15,1.57,16,0.345,17,0.834,18,3.332,20,0.237,21,0.275,24,1.272,26,0.015,27,0.018,28,0.015,64,2.371,65,2.699,66,4.003,67,4.7,68,4.7,69,4.7,70,5.802,71,2.333,72,4.7,73,4.7,74,4.003,75,4.003,76,4.7,77,4.7,78,4.7]],["title/controllers/AuthController.html",[0,1.274,79,2.397]],["body/controllers/AuthController.html",[0,1.327,2,1.327,3,0.185,4,0.158,5,0.158,7,0.298,8,1.501,10,1.416,11,0.023,12,0.62,14,1.501,16,0.472,17,0.65,20,0.185,21,0.214,22,2.104,24,1.337,26,0.011,27,0.015,28,0.011,79,3.364,80,3.12,81,2.281,82,3.663,83,5.587,84,3.724,85,3.663,86,3.429,87,4.939,88,3.663,89,1.686,90,1.416,91,0.529,92,1.686,93,2.166,94,2.762,95,3.663,96,3.663,97,1.7,98,3.12,99,3.364,100,3.663,101,2.495,102,1.818,103,2.495,104,2.495,105,2.495,106,2.495,107,2.104,108,2.104,109,3.364,110,2.495,111,1.327,112,3.209,113,3.12,114,2.762,115,1.408,116,3.663,117,3.663,118,3.663,119,2.495,120,3.663,121,3.663,122,3.663]],["title/classes/AuthCredentialsDTO.html",[21,0.206,86,1.747]],["body/classes/AuthCredentialsDTO.html",[3,0.211,4,0.181,5,0.181,7,0.341,10,1.547,11,0.022,12,0.677,15,1.706,16,0.396,20,0.211,21,0.315,26,0.013,27,0.017,28,0.013,86,2.677,91,0.578,111,1.516,123,0.95,124,5.081,125,2.23,126,1.153,127,3.745,128,2.962,129,3.565,130,4.593,131,4.593,132,4.593,133,4.593,134,3.565,135,3.565,136,3.565,137,2.962,138,2.962,139,5.081,140,3.565,141,3.565,142,3.565,143,1.943,144,3.565,145,4.593,146,3.565,147,3.565]],["title/classes/AuthCredentialsDTO-1.html",[21,0.172,86,1.458,148,2]],["body/classes/AuthCredentialsDTO-1.html",[3,0.211,4,0.181,5,0.181,7,0.341,10,1.547,11,0.022,12,0.677,15,1.706,16,0.396,20,0.211,21,0.315,26,0.013,27,0.017,28,0.013,86,2.677,91,0.578,111,1.516,114,4.499,123,0.95,125,2.23,126,1.153,127,3.745,128,2.962,129,3.565,130,4.593,131,4.593,132,4.593,133,4.593,134,3.565,135,3.565,136,3.565,137,2.962,138,2.962,139,5.081,140,3.565,141,3.565,142,3.565,143,1.943,144,3.565,145,4.593,146,3.565,147,3.565]],["title/modules/AuthModule.html",[29,1.274,41,1.747]],["body/modules/AuthModule.html",[2,1.744,3,0.178,4,0.153,5,0.153,11,0.023,16,0.499,17,0.627,20,0.178,21,0.206,26,0.011,27,0.015,28,0.011,29,1.985,31,1.638,32,1.752,33,2.027,34,2.027,35,1.752,36,3.149,37,2.921,41,3.337,45,2.953,46,2.766,47,2.027,48,2.027,50,2.766,59,2.198,60,1.536,79,3.734,112,3.654,113,3.006,149,3.006,150,3.006,151,3.53,152,3.006,153,4.128,154,2.662,155,3.53,156,2.662,157,4.816,158,2.027,159,3,160,2.404,161,3.53,162,3.632,163,3.006,164,2.027,165,2.662,166,1.357,167,2.404,168,3.006,169,3.53,170,3.53,171,3.53,172,3.006,173,3.53,174,3.53,175,3.53,176,3.53,177,3.53]],["title/injectables/AuthService.html",[64,1.438,112,2.021]],["body/injectables/AuthService.html",[3,0.164,4,0.141,5,0.141,7,0.265,8,1.384,11,0.023,12,0.66,14,1.384,16,0.468,17,0.578,20,0.164,21,0.19,24,1.233,26,0.01,27,0.014,28,0.01,60,1.417,64,1.862,65,1.87,84,3.435,86,3.357,89,1.794,90,1.507,91,0.563,92,1.794,93,2.061,94,3.435,97,1.511,112,2.616,115,1.252,127,1.87,128,2.608,156,2.455,164,3.564,165,2.455,166,2.02,178,2.774,179,2.119,180,4.475,181,2.837,182,2.774,183,5.254,184,5.69,185,3.256,186,3.256,187,2.774,188,3.256,189,2.774,190,2.218,191,2.774,192,2.616,193,2.455,194,2.455,195,2.774,196,1.751,197,3.256,198,1.862,199,3.256,200,1.617,201,1.511,202,0.99,203,3.256,204,3.256,205,2.774,206,4.555,207,3.256]],["title/classes/Cloudinary.html",[21,0.206,208,1.353]],["body/classes/Cloudinary.html",[3,0.203,4,0.173,5,0.227,7,0.327,8,1.594,11,0.023,12,0.504,14,1.219,15,1.42,16,0.385,17,0.712,20,0.265,21,0.235,24,1.086,26,0.012,27,0.016,28,0.012,89,1.37,90,1.151,91,0.43,92,1.37,102,1.992,123,0.911,159,3.268,166,2.248,179,1.996,198,1.64,202,1.219,208,2.248,209,2.733,210,5.247,211,4.469,212,2.389,213,4.012,214,2.389,215,2.733,216,3.026,217,3.417,218,3.026,219,3.417,220,3.417,221,3.417,222,3.417,223,3.417,224,3.417,225,3.417,226,2.304,227,4.469,228,3.417,229,2.304,230,3.417,231,3.417,232,2.304,233,1.992,234,2.733]],["title/classes/CreateEventDTO.html",[21,0.206,235,2.021]],["body/classes/CreateEventDTO.html",[3,0.214,4,0.183,5,0.183,7,0.346,10,1.722,11,0.022,12,0.754,15,1.714,16,0.399,20,0.214,21,0.318,26,0.013,27,0.017,28,0.013,91,0.643,111,1.536,123,0.963,125,2.26,126,1.163,137,3.144,138,3.144,143,1.969,235,3.124,236,5.394,237,3.144,238,4.527,239,4.527,240,2.787,241,4.527,242,3.198,243,3.388,244,4.242,245,4.242]],["title/classes/CreateGalleryDTO.html",[21,0.206,246,2.021]],["body/classes/CreateGalleryDTO.html",[3,0.229,4,0.196,5,0.196,7,0.369,10,1.627,11,0.022,12,0.712,15,1.756,16,0.416,20,0.229,21,0.332,26,0.014,27,0.018,28,0.014,91,0.607,111,1.641,123,1.029,126,1.213,137,3.073,138,3.073,143,2.103,240,2.873,241,4.276,246,3.257,247,5.273,248,3.859,249,4.216,250,4.531,251,4.531]],["title/classes/CreateNewsArticleDTO.html",[21,0.206,252,2.021]],["body/classes/CreateNewsArticleDTO.html",[3,0.211,4,0.181,5,0.181,7,0.341,10,1.711,11,0.022,12,0.749,15,1.706,16,0.396,20,0.211,21,0.315,26,0.013,27,0.017,28,0.013,56,3.128,91,0.639,111,1.516,123,0.95,126,1.153,137,3.128,138,3.128,143,1.943,240,2.769,241,4.499,243,3.359,252,3.097,253,3.128,254,5.367,255,3.565,256,5.081,257,5.081,258,4.186,259,4.186,260,4.186]],["title/classes/Event.html",[21,0.206,237,1.747]],["body/classes/Event.html",[3,0.182,4,0.156,5,0.156,7,0.293,10,1.877,11,0.022,12,0.822,15,1.732,16,0.264,20,0.182,21,0.211,26,0.011,27,0.015,28,0.011,90,1.4,91,0.701,123,0.817,126,1.044,237,2.423,238,4.176,239,4.176,240,2.571,243,3.986,261,3.066,262,2.266,263,3.772,264,4.68,265,2.951,266,3.772,267,4.68,268,2.715,269,3.6,270,4.597,271,3.6,272,1.572,273,3.772,274,3.6,275,3.6,276,3.6,277,3.6,278,2.715,279,3.6,280,3.681,281,3.325,282,3.681,283,1.094]],["title/controllers/EventController.html",[0,1.274,284,2.397]],["body/controllers/EventController.html",[0,0.895,2,0.895,3,0.125,4,0.107,5,0.266,7,0.201,8,1.133,10,1.538,11,0.023,12,0.673,14,1.63,16,0.461,17,0.439,20,0.125,21,0.145,22,1.42,24,1.451,26,0.008,27,0.012,28,0.008,81,1.539,89,1.831,90,1.538,91,0.574,92,1.831,93,2.274,99,3.056,101,2.539,102,2.228,103,1.683,104,1.683,105,1.683,106,1.683,107,1.42,108,1.42,109,2.539,110,1.683,111,0.895,115,1.433,119,1.683,158,1.42,179,1.925,196,0.95,202,0.751,212,2.304,214,1.834,235,3.54,237,2.481,272,1.985,283,0.751,284,2.539,285,2.105,286,3.384,287,3.384,288,2.811,289,3.384,290,3.384,291,1.864,292,1.864,293,2.472,294,2.105,295,2.811,296,2.472,297,4.801,298,2.105,299,2.811,300,2.472,301,2.105,302,3.238,303,3.728,304,2.472,305,2.105,306,4.256,307,1.864,308,2.472,309,2.141,310,2.105,311,1.864,312,1.864,313,3.768,314,1.864,315,2.141,316,1.864,317,1.864,318,1.42,319,1.147,320,0.895,321,1.147,322,1.147,323,1.864,324,2.472,325,2.472,326,1.864,327,2.472,328,1.864,329,1.683,330,2.105,331,1.864,332,2.472,333,2.472,334,2.811,335,2.472,336,2.472,337,2.472,338,2.811,339,2.472,340,1.864,341,2.472]],["title/modules/EventModule.html",[29,1.274,42,2.192]],["body/modules/EventModule.html",[2,1.858,3,0.196,4,0.168,5,0.168,11,0.023,16,0.497,17,0.688,20,0.196,21,0.227,26,0.012,27,0.016,28,0.012,29,2.082,31,1.799,32,1.925,33,2.227,34,2.227,35,1.925,36,3.302,37,2.065,41,3.246,42,4.309,45,3.035,46,2.946,47,2.227,48,2.227,50,2.946,59,2.415,60,1.687,160,2.64,283,1.178,284,3.915,309,3.755,310,3.302,342,3.302,343,3.877,344,3.302,345,3.877,346,2.415,347,3.302,348,3.877,349,2.415,350,3.302,351,3.877]],["title/classes/EventRepository.html",[21,0.206,346,2.192]],["body/classes/EventRepository.html",[3,0.115,4,0.098,5,0.236,7,0.185,8,1.062,11,0.023,12,0.601,14,1.062,16,0.431,17,0.403,20,0.115,21,0.133,24,0.946,26,0.007,27,0.011,28,0.007,71,1.128,89,1.193,90,1.002,91,0.374,92,1.193,93,1.732,115,1.344,123,0.516,126,0.747,148,2.381,166,2.362,179,1.862,196,2.097,198,1.955,200,1.128,201,2.221,202,1.828,208,2.097,212,1.741,214,2.229,226,2.007,229,2.007,233,1.735,235,3.263,237,2.708,238,2.636,239,2.636,240,1.622,262,1.622,266,1.547,283,1.062,286,3.212,289,3.212,291,1.713,302,2.748,315,1.305,319,1.054,320,0.823,321,1.054,322,1.054,323,1.713,330,2.977,346,2.177,349,1.415,352,1.935,353,2.653,354,1.862,355,1.862,356,2.271,357,2.271,358,2.271,359,2.271,360,2.271,361,3.212,362,2.007,363,1.547,364,1.305,365,2.977,366,2.177,367,2.271,368,1.935,369,2.271,370,2.271,371,3.495,372,2.271,373,1.713,374,1.713,375,1.713,376,2.447,377,1.305,378,1.21,379,1.305,380,1.305,381,1.305,382,2.271,383,2.271,384,3.258,385,1.713,386,3.212,387,2.636,388,1.713,389,1.713,390,3.133,391,2.115,392,2.375,393,3.212,394,3.212,395,3.212,396,1.713,397,2.271,398,2.271,399,2.271,400,1.935,401,1.935,402,1.935,403,1.713,404,1.415,405,2.271,406,1.415,407,2.271,408,1.713,409,1.713,410,1.713,411,1.713]],["title/injectables/EventService.html",[64,1.438,309,2.021]],["body/injectables/EventService.html",[3,0.108,4,0.093,5,0.261,7,0.175,8,1.017,11,0.023,12,0.699,14,1.529,16,0.434,17,0.381,20,0.108,21,0.126,24,1.362,26,0.007,27,0.01,28,0.007,60,0.934,64,1.368,65,1.233,71,1.066,89,1.82,90,1.529,91,0.571,92,1.82,93,2.191,115,1.287,126,0.716,166,1.935,179,2.214,181,2.084,190,1.463,196,1.785,198,2.057,200,2.764,201,1.909,202,1.529,208,2.05,212,2.179,233,1.662,235,3.398,237,2.499,265,2.474,272,1.905,283,0.653,286,3.101,287,2.524,288,2.524,289,3.101,290,3.101,291,1.619,294,2.851,297,4.904,298,2.851,301,1.829,302,3.062,305,1.829,306,3.502,309,1.922,318,1.922,319,0.997,320,0.778,321,0.997,322,0.997,323,1.619,346,3.321,347,1.829,354,1.144,355,1.144,362,1.922,364,1.233,376,2.362,377,1.233,378,1.144,379,1.233,380,1.233,381,1.233,412,1.829,413,2.148,414,3.347,415,2.148,416,2.148,417,2.148,418,2.148,419,2.148,420,1.619,421,2.148,422,2.148,423,2.148,424,3.428,425,2.148,426,2.524,427,1.619,428,2.148,429,1.619,430,1.463,431,1.619,432,3.347,433,2.148,434,3.347,435,2.148,436,3.347,437,2.148,438,3.347,439,2.148,440,2.148,441,2.148]],["title/classes/Gallery.html",[21,0.206,442,1.875]],["body/classes/Gallery.html",[3,0.181,4,0.155,5,0.155,7,0.292,10,1.874,11,0.022,12,0.82,15,1.8,16,0.263,20,0.181,21,0.209,26,0.011,27,0.015,28,0.011,90,1.395,91,0.7,123,0.813,126,1.04,240,2.563,243,3.69,249,3.761,262,2.257,263,3.761,264,4.671,265,2.942,267,4.671,268,2.699,270,4.592,272,1.566,273,3.761,278,2.699,280,3.667,281,3.312,282,3.667,283,1.088,442,2.591,443,3.049,444,5.522,445,5.522,446,3.58,447,3.58,448,3.58,449,3.58,450,3.58,451,3.58,452,3.58,453,2.699,454,3.049]],["title/controllers/GalleryController.html",[0,1.274,455,2.397]],["body/controllers/GalleryController.html",[0,0.893,2,0.893,3,0.124,4,0.107,5,0.266,7,0.201,8,1.131,10,1.537,11,0.023,12,0.673,14,1.628,16,0.461,17,0.438,20,0.124,21,0.144,22,1.417,24,1.45,26,0.008,27,0.012,28,0.008,81,1.536,89,1.829,90,1.537,91,0.574,92,1.829,93,2.273,99,3.053,101,2.535,102,2.225,103,1.68,104,1.68,105,1.68,106,1.68,107,1.417,108,1.417,109,2.535,110,1.68,111,0.893,115,0.948,119,1.68,158,1.417,179,1.923,196,0.948,202,0.75,212,2.302,214,1.832,246,3.538,272,1.984,283,0.75,292,1.86,295,2.807,299,2.807,307,1.86,311,1.86,312,1.86,313,3.764,314,1.86,315,2.138,316,1.86,317,1.86,318,1.417,319,1.145,320,0.893,321,1.145,322,1.145,326,1.86,328,1.86,329,1.68,331,1.86,334,2.807,338,3.38,340,1.86,442,2.388,455,2.535,456,2.101,457,3.38,458,3.818,459,3.38,460,3.818,461,3.818,462,1.86,463,2.467,464,2.101,465,2.467,466,4.98,467,2.101,468,3.235,469,2.467,470,2.101,471,2.467,472,2.101,473,4.252,474,2.467,475,1.86,476,1.86,477,2.138,478,2.101,479,2.467,480,2.467,481,2.467,482,2.101,483,2.467,484,2.467,485,2.467,486,2.467,487,2.467,488,2.467]],["title/modules/GalleryModule.html",[29,1.274,43,2.192]],["body/modules/GalleryModule.html",[2,1.877,3,0.199,4,0.17,5,0.17,11,0.023,16,0.491,17,0.699,20,0.199,21,0.23,26,0.012,27,0.016,28,0.012,29,2.098,31,1.828,32,1.955,33,2.261,34,2.261,35,1.955,36,3.327,37,2.098,41,3.26,43,4.32,45,3.048,46,2.976,47,2.261,48,2.261,50,2.976,54,3.353,59,2.452,60,1.713,160,2.682,455,3.945,477,3.771,478,3.353,489,3.353,490,3.937,491,3.353,492,3.937,493,3.937,494,2.452,495,3.353,496,3.937]],["title/classes/GalleryRepository.html",[21,0.206,494,2.192]],["body/classes/GalleryRepository.html",[3,0.115,4,0.099,5,0.236,7,0.186,8,1.068,11,0.023,12,0.603,14,1.068,16,0.432,17,0.406,20,0.115,21,0.134,24,0.951,26,0.007,27,0.011,28,0.007,71,1.136,89,1.2,90,1.008,91,0.376,92,1.2,93,1.739,97,1.062,98,1.949,115,0.88,123,0.519,126,0.752,148,2.394,166,2.367,179,1.867,196,2.103,198,1.749,200,1.136,201,2.229,202,1.832,208,2.103,212,1.749,214,2.236,226,2.019,229,2.019,233,1.745,234,2.394,240,1.631,246,3.272,249,2.394,262,1.631,266,1.558,283,0.695,315,1.314,319,1.062,320,0.829,321,1.062,322,1.062,349,1.425,353,2.665,354,1.873,355,1.873,361,3.227,362,2.019,363,1.558,364,1.314,366,1.425,373,1.725,374,1.725,375,1.725,376,2.458,377,1.314,378,1.219,379,1.314,380,1.314,381,1.314,384,3.271,385,1.725,386,3.227,387,2.65,388,1.725,389,1.725,390,3.142,391,2.125,392,2.384,393,3.227,394,3.227,395,3.227,396,1.725,400,1.949,401,1.949,402,1.949,403,1.725,404,1.425,406,1.425,408,1.725,409,1.725,410,1.725,411,1.725,442,2.761,457,3.227,459,3.227,462,1.725,468,2.758,475,1.725,476,1.725,482,2.994,494,2.189,497,1.949,498,2.288,499,2.288,500,2.288,501,2.288,502,2.288,503,2.288,504,3.515,505,3.515,506,2.288,507,2.288,508,2.288,509,2.288,510,1.949,511,2.288,512,2.288,513,2.288]],["title/injectables/GalleryService.html",[64,1.438,477,2.021]],["body/injectables/GalleryService.html",[3,0.108,4,0.092,5,0.261,7,0.174,8,1.014,11,0.023,12,0.722,14,1.527,16,0.434,17,0.38,20,0.108,21,0.125,24,1.36,26,0.007,27,0.01,28,0.007,60,0.931,64,1.364,65,1.229,71,1.063,89,1.818,90,1.527,91,0.595,92,1.818,93,2.188,115,0.823,126,0.714,166,1.932,179,2.212,181,2.079,190,1.458,196,1.782,198,2.054,200,2.495,201,1.905,202,1.527,208,2.047,212,2.176,233,1.657,234,2.273,246,3.394,265,2.469,272,1.903,283,0.65,318,1.917,319,0.993,320,0.775,321,0.993,322,0.993,354,1.14,355,1.14,362,1.917,364,1.229,376,2.357,377,1.229,378,1.14,379,1.229,380,1.229,381,1.229,420,1.614,424,3.422,426,2.517,427,1.614,429,1.614,430,1.458,431,1.614,442,2.469,457,3.094,458,2.843,459,3.094,460,2.843,461,3.495,462,1.614,464,2.843,466,4.899,467,1.823,468,3.058,470,2.843,472,1.823,473,3.495,475,1.614,476,1.614,477,1.917,494,3.681,495,1.823,514,1.823,515,2.14,516,3.338,517,2.14,518,2.14,519,2.14,520,2.14,521,2.14,522,2.14,523,2.14,524,2.14,525,2.14,526,2.14,527,2.14,528,2.14,529,3.338,530,2.14,531,3.338,532,2.14,533,3.338,534,2.14,535,2.14,536,2.14,537,2.14]],["title/classes/GetEventFilterDTO.html",[21,0.206,302,2.021]],["body/classes/GetEventFilterDTO.html",[3,0.203,4,0.173,5,0.173,7,0.327,10,1.677,11,0.022,12,0.734,15,1.42,16,0.385,20,0.203,21,0.307,26,0.012,27,0.016,28,0.012,91,0.626,111,1.453,123,0.911,125,2.138,126,1.122,137,3.078,138,3.078,143,1.862,237,3.078,242,3.026,272,1.997,302,3.013,390,3.358,391,2.902,392,2.902,538,5.281,539,4.408,540,4.408,541,3.417,542,3.026,543,4.675,544,3.026,545,4.408,546,4.408]],["title/classes/GetGalleryFilterDTO.html",[21,0.206,468,2.021]],["body/classes/GetGalleryFilterDTO.html",[3,0.203,4,0.173,5,0.173,7,0.327,10,1.677,11,0.022,12,0.734,15,1.42,16,0.385,20,0.203,21,0.307,26,0.012,27,0.016,28,0.012,91,0.626,111,1.453,123,0.911,125,2.138,126,1.122,137,3.078,138,3.078,143,1.862,272,1.997,390,3.358,391,2.902,392,2.902,442,3.304,468,3.013,539,4.408,540,4.408,542,3.026,543,4.675,544,3.026,545,4.408,546,4.408,547,5.281,548,4.012,549,4.012]],["title/classes/GetNewsArticleFilterDTO.html",[21,0.206,550,2.021]],["body/classes/GetNewsArticleFilterDTO.html",[3,0.197,4,0.169,5,0.169,7,0.319,10,1.656,11,0.022,12,0.725,15,1.397,16,0.379,20,0.197,21,0.302,26,0.012,27,0.016,28,0.012,56,3.048,91,0.618,111,1.417,123,0.888,125,2.085,126,1.104,137,3.048,138,3.048,143,1.816,242,2.95,253,3.048,272,1.977,390,3.317,391,2.867,392,2.867,539,4.355,540,4.355,541,3.333,542,2.95,543,4.63,544,2.95,545,4.355,546,4.355,550,2.964,551,5.23,552,3.824]],["title/classes/JwtStrategy.html",[21,0.206,153,2.192]],["body/classes/JwtStrategy.html",[3,0.178,4,0.152,5,0.152,7,0.287,8,1.461,11,0.023,12,0.603,14,1.07,16,0.486,17,0.625,20,0.178,21,0.206,24,0.953,26,0.011,27,0.015,28,0.011,60,1.531,89,1.641,90,1.379,91,0.515,92,1.641,93,1.741,97,2.73,123,0.799,128,2.386,153,2.994,158,2.022,159,2.994,162,2.654,163,2.998,164,3.651,165,2.654,166,2.105,167,2.397,172,2.998,179,1.869,181,2.994,182,2.998,189,2.998,190,2.397,192,3.379,193,2.654,194,2.654,195,2.998,196,1.353,198,1.439,201,1.634,202,1.07,205,4.094,262,1.634,424,2.397,553,4.128,554,2.654,555,4.807,556,3.52,557,4.807,558,3.52,559,3.52,560,2.998,561,3.52,562,2.998,563,3.52,564,3.52,565,3.52,566,3.52,567,3.52,568,3.52,569,3.52]],["title/classes/NewsArticle.html",[21,0.206,570,2.021]],["body/classes/NewsArticle.html",[3,0.173,4,0.148,5,0.148,7,0.279,10,1.852,11,0.022,12,0.811,15,1.706,16,0.251,20,0.173,21,0.2,26,0.011,27,0.015,28,0.011,57,3.506,90,1.353,91,0.692,123,0.777,126,1.009,240,2.505,243,3.926,253,3.267,262,2.189,263,3.675,264,4.599,265,2.875,267,4.599,268,2.582,270,4.548,272,1.519,273,3.675,278,2.582,280,3.557,281,3.213,282,3.557,283,1.041,453,2.582,454,2.917,570,2.709,571,2.917,572,5.396,573,5.396,574,5.396,575,3.424,576,3.424,577,3.424,578,3.424,579,3.424,580,3.424,581,3.424]],["title/controllers/NewsArticleController.html",[0,1.274,582,2.397]],["body/controllers/NewsArticleController.html",[0,0.857,2,0.857,3,0.119,4,0.102,5,0.263,7,0.193,8,1.096,10,1.508,11,0.023,12,0.66,14,1.598,16,0.456,17,0.42,20,0.119,21,0.138,22,1.358,24,1.424,26,0.007,27,0.011,28,0.007,56,2.426,57,2.953,81,1.473,89,1.796,90,1.508,91,0.563,92,1.796,93,2.249,99,2.975,101,2.455,102,2.169,103,1.611,104,1.611,105,1.611,106,1.611,107,1.358,108,1.358,109,2.455,110,1.611,111,0.857,115,0.909,119,1.611,158,1.358,179,1.892,196,0.909,202,0.719,212,2.265,214,1.785,252,3.566,253,2.751,272,1.96,283,0.719,287,3.294,288,3.294,290,3.294,292,1.783,295,2.718,299,2.718,307,1.783,311,1.783,312,1.783,313,3.684,314,1.783,315,2.07,316,1.783,317,1.783,318,1.358,319,1.098,320,0.857,321,1.098,322,1.098,326,1.783,328,1.783,329,1.611,331,1.783,334,2.718,338,3.294,340,1.783,550,3.31,552,2.245,570,1.358,582,2.455,583,2.014,584,4.369,585,4.369,586,2.365,587,2.365,588,2.365,589,2.365,590,5.763,591,2.365,592,3.605,593,2.365,594,2.365,595,2.365,596,2.365,597,4.161,598,2.365,599,1.783,600,2.07,601,2.014,602,1.783,603,2.365,604,2.365,605,2.365,606,2.365,607,2.365,608,2.365,609,2.365,610,2.365,611,2.365,612,2.365]],["title/modules/NewsArticleModule.html",[29,1.274,44,2.192]],["body/modules/NewsArticleModule.html",[2,1.858,3,0.196,4,0.168,5,0.168,11,0.023,16,0.489,17,0.688,20,0.196,21,0.227,26,0.012,27,0.016,28,0.012,29,2.082,31,1.799,32,1.925,33,2.227,34,2.227,35,1.925,36,3.302,37,2.065,41,3.246,44,4.309,45,3.035,46,2.946,47,2.227,48,2.227,50,2.946,56,2.854,57,2.065,59,2.415,60,1.687,160,2.64,253,1.925,350,3.302,582,3.915,600,3.755,601,3.302,613,3.302,614,3.302,615,3.877,616,3.877,617,2.415,618,3.302,619,3.877,620,3.877]],["title/classes/NewsArticleRepository.html",[21,0.206,617,2.192]],["body/classes/NewsArticleRepository.html",[3,0.115,4,0.098,5,0.236,7,0.185,8,1.062,11,0.023,12,0.601,14,1.062,16,0.417,17,0.403,20,0.115,21,0.133,24,0.946,26,0.007,27,0.011,28,0.007,56,2.115,57,2.752,71,1.128,89,1.193,90,1.002,91,0.374,92,1.193,93,1.732,115,0.873,123,0.516,126,0.747,148,2.381,166,2.362,179,1.862,196,2.097,198,1.741,200,1.128,201,2.221,202,1.828,208,2.097,212,1.741,214,2.229,226,2.007,229,2.007,233,1.735,240,1.622,252,3.263,253,2.564,256,2.977,257,2.977,262,1.622,266,1.547,283,0.69,315,1.305,319,1.054,320,0.823,321,1.054,322,1.054,349,1.415,353,2.653,354,1.862,355,1.862,361,3.212,362,2.007,363,1.547,364,1.305,366,1.415,373,1.713,374,1.713,375,1.713,376,2.447,377,1.305,378,1.21,379,1.305,380,1.305,381,1.305,384,3.258,385,1.713,386,3.212,387,2.636,388,1.713,389,1.713,390,3.133,391,2.115,392,2.375,393,3.212,394,3.212,395,3.212,396,1.713,403,1.713,404,1.415,406,1.415,408,1.713,409,1.713,410,1.713,411,1.713,510,1.935,550,2.748,552,1.415,570,2.748,599,1.713,602,1.713,617,2.177,621,1.935,622,3.629,623,3.629,624,2.271,625,2.271,626,1.935,627,2.271,628,2.271,629,2.271,630,2.271,631,3.495,632,2.271,633,3.495,634,2.271,635,2.271,636,2.271,637,3.495,638,2.271,639,2.271]],["title/injectables/NewsArticleService.html",[64,1.438,600,2.021]],["body/injectables/NewsArticleService.html",[3,0.106,4,0.091,5,0.26,7,0.172,8,1.002,11,0.023,12,0.694,14,1.516,16,0.42,17,0.374,20,0.106,21,0.123,22,1.211,24,1.35,26,0.007,27,0.01,28,0.007,56,2.282,57,3.049,64,1.348,65,1.211,71,1.047,89,1.806,90,1.517,91,0.567,92,1.806,93,2.179,115,0.811,126,0.705,166,1.918,179,2.206,181,1.313,196,1.562,198,2.039,200,2.745,201,1.886,202,1.516,208,2.034,212,2.162,233,1.638,252,3.378,253,2.841,265,2.449,272,1.894,283,0.641,318,1.895,319,0.979,320,0.763,321,0.979,322,0.979,354,1.123,355,1.123,362,1.895,364,1.211,376,2.334,377,1.211,378,1.123,379,1.211,380,1.211,381,1.211,420,1.59,424,3.398,426,2.487,427,1.59,429,1.59,430,1.436,431,1.59,550,2.64,552,2.531,570,1.211,597,3.461,599,1.59,600,1.895,602,1.59,617,2.863,618,1.796,622,3.461,623,3.461,626,1.796,640,1.796,641,3.299,642,3.299,643,4.064,644,2.108,645,3.299,646,3.299,647,2.108,648,3.299,649,2.108,650,5.722,651,3.299,652,2.108,653,2.108,654,2.108,655,3.299,656,2.108,657,2.108,658,2.108,659,2.108,660,2.108,661,2.108,662,3.299,663,2.108,664,3.299,665,2.108,666,3.299,667,2.108,668,3.299,669,2.108,670,2.108,671,2.108]],["title/classes/PaginatedResultDto.html",[21,0.206,320,1.274]],["body/classes/PaginatedResultDto.html",[3,0.24,4,0.205,5,0.205,7,0.387,11,0.022,12,0.733,20,0.295,21,0.342,26,0.015,27,0.018,28,0.015,91,0.626,123,1.079,126,1.249,272,2.037,320,2.116,366,3.939,391,2.36,392,2.36,404,2.96,406,3.939,672,3.584,673,4.976,674,4.753,675,4.308,676,4.753]],["title/classes/PaginationDto.html",[21,0.206,675,2.397]],["body/classes/PaginationDto.html",[3,0.234,4,0.2,5,0.2,7,0.377,11,0.022,12,0.785,20,0.29,21,0.336,26,0.014,27,0.018,28,0.014,91,0.67,123,1.051,126,1.229,272,2.206,320,1.677,366,2.884,391,3.104,392,3.104,404,3.894,406,2.884,672,3.492,673,3.944,675,4.258,677,4.631,678,4.631,679,4.631]],["title/controllers/SharedController.html",[0,1.274,680,2.397]],["body/controllers/SharedController.html",[0,1.9,2,1.9,3,0.265,4,0.227,5,0.227,11,0.022,16,0.385,17,0.931,20,0.265,21,0.307,26,0.016,27,0.019,28,0.016,81,3.268,680,4.223,681,4.469,682,5.248,683,5.248]],["title/modules/SharedModule.html",[29,1.274,45,1.633]],["body/modules/SharedModule.html",[2,2.126,3,0.242,4,0.207,5,0.207,11,0.023,16,0.466,17,0.85,20,0.242,21,0.28,26,0.015,27,0.018,28,0.015,29,2.126,31,2.223,37,2.552,45,2.724,50,2.751,107,2.751,108,2.751,378,2.552,680,4.322,684,4.789,685,5.869,686,4.789,687,4.789,688,4.789]],["title/interfaces/TokenPayload.html",[192,2.021,232,2.021]],["body/interfaces/TokenPayload.html",[3,0.259,4,0.222,5,0.222,7,0.419,11,0.021,15,1.771,20,0.259,26,0.016,27,0.019,28,0.016,91,0.551,126,1.31,128,3.363,192,3.518,232,2.952,689,3.876,690,4.378]],["title/classes/User.html",[21,0.206,97,1.633]],["body/classes/User.html",[3,0.209,4,0.179,5,0.179,7,0.338,10,1.801,11,0.022,12,0.788,15,1.802,16,0.304,20,0.209,21,0.242,26,0.013,27,0.017,28,0.013,91,0.672,97,2.487,123,0.941,126,1.146,127,3.41,128,2.948,262,2.487,263,4.044,265,3.164,270,4.615,272,1.726,273,4.044,281,3.649,283,1.259,453,3.125,691,3.53,692,5.058,693,4.144,694,4.144,695,4.144,696,4.144,697,4.144,698,4.144]],["title/classes/UserRepository.html",[21,0.206,164,2.021]],["body/classes/UserRepository.html",[3,0.139,4,0.119,5,0.119,7,0.224,8,1.227,11,0.023,12,0.6,14,1.453,15,1.587,16,0.43,17,0.489,20,0.139,21,0.161,24,1.519,26,0.009,27,0.013,28,0.009,84,3.045,86,3.282,89,1.633,90,1.372,91,0.512,92,1.633,93,2.124,94,3.045,97,2.813,115,1.058,123,0.625,127,2.747,128,3.008,164,2.319,166,2.255,179,2.165,180,4.073,187,2.344,191,2.344,192,1.581,193,2.075,194,2.075,196,1.839,198,2.397,200,2.005,201,1.874,202,1.601,214,1.955,226,1.581,229,1.581,262,1.874,283,0.836,349,1.714,353,2.979,363,2.75,384,1.874,692,4.487,699,2.075,700,4.038,701,4.038,702,2.752,703,2.752,704,2.752,705,2.752,706,3.439,707,2.752,708,2.752,709,4.038,710,2.752,711,4.038,712,2.752,713,2.752,714,2.752,715,2.752,716,2.752,717,2.752,718,2.752,719,2.752,720,2.752,721,2.752,722,4.038,723,2.752,724,2.752]],["title/coverage.html",[725,3.624]],["body/coverage.html",[0,2.013,1,1.623,5,0.103,6,2.03,11,0.022,18,1.369,21,0.4,26,0.007,27,0.011,28,0.007,35,1.183,56,1.8,57,2.613,61,2.734,64,2.157,66,2.03,75,2.03,79,1.623,80,2.03,86,1.8,91,0.255,97,1.683,102,1.183,112,1.369,114,1.797,124,2.03,125,2.961,153,1.484,154,1.797,164,1.369,167,2.469,178,2.03,192,1.369,202,0.724,208,1.394,209,3.594,214,1.482,215,1.623,232,2.082,235,1.369,236,2.03,237,2.179,246,1.369,247,2.03,248,2.03,252,1.369,253,2.759,254,2.03,255,2.03,261,2.03,284,1.623,285,2.03,302,1.369,309,1.369,320,0.863,346,1.484,352,2.03,412,2.03,430,4.923,442,1.932,443,2.03,455,1.623,456,2.03,468,1.369,477,1.369,494,1.484,497,2.03,514,2.03,538,2.03,547,2.03,550,1.369,551,2.03,552,1.484,553,2.734,554,2.734,570,1.369,571,2.03,582,1.623,583,2.03,600,1.369,617,1.484,621,2.03,640,2.03,672,2.734,675,1.623,680,1.623,681,2.03,690,2.03,691,2.03,699,2.734,725,1.797,726,2.383,727,2.383,728,4.905,729,5.779,730,6.325,731,6.49,732,5.955,733,3.088,734,3.088,735,2.03,736,2.03,737,2.03,738,4.905,739,3.088,740,4.389,741,5.277,742,2.383,743,2.03,744,2.383,745,2.383,746,2.383]],["title/dependencies.html",[32,2.102,747,2.937]],["body/dependencies.html",[11,0.023,17,0.748,21,0.317,26,0.013,27,0.017,28,0.013,32,2.092,60,1.833,74,3.589,107,2.42,108,3.11,111,1.526,143,1.956,156,3.177,158,2.42,159,2.624,162,3.177,208,1.62,283,1.646,365,3.589,368,3.589,560,5.098,706,3.589,748,5.985,749,4.213,750,4.213,751,5.416,752,4.213,753,4.213,754,4.213,755,4.213,756,4.213,757,4.213,758,4.213,759,4.213,760,4.213,761,4.213,762,4.213,763,4.213,764,4.213,765,4.213,766,4.213,767,4.213,768,4.213,769,4.213,770,4.213,771,4.213,772,4.213,773,4.213,774,4.213,775,4.213]],["title/miscellaneous/functions.html",[776,2,777,3.605]],["body/miscellaneous/functions.html",[7,0.446,11,0.02,26,0.017,27,0.02,28,0.017,35,3.335,743,4.663,776,3.729,777,4.663,778,5.475]],["title/index.html",[7,0.239,329,2,779,2.937]],["body/index.html",[4,0.173,11,0.022,26,0.012,27,0.016,28,0.012,71,1.992,249,2.733,353,2.499,725,3.026,780,4.012,781,4.012,782,5.247,783,4.012,784,4.012,785,4.012,786,4.012,787,4.012,788,4.012,789,5.846,790,4.012,791,4.012,792,4.012,793,6.725,794,4.012,795,4.012,796,4.012,797,6.601,798,4.012,799,4.012,800,5.247,801,4.012,802,4.012,803,4.012,804,4.012,805,5.247,806,5.247,807,4.012,808,4.012,809,4.012,810,5.247,811,5.247,812,4.012,813,4.012,814,4.012,815,4.012,816,4.012,817,3.417,818,4.012,819,4.012,820,4.012,821,4.012,822,4.012,823,4.012,824,4.012,825,4.012,826,4.012,827,4.012,828,4.012,829,4.012,830,4.012,831,4.012,832,4.012,833,4.012,834,4.012]],["title/modules.html",[31,2.231]],["body/modules.html",[11,0.019,26,0.016,27,0.019,28,0.016,30,3.404,31,2.32,41,2.481,42,3.113,43,3.113,44,3.113,45,2.32,817,5.85,835,6.869,836,6.869,837,6.978,838,4.998,839,4.998]],["title/overview.html",[840,4.093]],["body/overview.html",[2,1.296,11,0.022,18,3.172,26,0.011,27,0.015,28,0.011,29,1.296,30,4.78,31,1.662,32,1.777,33,2.056,34,2.056,35,1.777,36,2.056,37,1.907,38,3.049,39,3.049,40,3.049,41,3.415,42,4.199,43,4.199,44,4.199,45,3.033,46,2.793,47,2.056,48,2.056,65,2.056,112,3.172,123,0.813,149,3.049,150,3.049,152,3.049,153,3.69,309,3.172,342,3.049,344,3.049,477,3.172,489,3.049,491,3.049,600,3.172,613,3.049,614,3.049,689,2.699,840,3.049,841,4.863,842,3.58,843,3.58,844,3.58]],["title/interfaces/uploadedFile.html",[102,1.747,232,2.021]],["body/interfaces/uploadedFile.html",[3,0.205,4,0.176,5,0.176,7,0.331,11,0.023,15,1.793,16,0.388,17,0.721,20,0.267,21,0.238,24,1.1,26,0.013,27,0.016,28,0.013,91,0.567,102,2.627,126,1.131,159,3.295,166,2.262,179,1.387,198,1.661,202,1.235,208,2.034,209,2.768,211,3.461,212,1.661,214,2.404,215,2.768,216,3.065,217,3.461,218,3.065,219,3.461,220,3.461,221,3.461,222,3.461,223,3.461,224,3.461,225,3.461,226,2.334,227,4.506,228,3.461,229,2.334,230,3.461,231,3.461,232,2.334,233,3.093,234,4.244,689,3.065]],["title/miscellaneous/variables.html",[776,2,845,3.605]],["body/miscellaneous/variables.html",[7,0.269,11,0.022,24,0.895,26,0.01,27,0.014,28,0.01,61,4.32,91,0.614,97,2.138,127,2.645,128,2.286,154,2.494,167,3.902,168,2.817,202,1.399,208,1.771,209,2.253,214,2.549,215,3.137,216,2.494,218,2.494,354,3.613,355,3.613,553,2.494,554,3.472,562,2.817,699,2.494,733,2.817,734,4.879,735,2.817,736,3.922,737,3.922,739,2.817,776,2.253,845,2.817,846,5.298,847,5.729,848,3.308,849,3.308,850,3.308,851,3.308,852,4.605,853,4.605,854,4.605,855,4.605,856,4.605,857,4.605,858,4.605,859,4.605,860,4.605,861,4.605,862,4.605,863,4.605,864,4.605,865,4.605,866,4.605,867,4.605,868,4.605,869,4.605,870,4.605,871,4.605,872,4.605,873,4.605,874,3.308,875,3.308,876,3.308]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":430,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["0.2.32",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":740,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":148,"title":{"classes/AuthCredentialsDTO-1.html":{}},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["1.0.0",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["1.25.1",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":395,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["2",{"_index":844,"title":{},"body":{"overview.html":{}}}],["2.3.2",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":843,"title":{},"body":{"overview.html":{}}}],["23505",{"_index":717,"title":{},"body":{"classes/UserRepository.html":{}}}],["3.0.2",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["3.3.6",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":842,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":841,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_eventservice",{"_index":327,"title":{},"body":{"controllers/EventController.html":{}}}],["_galleryservice",{"_index":481,"title":{},"body":{"controllers/GalleryController.html":{}}}],["_jwt",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["_newsarticleservice",{"_index":605,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["accesstoken",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["affected",{"_index":427,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["affected.affected",{"_index":429,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["affected.raw",{"_index":431,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["allow",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["already",{"_index":719,"title":{},"body":{"classes/UserRepository.html":{}}}],["amazing",{"_index":818,"title":{},"body":{"index.html":{}}}],["api",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["api_key",{"_index":222,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["api_secret",{"_index":224,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["apibearerauth",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["apiproperty",{"_index":137,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["apiproperty()@isnotempty",{"_index":241,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(4)@maxlength(50",{"_index":135,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(8)@maxlength(50)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":129,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["apiproperty({required",{"_index":539,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["apitags",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["apitags('article",{"_index":604,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["apitags('authentication",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('events",{"_index":325,"title":{},"body":{"controllers/EventController.html":{}}}],["apitags('gallery",{"_index":480,"title":{},"body":{"controllers/GalleryController.html":{}}}],["app",{"_index":795,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":788,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["article",{"_index":552,"title":{},"body":{"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["article.controller",{"_index":619,"title":{},"body":{"modules/NewsArticleModule.html":{}}}],["article.controller.ts",{"_index":583,"title":{},"body":{"controllers/NewsArticleController.html":{},"coverage.html":{}}}],["article.controller.ts:36",{"_index":593,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:50",{"_index":587,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:61",{"_index":595,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:67",{"_index":589,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:75",{"_index":598,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.dto",{"_index":599,"title":{},"body":{"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["article.dto.ts",{"_index":255,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"coverage.html":{}}}],["article.dto.ts:10",{"_index":259,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{}}}],["article.dto.ts:13",{"_index":258,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{}}}],["article.dto.ts:7",{"_index":260,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{}}}],["article.entity",{"_index":602,"title":{},"body":{"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["article.entity.ts",{"_index":571,"title":{},"body":{"classes/NewsArticle.html":{},"coverage.html":{}}}],["article.entity.ts:14",{"_index":578,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:16",{"_index":575,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:18",{"_index":581,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:20",{"_index":580,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:22",{"_index":576,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:24",{"_index":577,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:26",{"_index":579,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["article.module.ts",{"_index":616,"title":{},"body":{"modules/NewsArticleModule.html":{}}}],["article.repository",{"_index":618,"title":{},"body":{"modules/NewsArticleModule.html":{},"injectables/NewsArticleService.html":{}}}],["article.repository.ts",{"_index":621,"title":{},"body":{"classes/NewsArticleRepository.html":{},"coverage.html":{}}}],["article.repository.ts:14",{"_index":624,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.repository.ts:15",{"_index":625,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.repository.ts:16",{"_index":627,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.repository.ts:46",{"_index":629,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.service",{"_index":601,"title":{},"body":{"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{}}}],["article.service.ts",{"_index":640,"title":{},"body":{"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["article.service.ts:17",{"_index":645,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:19",{"_index":647,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:25",{"_index":654,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:31",{"_index":652,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:39",{"_index":649,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:48",{"_index":657,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article/dtos/create",{"_index":254,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"coverage.html":{}}}],["article/dtos/get",{"_index":551,"title":{},"body":{"classes/GetNewsArticleFilterDTO.html":{},"coverage.html":{}}}],["article/news",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["articleid",{"_index":590,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["articleidid",{"_index":650,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["articles",{"_index":637,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["articles[0",{"_index":639,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["articles[1",{"_index":638,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["async",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["auth",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/GalleryModule.html":{}}}],["authcontroller",{"_index":79,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authcredentialsdto",{"_index":86,"title":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["authguard",{"_index":317,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["authmodule",{"_index":41,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":827,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":112,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":839,"title":{},"body":{"modules.html":{}}}],["await",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["backers",{"_index":819,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":362,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["badrequestexception('please",{"_index":373,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["baseentity",{"_index":263,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["bcrypt",{"_index":706,"title":{},"body":{"classes/UserRepository.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":723,"title":{},"body":{"classes/UserRepository.html":{}}}],["bcrypt.gensalt",{"_index":710,"title":{},"body":{"classes/UserRepository.html":{}}}],["bcrypt.hash(password",{"_index":724,"title":{},"body":{"classes/UserRepository.html":{}}}],["body",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":837,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":835,"title":{},"body":{"modules.html":{}}}],["building",{"_index":783,"title":{},"body":{"index.html":{}}}],["catch",{"_index":229,"title":{},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["check",{"_index":379,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["class",{"_index":21,"title":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{}}}],["classes",{"_index":123,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"overview.html":{}}}],["cloud_name",{"_index":220,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinary",{"_index":208,"title":{"classes/Cloudinary.html":{}},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["cloudinary.config",{"_index":219,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinary.uploader.upload(file.path",{"_index":228,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinaryconfig",{"_index":215,"title":{},"body":{"classes/Cloudinary.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["cloudinaryconfig.api_key",{"_index":223,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinaryconfig.cloud_name",{"_index":221,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinaryconfig.secret",{"_index":225,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_eventmodule",{"_index":342,"title":{},"body":{"modules/EventModule.html":{},"overview.html":{}}}],["cluster_eventmodule_imports",{"_index":343,"title":{},"body":{"modules/EventModule.html":{}}}],["cluster_eventmodule_providers",{"_index":344,"title":{},"body":{"modules/EventModule.html":{},"overview.html":{}}}],["cluster_gallerymodule",{"_index":489,"title":{},"body":{"modules/GalleryModule.html":{},"overview.html":{}}}],["cluster_gallerymodule_imports",{"_index":490,"title":{},"body":{"modules/GalleryModule.html":{}}}],["cluster_gallerymodule_providers",{"_index":491,"title":{},"body":{"modules/GalleryModule.html":{},"overview.html":{}}}],["cluster_newsarticlemodule",{"_index":613,"title":{},"body":{"modules/NewsArticleModule.html":{},"overview.html":{}}}],["cluster_newsarticlemodule_imports",{"_index":615,"title":{},"body":{"modules/NewsArticleModule.html":{}}}],["cluster_newsarticlemodule_providers",{"_index":614,"title":{},"body":{"modules/NewsArticleModule.html":{},"overview.html":{}}}],["column",{"_index":270,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["config",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"classes/Cloudinary.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{}}}],["config.cloudinary",{"_index":216,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["config.get('db",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('jwt",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["config.jwt",{"_index":562,"title":{},"body":{"classes/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["config/typeorm.config",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":705,"title":{},"body":{"classes/UserRepository.html":{}}}],["conflictexception('username",{"_index":718,"title":{},"body":{"classes/UserRepository.html":{}}}],["connection",{"_index":381,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["console.log(error",{"_index":714,"title":{},"body":{"classes/UserRepository.html":{}}}],["console.log(updategallerydto",{"_index":528,"title":{},"body":{"injectables/GalleryService.html":{}}}],["const",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["constructor",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"injectables/NewsArticleService.html":{}}}],["constructor(eventrepository",{"_index":413,"title":{},"body":{"injectables/EventService.html":{}}}],["constructor(galleryrepository",{"_index":515,"title":{},"body":{"injectables/GalleryService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{}}}],["constructor(repositiory",{"_index":644,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["constructor(userrepository",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["consumption",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"controllers/SharedController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"controllers/SharedController.html":{},"coverage.html":{}}}],["controller('article",{"_index":603,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["controller('auth",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('event",{"_index":324,"title":{},"body":{"controllers/EventController.html":{}}}],["controller('gallery",{"_index":479,"title":{},"body":{"controllers/GalleryController.html":{}}}],["controller('shared",{"_index":683,"title":{},"body":{"controllers/SharedController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["count",{"_index":404,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["coverage",{"_index":725,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created_at",{"_index":264,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["createdatecolumn",{"_index":280,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["createdatecolumn({name",{"_index":268,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["createevent",{"_index":286,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["createevent(createeventdto",{"_index":291,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["createeventdto",{"_index":235,"title":{"classes/CreateEventDTO.html":{}},"body":{"classes/CreateEventDTO.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"coverage.html":{}}}],["creategallery",{"_index":457,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["creategallery(creategallerydto",{"_index":462,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["creategallerydto",{"_index":246,"title":{"classes/CreateGalleryDTO.html":{}},"body":{"classes/CreateGalleryDTO.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"coverage.html":{}}}],["createnewsarticle",{"_index":622,"title":{},"body":{"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["createnewsarticle(createnewsarticledto",{"_index":626,"title":{},"body":{"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["createnewsarticledto",{"_index":252,"title":{"classes/CreateNewsArticleDTO.html":{}},"body":{"classes/CreateNewsArticleDTO.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["createparamdecorator((data",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createwallet",{"_index":584,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["createwallet(createnewsarticledto",{"_index":586,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["creating",{"_index":389,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["data",{"_index":406,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["database",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":243,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["date_published",{"_index":572,"title":{},"body":{"classes/NewsArticle.html":{}}}],["datepublished",{"_index":256,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"classes/NewsArticleRepository.html":{}}}],["dbconfig",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconfig.database",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.extra",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.host",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.password",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.port",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.ssl",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.synchronize",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.type",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.username",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["decorator.ts",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/User.html":{}}}],["default",{"_index":354,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["delete",{"_index":311,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["delete('/:id",{"_index":295,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["deleteevent",{"_index":287,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/NewsArticleController.html":{}}}],["deleteevent(articleid",{"_index":588,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["deleteevent(eventid",{"_index":294,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["deletegallery",{"_index":458,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["deletegallery(galleryid",{"_index":464,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["deletenewsarticle",{"_index":641,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["deletenewsarticle(articleidid",{"_index":648,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["deleteresult",{"_index":318,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":400,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{}}}],["description",{"_index":249,"title":{},"body":{"classes/CreateGalleryDTO.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"index.html":{}}}],["dest",{"_index":688,"title":{},"body":{"modules/SharedModule.html":{}}}],["detail",{"_index":238,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{}}}],["development",{"_index":796,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["dto",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["dto.ts",{"_index":125,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":244,"title":{},"body":{"classes/CreateEventDTO.html":{}}}],["dto.ts:12",{"_index":549,"title":{},"body":{"classes/GetGalleryFilterDTO.html":{}}}],["dto.ts:13",{"_index":242,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["dto.ts:16",{"_index":136,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["dto.ts:17",{"_index":548,"title":{},"body":{"classes/GetGalleryFilterDTO.html":{}}}],["dto.ts:18",{"_index":541,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["dto.ts:25",{"_index":134,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["dto.ts:7",{"_index":245,"title":{},"body":{"classes/CreateEventDTO.html":{}}}],["dto.ts:8",{"_index":542,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["dtos/auth",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["dtos/create",{"_index":319,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["dtos/get",{"_index":322,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["e2e",{"_index":807,"title":{},"body":{"index.html":{}}}],["ease",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["efficient",{"_index":784,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":374,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["entities",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":281,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["entity.{js,ts",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityrepository",{"_index":349,"title":{},"body":{"modules/EventModule.html":{},"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(event",{"_index":369,"title":{},"body":{"classes/EventRepository.html":{}}}],["entityrepository(gallery",{"_index":503,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["entityrepository(newsarticle",{"_index":630,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["entityrepository(user",{"_index":707,"title":{},"body":{"classes/UserRepository.html":{}}}],["err",{"_index":230,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["error",{"_index":384,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{}}}],["error.code",{"_index":716,"title":{},"body":{"classes/UserRepository.html":{}}}],["error.stack",{"_index":387,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["event",{"_index":237,"title":{"classes/Event.html":{}},"body":{"classes/CreateEventDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GetEventFilterDTO.html":{},"coverage.html":{}}}],["event.controller",{"_index":348,"title":{},"body":{"modules/EventModule.html":{}}}],["event.detail",{"_index":371,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.entity",{"_index":323,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["event.image",{"_index":382,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.publishdate",{"_index":372,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.repository",{"_index":347,"title":{},"body":{"modules/EventModule.html":{},"injectables/EventService.html":{}}}],["event.save",{"_index":383,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.service",{"_index":310,"title":{},"body":{"controllers/EventController.html":{},"modules/EventModule.html":{}}}],["event.title",{"_index":370,"title":{},"body":{"classes/EventRepository.html":{}}}],["event/event.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["eventcontroller",{"_index":284,"title":{"controllers/EventController.html":{}},"body":{"controllers/EventController.html":{},"modules/EventModule.html":{},"coverage.html":{}}}],["eventid",{"_index":297,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["eventmodule",{"_index":42,"title":{"modules/EventModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"modules.html":{},"overview.html":{}}}],["eventrepository",{"_index":346,"title":{"classes/EventRepository.html":{}},"body":{"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"coverage.html":{}}}],["events",{"_index":330,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{}}}],["events[0",{"_index":407,"title":{},"body":{"classes/EventRepository.html":{}}}],["events[1",{"_index":405,"title":{},"body":{"classes/EventRepository.html":{}}}],["eventservice",{"_index":309,"title":{"injectables/EventService.html":{}},"body":{"controllers/EventController.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"coverage.html":{},"overview.html":{}}}],["existingarticle",{"_index":662,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.date_published",{"_index":669,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.full_article",{"_index":667,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.preview_imageurl",{"_index":670,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.save",{"_index":671,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.title",{"_index":665,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingevent",{"_index":432,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.detail",{"_index":437,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.image",{"_index":440,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.publishdate",{"_index":439,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.save",{"_index":441,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.title",{"_index":435,"title":{},"body":{"injectables/EventService.html":{}}}],["existinggallery",{"_index":529,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.description",{"_index":534,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.image_public_id",{"_index":536,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.imageurl",{"_index":535,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.save",{"_index":537,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.title",{"_index":532,"title":{},"body":{"injectables/GalleryService.html":{}}}],["exists",{"_index":720,"title":{},"body":{"classes/UserRepository.html":{}}}],["expiresin",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":212,"title":{},"body":{"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"interfaces/uploadedFile.html":{}}}],["extends",{"_index":262,"title":{},"body":{"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["extra",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":559,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":566,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["false",{"_index":546,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["false})@isoptional()@isnotempty",{"_index":540,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["fetch",{"_index":411,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["fetching",{"_index":409,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{}}}],["fileinterceptor",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["filter",{"_index":331,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["filterdto",{"_index":361,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["found",{"_index":424,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"injectables/NewsArticleService.html":{}}}],["framework",{"_index":782,"title":{},"body":{"index.html":{}}}],["full_article",{"_index":573,"title":{},"body":{"classes/NewsArticle.html":{}}}],["fullarticle",{"_index":257,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"classes/NewsArticleRepository.html":{}}}],["function",{"_index":744,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":777,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["galleries",{"_index":482,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{}}}],["galleries[0",{"_index":513,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["galleries[1",{"_index":512,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery",{"_index":442,"title":{"classes/Gallery.html":{}},"body":{"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetGalleryFilterDTO.html":{},"coverage.html":{}}}],["gallery.controller",{"_index":493,"title":{},"body":{"modules/GalleryModule.html":{}}}],["gallery.description",{"_index":505,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.dto",{"_index":475,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["gallery.dto.ts",{"_index":248,"title":{},"body":{"classes/CreateGalleryDTO.html":{},"coverage.html":{}}}],["gallery.dto.ts:10",{"_index":250,"title":{},"body":{"classes/CreateGalleryDTO.html":{}}}],["gallery.dto.ts:7",{"_index":251,"title":{},"body":{"classes/CreateGalleryDTO.html":{}}}],["gallery.entity",{"_index":476,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["gallery.image_public_id",{"_index":507,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.imageurl",{"_index":506,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.repository",{"_index":495,"title":{},"body":{"modules/GalleryModule.html":{},"injectables/GalleryService.html":{}}}],["gallery.save",{"_index":508,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.service",{"_index":478,"title":{},"body":{"controllers/GalleryController.html":{},"modules/GalleryModule.html":{}}}],["gallery.title",{"_index":504,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery/gallery.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["gallerycontroller",{"_index":455,"title":{"controllers/GalleryController.html":{}},"body":{"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"coverage.html":{}}}],["galleryid",{"_index":466,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["gallerymodule",{"_index":43,"title":{"modules/GalleryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GalleryModule.html":{},"modules.html":{},"overview.html":{}}}],["galleryrepository",{"_index":494,"title":{"classes/GalleryRepository.html":{}},"body":{"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"coverage.html":{}}}],["galleryservice",{"_index":477,"title":{"injectables/GalleryService.html":{}},"body":{"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"injectables/GalleryService.html":{},"coverage.html":{},"overview.html":{}}}],["get('/:id",{"_index":299,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["get('articles",{"_index":592,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["get('events",{"_index":303,"title":{},"body":{"controllers/EventController.html":{}}}],["geteventarticles",{"_index":585,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["geteventarticles(getnewsarticlefilterdto",{"_index":591,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["geteventbyid",{"_index":288,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/NewsArticleController.html":{}}}],["geteventbyid(@param('id",{"_index":336,"title":{},"body":{"controllers/EventController.html":{}}}],["geteventbyid(articleid",{"_index":594,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["geteventbyid(eventid",{"_index":298,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["geteventfilterdto",{"_index":302,"title":{"classes/GetEventFilterDTO.html":{}},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GetEventFilterDTO.html":{},"coverage.html":{}}}],["getevents",{"_index":289,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["getevents(filterdto",{"_index":359,"title":{},"body":{"classes/EventRepository.html":{}}}],["getevents(geteventfilterdto",{"_index":301,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["getgalleries",{"_index":459,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["getgalleries(filterdto",{"_index":501,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["getgalleries(getgalleryfilterdto",{"_index":467,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["getgallerybyid",{"_index":460,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["getgallerybyid(galleryid",{"_index":470,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["getgalleryfilterdto",{"_index":468,"title":{"classes/GetGalleryFilterDTO.html":{}},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetGalleryFilterDTO.html":{},"coverage.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getnewsarticlebyid",{"_index":642,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getnewsarticlebyid(articleidid",{"_index":651,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getnewsarticlefilter",{"_index":655,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getnewsarticlefilterdto",{"_index":550,"title":{"classes/GetNewsArticleFilterDTO.html":{}},"body":{"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["getnewsarticles",{"_index":623,"title":{},"body":{"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["getnewsarticles(filterdto",{"_index":628,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["getnewsarticles(getnewsarticlefilter",{"_index":653,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getting",{"_index":329,"title":{"index.html":{}},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["getuser",{"_index":737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":838,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":814,"title":{},"body":{"index.html":{}}}],["hashpassword",{"_index":700,"title":{},"body":{"classes/UserRepository.html":{}}}],["hashpassword(password",{"_index":701,"title":{},"body":{"classes/UserRepository.html":{}}}],["here",{"_index":824,"title":{},"body":{"index.html":{}}}],["host",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":831,"title":{},"body":{"index.html":{}}}],["id",{"_index":265,"title":{},"body":{"classes/Event.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"injectables/GalleryService.html":{},"classes/NewsArticle.html":{},"injectables/NewsArticleService.html":{},"classes/User.html":{}}}],["identifier",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":266,"title":{},"body":{"classes/Event.html":{},"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["image_public_id",{"_index":444,"title":{},"body":{"classes/Gallery.html":{}}}],["imageurl",{"_index":445,"title":{},"body":{"classes/Gallery.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{}}}],["incorrect",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"miscellaneous/functions.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["injectable",{"_index":64,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["injectables",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{},"overview.html":{}}}],["injectrepository",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{}}}],["injectrepository(eventrepository",{"_index":421,"title":{},"body":{"injectables/EventService.html":{}}}],["injectrepository(galleryrepository",{"_index":523,"title":{},"body":{"injectables/GalleryService.html":{}}}],["injectrepository(userrepository",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["installation",{"_index":792,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":794,"title":{},"body":{"index.html":{}}}],["interface",{"_index":232,"title":{"interfaces/TokenPayload.html":{},"interfaces/uploadedFile.html":{}},"body":{"classes/Cloudinary.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{}}}],["interfaces",{"_index":689,"title":{},"body":{"interfaces/TokenPayload.html":{},"overview.html":{},"interfaces/uploadedFile.html":{}}}],["internalservererrorexception",{"_index":363,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{}}}],["internalservererrorexception('an",{"_index":388,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["internalservererrorexception('couldnt",{"_index":410,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["internet",{"_index":380,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["ipaginationoptions",{"_index":367,"title":{},"body":{"classes/EventRepository.html":{}}}],["isin",{"_index":544,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["isnotempty",{"_index":138,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["isoptional",{"_index":543,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["ispasswordcorrect",{"_index":722,"title":{},"body":{"classes/UserRepository.html":{}}}],["isstring",{"_index":139,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["join",{"_index":821,"title":{},"body":{"index.html":{}}}],["json.stringify",{"_index":607,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["json.stringify(geteventfilterdto",{"_index":332,"title":{},"body":{"controllers/EventController.html":{}}}],["json.stringify(getgalleryfilterdto",{"_index":483,"title":{},"body":{"controllers/GalleryController.html":{}}}],["jwt",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtconfig",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconfig.expiresin",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconfig.secret",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":565,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["jwtmodule",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":153,"title":{"classes/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":828,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["license",{"_index":834,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":811,"title":{},"body":{"index.html":{}}}],["limit",{"_index":392,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["limitt",{"_index":394,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["local",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":214,"title":{},"body":{"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["logger.error(err",{"_index":231,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["logger.error(error.stack",{"_index":715,"title":{},"body":{"classes/UserRepository.html":{}}}],["logging",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(authcredentialsdto",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["matches",{"_index":140,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":147,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":141,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["maxlength(50",{"_index":145,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["message",{"_index":132,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["metadata",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["minlength",{"_index":142,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["minlength(4",{"_index":144,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["minlength(8",{"_index":146,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["miscellaneous",{"_index":776,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":810,"title":{},"body":{"index.html":{}}}],["mode",{"_index":800,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":823,"title":{},"body":{"index.html":{}}}],["multermodule",{"_index":685,"title":{},"body":{"modules/SharedModule.html":{}}}],["multermodule.register",{"_index":687,"title":{},"body":{"modules/SharedModule.html":{}}}],["myśliwiec",{"_index":829,"title":{},"body":{"index.html":{}}}],["name",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["nest",{"_index":789,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":833,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":368,"title":{},"body":{"classes/EventRepository.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"classes/UserRepository.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{}}}],["nestjs/core",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"modules/GalleryModule.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"modules/NewsArticleModule.html":{},"dependencies.html":{}}}],["new",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["news",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["newsarticle",{"_index":570,"title":{"classes/NewsArticle.html":{}},"body":{"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["newsarticle.date_published",{"_index":632,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.full_article",{"_index":633,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.preview_imageurl",{"_index":634,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.save",{"_index":635,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.title",{"_index":631,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticlecontroller",{"_index":582,"title":{"controllers/NewsArticleController.html":{}},"body":{"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"coverage.html":{}}}],["newsarticlemodule",{"_index":44,"title":{"modules/NewsArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NewsArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["newsarticlerepository",{"_index":617,"title":{"classes/NewsArticleRepository.html":{}},"body":{"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["newsarticles",{"_index":606,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["newsarticleservice",{"_index":600,"title":{"injectables/NewsArticleService.html":{}},"body":{"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{},"overview.html":{}}}],["node.js",{"_index":781,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":420,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["notfoundexception(`no",{"_index":426,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["npm",{"_index":793,"title":{},"body":{"index.html":{}}}],["null",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["number",{"_index":272,"title":{},"body":{"classes/Event.html":{},"controllers/EventController.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{}}}],["occured",{"_index":386,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["onetomany",{"_index":697,"title":{},"body":{"classes/User.html":{}}}],["open",{"_index":812,"title":{},"body":{"index.html":{}}}],["optional",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["overview",{"_index":840,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":747,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":391,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["pagee",{"_index":393,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["paginate",{"_index":365,"title":{},"body":{"classes/EventRepository.html":{},"dependencies.html":{}}}],["paginatedresultdto",{"_index":320,"title":{"classes/PaginatedResultDto.html":{}},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["pagination",{"_index":366,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["paginationdto",{"_index":675,"title":{"classes/PaginationDto.html":{}},"body":{"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["param",{"_index":312,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["param('id",{"_index":338,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["parameters",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["parseintpipe",{"_index":313,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["passport",{"_index":560,"title":{},"body":{"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":561,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":563,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["password",{"_index":127,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":314,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["patch('/:id",{"_index":340,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["patch('/:id')@useinterceptors(undefined",{"_index":307,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["payload",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["pg",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"index.html":{}}}],["police",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["port",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["post('/login",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/sign_up",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/sign_up')@usepipes(validationpipe",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@usepipes(validationpipe)@useinterceptors(undefined",{"_index":292,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["prefix",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"controllers/SharedController.html":{}}}],["prepend",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["preview_imageurl",{"_index":574,"title":{},"body":{"classes/NewsArticle.html":{}}}],["primarygeneratedcolumn",{"_index":273,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["private",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["production",{"_index":802,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":780,"title":{},"body":{"index.html":{}}}],["project",{"_index":813,"title":{},"body":{"index.html":{}}}],["promise",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["properties",{"_index":126,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"interfaces/uploadedFile.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["public_id",{"_index":234,"title":{},"body":{"classes/Cloudinary.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"interfaces/uploadedFile.html":{}}}],["publishdate",{"_index":239,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{}}}],["query",{"_index":315,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{}}}],["query.andwhere",{"_index":510,"title":{},"body":{"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["query.andwhere('event.title",{"_index":398,"title":{},"body":{"classes/EventRepository.html":{}}}],["query.getmanyandcount",{"_index":403,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["query.limit(limitt",{"_index":402,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{}}}],["query.offset(skipped",{"_index":401,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{}}}],["query.orderby('event.id",{"_index":399,"title":{},"body":{"classes/EventRepository.html":{}}}],["query.orderby('gallery.id",{"_index":511,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["read",{"_index":822,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["repositiory",{"_index":646,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["repository",{"_index":353,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["req",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.args[0].user",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('cloudinary').v2",{"_index":218,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":545,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["res",{"_index":376,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["rimraf",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":797,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":692,"title":{},"body":{"classes/User.html":{},"classes/UserRepository.html":{}}}],["scalable",{"_index":785,"title":{},"body":{"index.html":{}}}],["search",{"_index":390,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticleRepository.html":{}}}],["secret",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":567,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["secure_url",{"_index":233,"title":{},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"interfaces/uploadedFile.html":{}}}],["select",{"_index":375,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["server",{"_index":786,"title":{},"body":{"index.html":{}}}],["shared",{"_index":682,"title":{},"body":{"controllers/SharedController.html":{}}}],["shared.controller",{"_index":686,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/shared.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedcontroller",{"_index":680,"title":{"controllers/SharedController.html":{}},"body":{"controllers/SharedController.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["sharedmodule",{"_index":45,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":787,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["signup(@body",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(authcredentialsdto",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["skipped",{"_index":396,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"index.html":{},"interfaces/uploadedFile.html":{}}}],["sponsors",{"_index":816,"title":{},"body":{"index.html":{}}}],["src/.../auth.module.ts",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cloudinary.ts",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":778,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../typeorm.config.ts",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.repository.ts",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:24",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":350,"title":{},"body":{"modules/EventModule.html":{},"modules/NewsArticleModule.html":{}}}],["src/auth/auth.module.ts",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/config/typeorm.config.ts",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth",{"_index":124,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"coverage.html":{}}}],["src/auth/dtos/auth",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDTO-1.html":{},"coverage.html":{}}}],["src/auth/get",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":553,"title":{},"body":{"classes/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/token.model.ts",{"_index":690,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["src/auth/user.entity",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"classes/GalleryRepository.html":{}}}],["src/auth/user.entity.ts",{"_index":691,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/auth/user.entity.ts:14",{"_index":693,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.entity.ts:16",{"_index":696,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.entity.ts:18",{"_index":694,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.entity.ts:20",{"_index":695,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.repository.ts",{"_index":699,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/user.repository.ts:14",{"_index":703,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/auth/user.repository.ts:32",{"_index":704,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/auth/user.repository.ts:49",{"_index":702,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/config/typeorm.config.ts",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/event/dtos/create",{"_index":236,"title":{},"body":{"classes/CreateEventDTO.html":{},"coverage.html":{}}}],["src/event/dtos/get",{"_index":538,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"coverage.html":{}}}],["src/event/event.controller.ts",{"_index":285,"title":{},"body":{"controllers/EventController.html":{},"coverage.html":{}}}],["src/event/event.controller.ts:36",{"_index":304,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:48",{"_index":293,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:56",{"_index":300,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:60",{"_index":296,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:68",{"_index":308,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.entity.ts",{"_index":261,"title":{},"body":{"classes/Event.html":{},"coverage.html":{}}}],["src/event/event.entity.ts:13",{"_index":274,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:15",{"_index":269,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:17",{"_index":279,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:19",{"_index":277,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:21",{"_index":275,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:23",{"_index":276,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:25",{"_index":271,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.module.ts",{"_index":345,"title":{},"body":{"modules/EventModule.html":{}}}],["src/event/event.repository.ts",{"_index":352,"title":{},"body":{"classes/EventRepository.html":{},"coverage.html":{}}}],["src/event/event.repository.ts:19",{"_index":356,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.repository.ts:20",{"_index":357,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.repository.ts:21",{"_index":358,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.repository.ts:51",{"_index":360,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.service.ts",{"_index":412,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/event/event.service.ts:17",{"_index":414,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:22",{"_index":415,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:28",{"_index":418,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:34",{"_index":417,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:42",{"_index":416,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:51",{"_index":419,"title":{},"body":{"injectables/EventService.html":{}}}],["src/gallery/dtos/create",{"_index":247,"title":{},"body":{"classes/CreateGalleryDTO.html":{},"coverage.html":{}}}],["src/gallery/dtos/get",{"_index":547,"title":{},"body":{"classes/GetGalleryFilterDTO.html":{},"coverage.html":{}}}],["src/gallery/gallery.controller.ts",{"_index":456,"title":{},"body":{"controllers/GalleryController.html":{},"coverage.html":{}}}],["src/gallery/gallery.controller.ts:36",{"_index":469,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:48",{"_index":463,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:56",{"_index":471,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:62",{"_index":465,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:70",{"_index":474,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.entity.ts",{"_index":443,"title":{},"body":{"classes/Gallery.html":{},"coverage.html":{}}}],["src/gallery/gallery.entity.ts:14",{"_index":448,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:16",{"_index":446,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:18",{"_index":452,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:20",{"_index":451,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:22",{"_index":447,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:24",{"_index":450,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:26",{"_index":449,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.module.ts",{"_index":492,"title":{},"body":{"modules/GalleryModule.html":{}}}],["src/gallery/gallery.repository.ts",{"_index":497,"title":{},"body":{"classes/GalleryRepository.html":{},"coverage.html":{}}}],["src/gallery/gallery.repository.ts:15",{"_index":498,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.repository.ts:16",{"_index":499,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.repository.ts:17",{"_index":500,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.repository.ts:46",{"_index":502,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.service.ts",{"_index":514,"title":{},"body":{"injectables/GalleryService.html":{},"coverage.html":{}}}],["src/gallery/gallery.service.ts:17",{"_index":522,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:18",{"_index":516,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:24",{"_index":517,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:30",{"_index":519,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:36",{"_index":520,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:44",{"_index":518,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:53",{"_index":521,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/main.ts",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/news",{"_index":253,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["src/shared/dto/pagination.dto",{"_index":321,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["src/shared/dto/pagination.dto.ts",{"_index":672,"title":{},"body":{"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["src/shared/dto/pagination.dto.ts:2",{"_index":679,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/shared/dto/pagination.dto.ts:3",{"_index":678,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/shared/dto/pagination.dto.ts:4",{"_index":677,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/shared/dto/pagination.dto.ts:8",{"_index":674,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/shared/dto/pagination.dto.ts:9",{"_index":676,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/shared/shared.controller.ts",{"_index":681,"title":{},"body":{"controllers/SharedController.html":{},"coverage.html":{}}}],["src/shared/shared.module",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{}}}],["src/shared/shared.module.ts",{"_index":684,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/utilities/cloudinary",{"_index":364,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["src/utilities/cloudinary.ts",{"_index":209,"title":{},"body":{"classes/Cloudinary.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["src/utilities/cloudinary.ts:13",{"_index":213,"title":{},"body":{"classes/Cloudinary.html":{}}}],["ssl",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":798,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":801,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":803,"title":{},"body":{"index.html":{}}}],["started",{"_index":779,"title":{"index.html":{}},"body":{}}],["starter",{"_index":791,"title":{},"body":{"index.html":{}}}],["statements",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":825,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{}}}],["strategy.ts",{"_index":554,"title":{},"body":{"classes/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategy.ts:10",{"_index":556,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["strategy.ts:21",{"_index":558,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/Gallery.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["super",{"_index":564,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["support",{"_index":817,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":836,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["synchronize",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":673,"title":{},"body":{"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["table",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":745,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":806,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":809,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":808,"title":{},"body":{"index.html":{}}}],["tests",{"_index":805,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":815,"title":{},"body":{"index.html":{}}}],["this._eventservice.createevent(createeventdto",{"_index":335,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.deleteevent(eventid",{"_index":339,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.geteventbyid(eventid",{"_index":337,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.getevents(geteventfilterdto",{"_index":333,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.updateevent(eventid",{"_index":341,"title":{},"body":{"controllers/EventController.html":{}}}],["this._galleryservice.creategallery(creategallerydto",{"_index":485,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.deletegallery(galleryid",{"_index":487,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.getgalleries(getgalleryfilterdto",{"_index":484,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.getgallerybyid(galleryid",{"_index":486,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.updategallery",{"_index":488,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._jwt.sign(payload",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._newsarticleservice.createnewsarticle",{"_index":609,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.deletenewsarticle(articleid",{"_index":611,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.getnewsarticlebyid(articleid",{"_index":610,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.getnewsarticles(getnewsarticlefilterdto",{"_index":608,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.updaterticle",{"_index":612,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signup(authcredentialsdto",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(authcredentialsdto",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cloudinary.upload_image(file",{"_index":377,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["this.createquerybuilder('event",{"_index":397,"title":{},"body":{"classes/EventRepository.html":{}}}],["this.createquerybuilder('gallery",{"_index":509,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["this.createquerybuilder('newsarticle",{"_index":636,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["this.eventrepository.createevent(createeventdto",{"_index":422,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventrepository.delete",{"_index":428,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventrepository.findone",{"_index":425,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventrepository.getevents(geteventfilterdto",{"_index":423,"title":{},"body":{"injectables/EventService.html":{}}}],["this.findone",{"_index":721,"title":{},"body":{"classes/UserRepository.html":{}}}],["this.galleryrepository.creategallery(creategallerydto",{"_index":524,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.galleryrepository.delete",{"_index":527,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.galleryrepository.findone",{"_index":526,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.galleryrepository.getgalleries(getgalleryfilterdto",{"_index":525,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.geteventbyid(eventid",{"_index":433,"title":{},"body":{"injectables/EventService.html":{}}}],["this.getgallerybyid(galleryid",{"_index":530,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.getnewsarticlebyid(articleidid",{"_index":663,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.hashpassword(password",{"_index":712,"title":{},"body":{"classes/UserRepository.html":{}}}],["this.logger.error('an",{"_index":408,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["this.logger.error(`error",{"_index":385,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["this.logger.verbose",{"_index":328,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["this.repositiory.createnewsarticle(createnewsarticledto",{"_index":658,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.repositiory.delete",{"_index":661,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.repositiory.findone",{"_index":660,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.repositiory.getnewsarticles(getnewsarticlefilter",{"_index":659,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.userrepository.findone",{"_index":568,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["this.userrepository.signup(authcredentialsdto",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.validateuser",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["title",{"_index":240,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{}}}],["token.model",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"classes/UserRepository.html":{}}}],["tokenpayload",{"_index":192,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["touch",{"_index":826,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":226,"title":{},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["twitter",{"_index":832,"title":{},"body":{"index.html":{}}}],["type",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":283,"title":{},"body":{"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{}}}],["typeormmodule.forfeature([eventrepository",{"_index":351,"title":{},"body":{"modules/EventModule.html":{}}}],["typeormmodule.forfeature([galleryrepository",{"_index":496,"title":{},"body":{"modules/GalleryModule.html":{}}}],["typeormmodule.forfeature([newsarticlerepository",{"_index":620,"title":{},"body":{"modules/NewsArticleModule.html":{}}}],["typeormmodule.forfeature([userrepository",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":790,"title":{},"body":{"index.html":{}}}],["ui",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["unauthorizedexception('user",{"_index":569,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["unauthorizedexception('username",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["unique",{"_index":453,"title":{},"body":{"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["unique(['title",{"_index":454,"title":{},"body":{"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["unique(['username",{"_index":698,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":804,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":267,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["updatedatecolumn",{"_index":282,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["updatedatecolumn({name",{"_index":278,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["updateevent",{"_index":290,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/NewsArticleController.html":{}}}],["updateevent(articleid",{"_index":596,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["updateevent(eventid",{"_index":305,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["updateeventdto",{"_index":306,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["updateeventdto.detail",{"_index":436,"title":{},"body":{"injectables/EventService.html":{}}}],["updateeventdto.publishdate",{"_index":438,"title":{},"body":{"injectables/EventService.html":{}}}],["updateeventdto.title",{"_index":434,"title":{},"body":{"injectables/EventService.html":{}}}],["updategallery",{"_index":461,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["updategallery(galleryid",{"_index":472,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["updategallerydto",{"_index":473,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["updategallerydto.description",{"_index":533,"title":{},"body":{"injectables/GalleryService.html":{}}}],["updategallerydto.title",{"_index":531,"title":{},"body":{"injectables/GalleryService.html":{}}}],["updatenewsarticledto",{"_index":597,"title":{},"body":{"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{}}}],["updatenewsarticledto.datepublished",{"_index":668,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updatenewsarticledto.fullarticle",{"_index":666,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updatenewsarticledto.title",{"_index":664,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updaterticle",{"_index":643,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updaterticle(articleidid",{"_index":656,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["upload",{"_index":378,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"modules/SharedModule.html":{}}}],["upload_image",{"_index":210,"title":{},"body":{"classes/Cloudinary.html":{}}}],["upload_image(file",{"_index":211,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["uploadedfile",{"_index":102,"title":{"interfaces/uploadedFile.html":{}},"body":{"controllers/AuthController.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{}}}],["uploadresponse",{"_index":227,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["useguards",{"_index":316,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["useguards(authguard",{"_index":326,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["useinterceptors",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":334,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["usepipes",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["usepipes(validationpipe",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["user",{"_index":97,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GalleryRepository.html":{},"classes/JwtStrategy.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.entity",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"classes/UserRepository.html":{}}}],["user.password",{"_index":711,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.repository",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["user.salt",{"_index":709,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.save",{"_index":713,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.username",{"_index":708,"title":{},"body":{"classes/UserRepository.html":{}}}],["username",{"_index":128,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":164,"title":{"classes/UserRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["validate",{"_index":555,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["validate(payload",{"_index":557,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["validateuser",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["validateuser(authcredentialsdto",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["validationpipe",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["validator",{"_index":143,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"dependencies.html":{}}}],["value",{"_index":355,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":217,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["variable",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":845,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["watch",{"_index":799,"title":{},"body":{"index.html":{}}}],["weak",{"_index":133,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["website",{"_index":830,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":820,"title":{},"body":{"index.html":{}}}],["z",{"_index":131,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["z])(?=.*[a",{"_index":130,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEventModule\n\nEventModule\n\nAppModule -->\n\nEventModule->AppModule\n\n\n\n\n\nGalleryModule\n\nGalleryModule\n\nAppModule -->\n\nGalleryModule->AppModule\n\n\n\n\n\nNewsArticleModule\n\nNewsArticleModule\n\nAppModule -->\n\nNewsArticleModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EventModule\n                        \n                        \n                            GalleryModule\n                        \n                        \n                            NewsArticleModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { EventModule } from './event/event.module';\nimport { GalleryModule } from './gallery/gallery.module';\nimport { AuthModule } from './auth/auth.module';\nimport { SharedModule } from './shared/shared.module';\nimport { NewsArticleModule } from './news-article/news-article.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TypeOrmConfig } from './config/typeorm.config';\n\n@Module({\n  imports: [\n    EventModule,\n    GalleryModule,\n    NewsArticleModule,\n    SharedModule,\n    AuthModule,\n    TypeOrmModule.forRoot(TypeOrmConfig),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Welcome to the Police api, please prepend /api to view the swagger documentation to allow ease of consumption 😋';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                signUp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \nsignUp(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/sign_up')@UsePipes(ValidationPipe)\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { User } from 'src/auth/user.entity';\nimport {\n  Body,\n  Controller,\n  HttpCode,\n  Post,\n  UploadedFile,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\nimport { AuthCredentialsDTO } from 'src/auth/dtos/auth-dto';\n\n@Controller('auth')\n@ApiTags('Authentication')\n@ApiBearerAuth()\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n  @Post('/sign_up')\n  @UsePipes(ValidationPipe)\n  signUp(@Body() authCredentialsDTO: AuthCredentialsDTO): Promise {\n    return this.authService.signUp(authCredentialsDTO);\n  }\n  @Post('/login')\n  login(\n    @Body() authCredentialsDTO: AuthCredentialsDTO,\n  ): Promise {\n    return this.authService.validateUser(authCredentialsDTO);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCredentialsDTO.html":{"url":"classes/AuthCredentialsDTO.html","title":"class - AuthCredentialsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCredentialsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()@MinLength(8)@MaxLength(50)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Password too weak'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/auth-dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()@MinLength(4)@MaxLength(50)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/auth-dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class AuthCredentialsDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(4)\n  @MaxLength(50)\n  username: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  @MaxLength(50)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Password too weak',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCredentialsDTO-1.html":{"url":"classes/AuthCredentialsDTO-1.html","title":"class - AuthCredentialsDTO-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCredentialsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()@MinLength(8)@MaxLength(50)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Password too weak'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dtos/auth-dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()@MinLength(4)@MaxLength(50)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dtos/auth-dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class AuthCredentialsDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(4)\n  @MaxLength(50)\n  username: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  @MaxLength(50)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Password too weak',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport * as config from 'config';\nimport { SharedModule } from 'src/shared/shared.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt-strategy';\nimport { UserRepository } from './user.repository';\nconst jwtConfig = config.get('jwt');\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserRepository]),\n    JwtModule.register({\n      secret: jwtConfig.secret,\n      signOptions: { expiresIn: jwtConfig.expiresIn },\n    }),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    SharedModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [JwtStrategy, PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository, _JWT: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _JWT\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AuthCredentialsDTO } from './dtos/auth-dto';\nimport { TokenPayload } from './token.model';\nimport { User } from './user.entity';\nimport { UserRepository } from './user.repository';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(UserRepository)\n    private userRepository: UserRepository,\n    private _JWT: JwtService,\n  ) {}\n\n  async signUp(authCredentialsDTO: AuthCredentialsDTO): Promise {\n    return this.userRepository.signUp(authCredentialsDTO);\n  }\n\n  async validateUser(\n    authCredentialsDTO: AuthCredentialsDTO,\n  ): Promise {\n    const { username } = await this.userRepository.validateUser(\n      authCredentialsDTO,\n    );\n    if (username == null) {\n      throw new UnauthorizedException('Username or password incorrect');\n    }\n    const payload: TokenPayload = { username };\n    const accessToken = await this._JWT.sign(payload);\n    return { accessToken };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cloudinary.html":{"url":"classes/Cloudinary.html","title":"class - Cloudinary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cloudinary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/cloudinary.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                upload_image\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload_image\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload_image(file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/cloudinary.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport * as config from 'config';\n\nconst cloudinaryConfig = config.cloudinary;\nconst logger = new Logger();\nvar cloudinary = require('cloudinary').v2;\ncloudinary.config({\n  cloud_name: cloudinaryConfig.cloud_name,\n  api_key: cloudinaryConfig.api_key,\n  api_secret: cloudinaryConfig.secret,\n});\nexport class Cloudinary {\n  async upload_image(file: Express.Multer.File) {\n    try {\n      const uploadResponse = await cloudinary.uploader.upload(file.path, {});\n      return uploadResponse;\n    } catch (err) {\n      logger.error(err);\n    }\n  }\n}\nexport interface uploadedFile {\n  secure_url: string;\n  public_id: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEventDTO.html":{"url":"classes/CreateEventDTO.html","title":"class - CreateEventDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEventDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/dtos/create-event-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detail\n                            \n                            \n                                publishDate\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/create-event-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/create-event-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/create-event-dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateEventDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  publishDate: Date;\n  @ApiProperty()\n  @IsNotEmpty()\n  detail: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGalleryDTO.html":{"url":"classes/CreateGalleryDTO.html","title":"class - CreateGalleryDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGalleryDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/dtos/create-gallery.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/create-gallery.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/create-gallery.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateGalleryDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsArticleDTO.html":{"url":"classes/CreateNewsArticleDTO.html","title":"class - CreateNewsArticleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsArticleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/dtos/create-news-article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datePublished\n                            \n                            \n                                fullArticle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/create-news-article.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullArticle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/create-news-article.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/create-news-article.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateNewsArticleDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  fullArticle: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  datePublished: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Event.html":{"url":"classes/Event.html","title":"class - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                detail\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                publishDate\n                            \n                            \n                                title\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Event extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n  @Column()\n  title: string;\n  @Column()\n  image: string;\n  @Column()\n  publishDate: Date;\n  @Column()\n  detail: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventController.html":{"url":"controllers/EventController.html","title":"controller - EventController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                event\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEvent\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                getEventById\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                            \n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEvent(createEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(eventId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventById\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventById(eventId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEvents(getEventFilterDTO: GetEventFilterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('events')\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getEventFilterDTO\n                                    \n                                                GetEventFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \nupdateEvent(eventId: number, file: Express.Multer.File, updateEventDTO: CreateEventDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { EventService } from './event.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Logger,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { DeleteResult } from 'typeorm';\nimport { CreateEventDTO } from './dtos/create-event-dto';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { GetEventFilterDTO } from './dtos/get-event-dto';\nimport { Event } from './event.entity';\n\n@Controller('event')\n@ApiTags('events')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class EventController {\n  private logger = new Logger();\n  constructor(private _eventService: EventService) {}\n  @Get('events')\n  async getEvents(\n    @Query() getEventFilterDTO: GetEventFilterDTO,\n  ): Promise> {\n    this.logger.verbose(\n      `Getting events with Filter: ${JSON.stringify(getEventFilterDTO)}`,\n    );\n    return this._eventService.getEvents(getEventFilterDTO);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  @UseInterceptors(FileInterceptor('file'))\n  async createEvent(\n    @Body() createEventDTO: CreateEventDTO,\n    @UploadedFile() file: Express.Multer.File,\n  ): Promise {\n    return this._eventService.createEvent(createEventDTO, file);\n  }\n\n  @Get('/:id')\n  getEventById(@Param('id', ParseIntPipe) eventId: number): Promise {\n    return this._eventService.getEventById(eventId);\n  }\n  @Delete('/:id')\n  deleteEvent(\n    @Param('id', ParseIntPipe) eventId: number,\n  ): Promise {\n    return this._eventService.deleteEvent(eventId);\n  }\n\n  @Patch('/:id')\n  @UseInterceptors(FileInterceptor('file'))\n  updateEvent(\n    @Param('id', ParseIntPipe) eventId: number,\n    @UploadedFile() file: Express.Multer.File,\n    @Body()\n    updateEventDTO: CreateEventDTO,\n  ): Promise {\n    return this._eventService.updateEvent(eventId, updateEventDTO, file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventModule.html":{"url":"modules/EventModule.html","title":"module - EventModule","body":"\n                   \n\n\n\n\n    Modules\n    EventModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventModule\n\n\n\ncluster_EventModule_imports\n\n\n\ncluster_EventModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nEventModule\n\nEventModule\n\nEventModule -->\n\nAuthModule->EventModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventModule -->\n\nSharedModule->EventModule\n\n\n\n\n\nEventService\n\nEventService\n\nEventModule -->\n\nEventService->EventModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/event/event.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EventService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EventController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { EventRepository } from './event.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EventService } from './event.service';\nimport { Module } from '@nestjs/common';\nimport { EventController } from './event.controller';\nimport { EntityRepository } from 'typeorm';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { SharedModule } from 'src/shared/shared.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([EventRepository]),\n    AuthModule,\n    SharedModule,\n  ],\n  controllers: [EventController],\n  providers: [EventService],\n})\nexport class EventModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventRepository.html":{"url":"classes/EventRepository.html","title":"class - EventRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEvent\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.repository.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.repository.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEvent(createEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.repository.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEvents(filterDTO: GetEventFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.repository.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDTO\n                                    \n                                                GetEventFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { EntityRepository, Repository } from 'typeorm';\nimport { CreateEventDTO } from './dtos/create-event-dto';\nimport {\n  paginate,\n  Pagination,\n  IPaginationOptions,\n} from 'nestjs-typeorm-paginate';\nimport { GetEventFilterDTO } from './dtos/get-event-dto';\nimport { Event } from './event.entity';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n@EntityRepository(Event)\nexport class EventRepository extends Repository {\n  private cloudinary = new Cloudinary();\n  private logger = new Logger();\n  async createEvent(\n    createEventDTO: CreateEventDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const { title, detail, publishDate } = createEventDTO;\n    const event = new Event();\n    (event.title = title),\n      (event.detail = detail),\n      (event.publishDate = publishDate);\n    if (!file) {\n      throw new BadRequestException('Please ensure that you select an image');\n    }\n    const res = await this.cloudinary.upload_image(file);\n    if (res == null) {\n      throw new BadRequestException(\n        'Could not upload file, please check your internet connection',\n      );\n    } else {\n      const { secure_url } = res;\n      event.image = secure_url;\n    }\n\n    try {\n      await event.save();\n      return event;\n    } catch (error) {\n      this.logger.error(`Error occured`, error.stack);\n      throw new InternalServerErrorException('An error occured while creating');\n    }\n  }\n  async getEvents(\n    filterDTO: GetEventFilterDTO,\n  ): Promise> {\n    const { search, page, limit } = filterDTO;\n    const pagee = page || 1;\n    const limitt = limit > 10 ? 10 : limit || 10;\n    const skipped = (pagee - 1) * limitt;\n    const query = await this.createQueryBuilder('event');\n    if (search) {\n      query.andWhere('event.title LIKE :search OR event.detail LIKE :search', {\n        search: `%${search}%`,\n      });\n    }\n    query.orderBy('event.id', 'DESC');\n    query.offset(skipped);\n    query.limit(limitt);\n    try {\n      const events = await query.getManyAndCount();\n      return {\n        pagination: { page: pagee, limit: limitt, count: events[1] },\n        data: events[0],\n      };\n    } catch (error) {\n      this.logger.error('An error occured while fetching', error.stack);\n      throw new InternalServerErrorException('Couldnt fetch events');\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEvent\n                            \n                            \n                                    Async\n                                deleteEvent\n                            \n                            \n                                    Async\n                                getEventById\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                            \n                                    Async\n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventRepository: EventRepository)\n                    \n                \n                        \n                            \n                                Defined in src/event/event.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventRepository\n                                                  \n                                                        \n                                                                        EventRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEvent(createEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteEvent(eventId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEventById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEventById(eventId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEvents(getEventFilterDTO: GetEventFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getEventFilterDTO\n                                    \n                                                GetEventFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEvent(eventId: number, updateEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { EventRepository } from './event.repository';\nimport { DeleteResult } from 'typeorm';\nimport { CreateEventDTO } from './dtos/create-event-dto';\nimport { GetEventFilterDTO } from './dtos/get-event-dto';\nimport { Event } from './event.entity';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Injectable()\nexport class EventService {\n  private cloudinary = new Cloudinary();\n  constructor(\n    @InjectRepository(EventRepository)\n    private eventRepository: EventRepository,\n  ) {}\n  async createEvent(\n    createEventDTO: CreateEventDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    return this.eventRepository.createEvent(createEventDTO, file);\n  }\n  async getEvents(\n    getEventFilterDTO: GetEventFilterDTO,\n  ): Promise> {\n    return this.eventRepository.getEvents(getEventFilterDTO);\n  }\n\n  async getEventById(eventId: number): Promise {\n    const found = await this.eventRepository.findOne({\n      where: { id: eventId },\n    });\n    if (!found)\n      throw new NotFoundException(`No Event with id ${eventId} found`);\n    return found;\n  }\n  async deleteEvent(eventId: number): Promise {\n    const affected: DeleteResult = await this.eventRepository.delete({\n      id: eventId,\n    });\n    if (affected.affected === 0) {\n      throw new NotFoundException(`No Event with id ${eventId} found`);\n    }\n    return affected.raw;\n  }\n  async updateEvent(\n    eventId: number,\n    updateEventDTO: CreateEventDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const existingEvent = await this.getEventById(eventId);\n    updateEventDTO.title == null\n      ? null\n      : (existingEvent.title = updateEventDTO.title);\n    updateEventDTO.detail == null\n      ? null\n      : (existingEvent.detail = updateEventDTO.detail);\n    updateEventDTO.publishDate == null\n      ? null\n      : (existingEvent.publishDate = updateEventDTO.publishDate);\n\n    if (file) {\n      const res = await this.cloudinary.upload_image(file);\n      if (res == null) {\n        throw new BadRequestException(\n          'Could not upload file, please check your internet connection',\n        );\n      } else {\n        const { secure_url } = res;\n        existingEvent.image = secure_url;\n      }\n    }\n\n    await existingEvent.save();\n    return existingEvent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Gallery.html":{"url":"classes/Gallery.html","title":"class - Gallery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Gallery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                image_public_id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                title\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image_public_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from 'typeorm';\n@Entity()\n@Unique(['title'])\nexport class Gallery extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n  @Column()\n  title: string;\n  @Column()\n  description: string;\n  @Column()\n  imageUrl: string;\n  @Column()\n  image_public_id: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GalleryController.html":{"url":"controllers/GalleryController.html","title":"controller - GalleryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GalleryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gallery\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGallery\n                            \n                            \n                                deleteGallery\n                            \n                            \n                                    Async\n                                getGalleries\n                            \n                            \n                                getGalleryById\n                            \n                            \n                                updateGallery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGallery(createGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteGallery\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteGallery(galleryId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleries(getGalleryFilterDTO: GetGalleryFilterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getGalleryFilterDTO\n                                    \n                                                GetGalleryFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGalleryById\n                        \n                        \n                    \n                \n            \n            \n                \ngetGalleryById(galleryId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGallery\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGallery(galleryId: number, file: Express.Multer.File, updateGalleryDTO: CreateGalleryDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateGalleryDTO } from './dtos/create-gallery.dto';\nimport { Gallery } from './gallery.entity';\nimport { GetGalleryFilterDTO } from './dtos/get-gallery-dto';\nimport { GalleryService } from './gallery.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Logger,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { DeleteResult } from 'typeorm';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Controller('gallery')\n@ApiTags('gallery')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class GalleryController {\n  private logger = new Logger();\n  constructor(private _galleryService: GalleryService) {}\n  @Get()\n  async getGalleries(\n    @Query() getGalleryFilterDTO: GetGalleryFilterDTO,\n  ): Promise> {\n    this.logger.verbose(\n      `Getting galleries with Filter: ${JSON.stringify(getGalleryFilterDTO)}`,\n    );\n    return this._galleryService.getGalleries(getGalleryFilterDTO);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  @UseInterceptors(FileInterceptor('file'))\n  async createGallery(\n    @Body() createGalleryDTO: CreateGalleryDTO,\n    @UploadedFile() file: Express.Multer.File,\n  ): Promise {\n    return this._galleryService.createGallery(createGalleryDTO, file);\n  }\n\n  @Get('/:id')\n  getGalleryById(\n    @Param('id', ParseIntPipe) galleryId: number,\n  ): Promise {\n    return this._galleryService.getGalleryById(galleryId);\n  }\n  @Delete('/:id')\n  deleteGallery(\n    @Param('id', ParseIntPipe) galleryId: number,\n  ): Promise {\n    return this._galleryService.deleteGallery(galleryId);\n  }\n\n  @Patch('/:id')\n  @UseInterceptors(FileInterceptor('file'))\n  updateGallery(\n    @Param('id', ParseIntPipe) galleryId: number,\n    @UploadedFile() file: Express.Multer.File,\n    @Body()\n    updateGalleryDTO: CreateGalleryDTO,\n  ): Promise {\n    return this._galleryService.updateGallery(\n      galleryId,\n      updateGalleryDTO,\n      file,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GalleryModule.html":{"url":"modules/GalleryModule.html","title":"module - GalleryModule","body":"\n                   \n\n\n\n\n    Modules\n    GalleryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GalleryModule\n\n\n\ncluster_GalleryModule_imports\n\n\n\ncluster_GalleryModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nGalleryModule\n\nGalleryModule\n\nGalleryModule -->\n\nAuthModule->GalleryModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nGalleryModule -->\n\nSharedModule->GalleryModule\n\n\n\n\n\nGalleryService\n\nGalleryService\n\nGalleryModule -->\n\nGalleryService->GalleryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gallery/gallery.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GalleryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GalleryController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SharedModule } from 'src/shared/shared.module';\nimport { AuthModule } from './../auth/auth.module';\nimport { GalleryService } from './gallery.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { GalleryController } from './gallery.controller';\nimport { GalleryRepository } from './gallery.repository';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([GalleryRepository]),\n    AuthModule,\n    SharedModule,\n  ],\n  controllers: [GalleryController],\n  providers: [GalleryService],\n})\nexport class GalleryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GalleryRepository.html":{"url":"classes/GalleryRepository.html","title":"class - GalleryRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GalleryRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGallery\n                            \n                            \n                                    Async\n                                getGalleries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.repository.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.repository.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGallery(createGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.repository.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleries(filterDTO: GetGalleryFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.repository.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDTO\n                                    \n                                                GetGalleryFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateGalleryDTO } from './dtos/create-gallery.dto';\nimport { GetGalleryFilterDTO } from './dtos/get-gallery-dto';\nimport { EntityRepository, Repository } from 'typeorm';\nimport { Gallery } from './gallery.entity';\nimport { User } from 'src/auth/user.entity';\nimport {\n  BadRequestException,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n@EntityRepository(Gallery)\nexport class GalleryRepository extends Repository {\n  private cloudinary = new Cloudinary();\n  private logger = new Logger();\n  async createGallery(\n    createGalleryDTO: CreateGalleryDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const { title, description } = createGalleryDTO;\n    const gallery = new Gallery();\n    (gallery.title = title), (gallery.description = description);\n    if (!file) {\n      throw new BadRequestException('Please ensure that you select an image');\n    }\n    const res = await this.cloudinary.upload_image(file);\n    if (res == null) {\n      throw new BadRequestException(\n        'Could not upload file, please check your internet connection',\n      );\n    } else {\n      const { public_id, secure_url } = res;\n      gallery.imageUrl = secure_url;\n      gallery.image_public_id = public_id;\n    }\n\n    try {\n      await gallery.save();\n      return gallery;\n    } catch (error) {\n      this.logger.error(`Error occured`, error.stack);\n      throw new InternalServerErrorException('An error occured while creating');\n    }\n  }\n  async getGalleries(\n    filterDTO: GetGalleryFilterDTO,\n  ): Promise> {\n    const { search, page, limit } = filterDTO;\n    const pagee = page || 1;\n    const limitt = limit > 10 ? 10 : limit || 10;\n    const skipped = (pagee - 1) * limitt;\n    const query = this.createQueryBuilder('gallery');\n    if (search) {\n      query.andWhere(\n        'gallery.title LIKE :search OR gallery.description LIKE :search',\n        {\n          search: `%${search}%`,\n        },\n      );\n    }\n    query.orderBy('gallery.id', 'DESC');\n    query.offset(skipped);\n    query.limit(limitt);\n    try {\n      const galleries = await query.getManyAndCount();\n      return {\n        pagination: { page: pagee, limit: limitt, count: galleries[1] },\n        data: galleries[0],\n      };\n    } catch (error) {\n      this.logger.error('An error occured while fetching', error.stack);\n      throw new InternalServerErrorException('Couldnt fetch galleries');\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GalleryService.html":{"url":"injectables/GalleryService.html","title":"injectable - GalleryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GalleryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                GalleryRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGallery\n                            \n                            \n                                    Async\n                                deleteGallery\n                            \n                            \n                                    Async\n                                getGalleries\n                            \n                            \n                                    Async\n                                getGalleryById\n                            \n                            \n                                    Async\n                                updateGallery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(galleryRepository: GalleryRepository)\n                    \n                \n                        \n                            \n                                Defined in src/gallery/gallery.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        galleryRepository\n                                                  \n                                                        \n                                                                        GalleryRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGallery(createGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGallery(galleryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleries(getGalleryFilterDTO: GetGalleryFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getGalleryFilterDTO\n                                    \n                                                GetGalleryFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleryById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleryById(galleryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGallery(galleryId: number, updateGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GalleryRepository\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { GetGalleryFilterDTO } from './dtos/get-gallery-dto';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Gallery } from './gallery.entity';\nimport { GalleryRepository } from './gallery.repository';\nimport { DeleteResult } from 'typeorm';\nimport { CreateGalleryDTO } from './dtos/create-gallery.dto';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Injectable()\nexport class GalleryService {\n  private cloudinary = new Cloudinary();\n  GalleryRepository: any;\n  constructor(\n    @InjectRepository(GalleryRepository)\n    private galleryRepository: GalleryRepository,\n  ) {}\n\n  async createGallery(\n    createGalleryDTO: CreateGalleryDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    return this.galleryRepository.createGallery(createGalleryDTO, file);\n  }\n  async getGalleries(\n    getGalleryFilterDTO: GetGalleryFilterDTO,\n  ): Promise> {\n    return this.galleryRepository.getGalleries(getGalleryFilterDTO);\n  }\n\n  async getGalleryById(galleryId: number): Promise {\n    const found = await this.galleryRepository.findOne({\n      where: { id: galleryId },\n    });\n    if (!found)\n      throw new NotFoundException(`No Gallery with id ${galleryId} found`);\n    return found;\n  }\n  async deleteGallery(galleryId: number): Promise {\n    const affected: DeleteResult = await this.galleryRepository.delete({\n      id: galleryId,\n    });\n    if (affected.affected === 0) {\n      throw new NotFoundException(`No Gallery with id ${galleryId} found`);\n    }\n    return affected.raw;\n  }\n  async updateGallery(\n    galleryId: number,\n    updateGalleryDTO: CreateGalleryDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    console.log(updateGalleryDTO);\n    const existingGallery = await this.getGalleryById(galleryId);\n    updateGalleryDTO.title == null\n      ? null\n      : (existingGallery.title = updateGalleryDTO.title);\n    updateGalleryDTO.description == null\n      ? null\n      : (existingGallery.description = updateGalleryDTO.description);\n\n    if (file) {\n      const res = await this.cloudinary.upload_image(file);\n      if (res == null) {\n        throw new BadRequestException(\n          'Could not upload file, please check your internet connection',\n        );\n      } else {\n        const { public_id, secure_url } = res;\n        existingGallery.imageUrl = secure_url;\n        existingGallery.image_public_id = public_id;\n      }\n    }\n\n    await existingGallery.save();\n    return existingGallery;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetEventFilterDTO.html":{"url":"classes/GetEventFilterDTO.html","title":"class - GetEventFilterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetEventFilterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/dtos/get-event-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/get-event-dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/get-event-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/get-event-dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsNotEmpty, IsIn } from 'class-validator';\n\nexport class GetEventFilterDTO {\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  page: number;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  limit: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGalleryFilterDTO.html":{"url":"classes/GetGalleryFilterDTO.html","title":"class - GetGalleryFilterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGalleryFilterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/dtos/get-gallery-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/get-gallery-dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/get-gallery-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/get-gallery-dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsNotEmpty, IsIn } from 'class-validator';\n\nexport class GetGalleryFilterDTO {\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  page: number;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  limit: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetNewsArticleFilterDTO.html":{"url":"classes/GetNewsArticleFilterDTO.html","title":"class - GetNewsArticleFilterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetNewsArticleFilterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/dtos/get-news-article-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/get-news-article-dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/get-news-article-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/get-news-article-dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsNotEmpty, IsIn } from 'class-validator';\n\nexport class GetNewsArticleFilterDTO {\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  page: number;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  limit: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtStrategy.html":{"url":"classes/JwtStrategy.html","title":"class - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserRepository } from './user.repository';\nimport { UnauthorizedException } from '@nestjs/common';\nimport * as config from 'config';\nimport { TokenPayload } from './token.model';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nconst jwtConfig = config.jwt;\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UserRepository)\n    private userRepository: UserRepository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: jwtConfig.secret,\n    });\n  }\n\n  async validate(payload: TokenPayload): Promise {\n    const { username } = payload;\n    const user = await this.userRepository.findOne({ username });\n    if (!user) {\n      throw new UnauthorizedException('user not found');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsArticle.html":{"url":"classes/NewsArticle.html","title":"class - NewsArticle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsArticle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                date_published\n                            \n                            \n                                full_article\n                            \n                            \n                                id\n                            \n                            \n                                preview_imageUrl\n                            \n                            \n                                title\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date_published\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            full_article\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preview_imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from 'typeorm';\n@Entity()\n@Unique(['title'])\nexport class NewsArticle extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n  @Column()\n  title: string;\n  @Column()\n  date_published: Date;\n  @Column()\n  full_article: string;\n  @Column()\n  preview_imageUrl: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsArticleController.html":{"url":"controllers/NewsArticleController.html","title":"controller - NewsArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createWallet\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                    Async\n                                getEventArticles\n                            \n                            \n                                getEventById\n                            \n                            \n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWallet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWallet(createNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(articleId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEventArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEventArticles(getNewsArticleFilterDTO: GetNewsArticleFilterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('articles')\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getNewsArticleFilterDTO\n                                    \n                                                GetNewsArticleFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventById\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventById(articleId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \nupdateEvent(articleId: number, file: Express.Multer.File, updateNewsArticleDTO: CreateNewsArticleDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateNewsArticleDTO } from './dtos/create-news-article.dto';\nimport { GetNewsArticleFilterDTO } from './dtos/get-news-article-dto';\nimport { NewsArticleService } from './news-article.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Logger,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { DeleteResult } from 'typeorm';\nimport { NewsArticle } from './news-article.entity';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Controller('article')\n@ApiBearerAuth()\n@ApiTags('article')\n@UseGuards(AuthGuard())\nexport class NewsArticleController {\n  private logger = new Logger();\n  constructor(private _newsArticleService: NewsArticleService) {}\n  @Get('articles')\n  async getEventArticles(\n    @Query() getNewsArticleFilterDTO: GetNewsArticleFilterDTO,\n  ): Promise> {\n    this.logger.verbose(\n      `Getting NewsArticles with Filter: ${JSON.stringify(\n        getNewsArticleFilterDTO,\n      )}`,\n    );\n    return this._newsArticleService.getNewsArticles(getNewsArticleFilterDTO);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  @UseInterceptors(FileInterceptor('file'))\n  async createWallet(\n    @Body() createNewsArticleDTO: CreateNewsArticleDTO,\n    @UploadedFile() file: Express.Multer.File,\n  ): Promise {\n    return this._newsArticleService.createNewsArticle(\n      createNewsArticleDTO,\n      file,\n    );\n  }\n\n  @Get('/:id')\n  getEventById(\n    @Param('id', ParseIntPipe) articleId: number,\n  ): Promise {\n    return this._newsArticleService.getNewsArticleById(articleId);\n  }\n  @Delete('/:id')\n  deleteEvent(\n    @Param('id', ParseIntPipe) articleId: number,\n  ): Promise {\n    return this._newsArticleService.deleteNewsArticle(articleId);\n  }\n\n  @Patch('/:id')\n  @UseInterceptors(FileInterceptor('file'))\n  updateEvent(\n    @Param('id', ParseIntPipe) articleId: number,\n    @UploadedFile() file: Express.Multer.File,\n    @Body()\n    updateNewsArticleDTO: CreateNewsArticleDTO,\n  ): Promise {\n    return this._newsArticleService.updaterticle(\n      articleId,\n      updateNewsArticleDTO,\n      file,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsArticleModule.html":{"url":"modules/NewsArticleModule.html","title":"module - NewsArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsArticleModule\n\n\n\ncluster_NewsArticleModule_providers\n\n\n\ncluster_NewsArticleModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nNewsArticleModule\n\nNewsArticleModule\n\nNewsArticleModule -->\n\nAuthModule->NewsArticleModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewsArticleModule -->\n\nSharedModule->NewsArticleModule\n\n\n\n\n\nNewsArticleService\n\nNewsArticleService\n\nNewsArticleModule -->\n\nNewsArticleService->NewsArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/news-article/news-article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsArticleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsArticleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NewsArticleRepository } from './news-article.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { NewsArticleController } from './news-article.controller';\nimport { NewsArticleService } from './news-article.service';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { SharedModule } from 'src/shared/shared.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([NewsArticleRepository]),\n    AuthModule,\n    SharedModule,\n  ],\n  controllers: [NewsArticleController],\n  providers: [NewsArticleService],\n})\nexport class NewsArticleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsArticleRepository.html":{"url":"classes/NewsArticleRepository.html","title":"class - NewsArticleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsArticleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewsArticle\n                            \n                            \n                                    Async\n                                getNewsArticles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.repository.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.repository.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewsArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewsArticle(createNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.repository.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNewsArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsArticles(filterDTO: GetNewsArticleFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.repository.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDTO\n                                    \n                                                GetNewsArticleFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsArticle } from './news-article.entity';\nimport { EntityRepository, Repository } from 'typeorm';\nimport {\n  Logger,\n  BadRequestException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { CreateNewsArticleDTO } from './dtos/create-news-article.dto';\nimport { GetNewsArticleFilterDTO } from './dtos/get-news-article-dto';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n@EntityRepository(NewsArticle)\nexport class NewsArticleRepository extends Repository {\n  private cloudinary = new Cloudinary();\n  private logger = new Logger();\n  async createNewsArticle(\n    createNewsArticleDTO: CreateNewsArticleDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const { title, datePublished, fullArticle } = createNewsArticleDTO;\n    const newsArticle = new NewsArticle();\n    (newsArticle.title = title),\n      (newsArticle.date_published = datePublished),\n      (newsArticle.full_article = fullArticle);\n    if (!file) {\n      throw new BadRequestException('Please ensure that you select an image');\n    }\n    const res = await this.cloudinary.upload_image(file);\n    if (res == null) {\n      throw new BadRequestException(\n        'Could not upload file, please check your internet connection',\n      );\n    } else {\n      const { secure_url } = res;\n      newsArticle.preview_imageUrl = secure_url;\n    }\n\n    try {\n      await newsArticle.save();\n      return newsArticle;\n    } catch (error) {\n      this.logger.error(`Error occured`, error.stack);\n      throw new InternalServerErrorException('An error occured while creating');\n    }\n  }\n  async getNewsArticles(\n    filterDTO: GetNewsArticleFilterDTO,\n  ): Promise> {\n    const { search, page, limit } = filterDTO;\n    const pagee = page || 1;\n    const limitt = limit > 10 ? 10 : limit || 10;\n    const skipped = (pagee - 1) * limitt;\n    const query = this.createQueryBuilder('newsArticle');\n    if (search) {\n      query.andWhere(\n        'newsArticle.title LIKE :search OR newsArticle.full_article LIKE :search',\n        {\n          search: `%${search}%`,\n        },\n      );\n    }\n    try {\n      const articles = await query.getManyAndCount();\n      return {\n        pagination: { page: pagee, limit: limitt, count: articles[1] },\n        data: articles[0],\n      };\n    } catch (error) {\n      this.logger.error('An error occured while fetching', error.stack);\n      throw new InternalServerErrorException('Couldnt fetch articles');\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsArticleService.html":{"url":"injectables/NewsArticleService.html","title":"injectable - NewsArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewsArticle\n                            \n                            \n                                    Async\n                                deleteNewsArticle\n                            \n                            \n                                    Async\n                                getNewsArticleById\n                            \n                            \n                                    Async\n                                getNewsArticles\n                            \n                            \n                                    Async\n                                updaterticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repositiory: NewsArticleRepository)\n                    \n                \n                        \n                            \n                                Defined in src/news-article/news-article.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repositiory\n                                                  \n                                                        \n                                                                        NewsArticleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewsArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewsArticle(createNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteNewsArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteNewsArticle(articleIdId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleIdId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNewsArticleById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsArticleById(articleIdId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleIdId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNewsArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsArticles(getNewsArticleFilter: GetNewsArticleFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getNewsArticleFilter\n                                    \n                                                GetNewsArticleFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updaterticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updaterticle(articleIdId: number, updateNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleIdId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { GetNewsArticleFilterDTO } from './dtos/get-news-article-dto';\n\nimport { NewsArticleRepository } from './news-article.repository';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateNewsArticleDTO } from './dtos/create-news-article.dto';\nimport { NewsArticle } from './news-article.entity';\nimport { DeleteResult } from 'typeorm';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Injectable()\nexport class NewsArticleService {\n  private cloudinary = new Cloudinary();\n  constructor(private repositiory: NewsArticleRepository) {}\n  async createNewsArticle(\n    createNewsArticleDTO: CreateNewsArticleDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    return this.repositiory.createNewsArticle(createNewsArticleDTO, file);\n  }\n  async getNewsArticles(\n    getNewsArticleFilter: GetNewsArticleFilterDTO,\n  ): Promise> {\n    return this.repositiory.getNewsArticles(getNewsArticleFilter);\n  }\n\n  async getNewsArticleById(articleIdId: number): Promise {\n    const found = await this.repositiory.findOne({\n      where: { id: articleIdId },\n    });\n    if (!found)\n      throw new NotFoundException(`No Article with id ${articleIdId} found`);\n    return found;\n  }\n  async deleteNewsArticle(articleIdId: number): Promise {\n    const affected: DeleteResult = await this.repositiory.delete({\n      id: articleIdId,\n    });\n    if (affected.affected === 0) {\n      throw new NotFoundException(`No Article with id ${articleIdId} found`);\n    }\n    return affected.raw;\n  }\n  async updaterticle(\n    articleIdId: number,\n    updateNewsArticleDTO: CreateNewsArticleDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const existingArticle = await this.getNewsArticleById(articleIdId);\n    updateNewsArticleDTO.title == null\n      ? null\n      : (existingArticle.title = updateNewsArticleDTO.title);\n    updateNewsArticleDTO.fullArticle == null\n      ? null\n      : (existingArticle.full_article = updateNewsArticleDTO.fullArticle);\n    updateNewsArticleDTO.datePublished == null\n      ? null\n      : (existingArticle.date_published = updateNewsArticleDTO.datePublished);\n\n    if (file) {\n      const res = await this.cloudinary.upload_image(file);\n      if (res == null) {\n        throw new BadRequestException(\n          'Could not upload file, please check your internet connection',\n        );\n      } else {\n        const { secure_url } = res;\n        existingArticle.preview_imageUrl = secure_url;\n      }\n    }\n\n    await existingArticle.save();\n    return existingArticle;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResultDto.html":{"url":"classes/PaginatedResultDto.html","title":"class - PaginatedResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/pagination.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagination\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PaginationDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginationDto {\n  page: number;\n  limit: number;\n  count: number;\n}\n\nexport class PaginatedResultDto {\n  data: T;\n  pagination: PaginationDto;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/pagination.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginationDto {\n  page: number;\n  limit: number;\n  count: number;\n}\n\nexport class PaginatedResultDto {\n  data: T;\n  pagination: PaginationDto;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SharedController.html":{"url":"controllers/SharedController.html","title":"controller - SharedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SharedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/shared.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                shared\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('shared')\nexport class SharedController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            SharedController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { SharedController } from './shared.controller';\n\n@Module({\n  imports: [\n    MulterModule.register({\n      dest: './upload',\n    }),\n  ],\n  controllers: [SharedController],\n  exports: [MulterModule],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/token.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  username: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                salt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Entity,\n  Unique,\n  BaseEntity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n} from 'typeorm';\n\n@Entity()\n@Unique(['username'])\nexport class User extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  username: string;\n  @Column()\n  password: string;\n  @Column()\n  salt: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/user.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string, salt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/user.repository.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/user.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/user.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { EntityRepository, Repository } from 'typeorm';\nimport { User } from './user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { TokenPayload } from './token.model';\nimport { AuthCredentialsDTO } from './dtos/auth-dto';\nconst logger = new Logger();\n@EntityRepository(User)\nexport class UserRepository extends Repository {\n  async signUp(authCredentialsDTO: AuthCredentialsDTO): Promise {\n    const { username, password } = authCredentialsDTO;\n    const user = new User();\n    user.username = username;\n    user.salt = await bcrypt.genSalt();\n    user.password = await this.hashPassword(password, user.salt);\n    try {\n      await user.save();\n      return user;\n    } catch (error) {\n      console.log(error);\n      logger.error(error.stack);\n      if (error.code === '23505') {\n        throw new ConflictException('Username already exists');\n      } else throw new InternalServerErrorException();\n    }\n  }\n\n  async validateUser(\n    authCredentialsDTO: AuthCredentialsDTO,\n  ): Promise {\n    const { username, password } = authCredentialsDTO;\n\n    const user = await this.findOne({ username });\n    if (!user) {\n      return { username: null };\n    }\n\n    const isPasswordCorrect = await bcrypt.compare(password, user.password);\n    if (user && isPasswordCorrect) {\n      return { username };\n    }\n    return { username: null };\n  }\n\n  private async hashPassword(password: string, salt: string): Promise {\n    return await bcrypt.hash(password, salt);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/config/typeorm.config.ts\n            \n            variable\n            dbConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/config/typeorm.config.ts\n            \n            variable\n            TypeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-dto.ts\n            \n            class\n            AuthCredentialsDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-dto.ts\n            \n            class\n            AuthCredentialsDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/get-user-decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-strategy.ts\n            \n            class\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt-strategy.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/token.model.ts\n            \n            interface\n            TokenPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/user.repository.ts\n            \n            class\n            UserRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/user.repository.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            dbConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            TypeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/event/dtos/create-event-dto.ts\n            \n            class\n            CreateEventDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/event/dtos/get-event-dto.ts\n            \n            class\n            GetEventFilterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/event/event.controller.ts\n            \n            controller\n            EventController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/event/event.entity.ts\n            \n            class\n            Event\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/event/event.repository.ts\n            \n            class\n            EventRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/event/event.service.ts\n            \n            injectable\n            EventService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/gallery/dtos/create-gallery.dto.ts\n            \n            class\n            CreateGalleryDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gallery/dtos/get-gallery-dto.ts\n            \n            class\n            GetGalleryFilterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/gallery/gallery.controller.ts\n            \n            controller\n            GalleryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/gallery/gallery.entity.ts\n            \n            class\n            Gallery\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/gallery/gallery.repository.ts\n            \n            class\n            GalleryRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/gallery/gallery.service.ts\n            \n            injectable\n            GalleryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/news-article/dtos/create-news-article.dto.ts\n            \n            class\n            CreateNewsArticleDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/news-article/dtos/get-news-article-dto.ts\n            \n            class\n            GetNewsArticleFilterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/news-article/news-article.controller.ts\n            \n            controller\n            NewsArticleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/news-article/news-article.entity.ts\n            \n            class\n            NewsArticle\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/news-article/news-article.repository.ts\n            \n            class\n            NewsArticleRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/news-article/news-article.service.ts\n            \n            injectable\n            NewsArticleService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/shared/dto/pagination.dto.ts\n            \n            class\n            PaginatedResultDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dto/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/shared.controller.ts\n            \n            controller\n            SharedController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            class\n            Cloudinary\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            interface\n            uploadedFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            variable\n            cloudinary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            variable\n            cloudinaryConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            cloudinary : ^1.25.1\n        \n            config : ^3.3.6\n        \n            nestjs-typeorm-paginate : ^2.3.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.32\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GalleryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_EventModule\n\n\n\ncluster_EventModule_providers\n\n\n\ncluster_GalleryModule\n\n\n\ncluster_GalleryModule_providers\n\n\n\ncluster_NewsArticleModule\n\n\n\ncluster_NewsArticleModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nEventModule\n\nEventModule\n\nEventModule -->\n\nAuthModule->EventModule\n\n\n\n\n\nGalleryModule\n\nGalleryModule\n\nGalleryModule -->\n\nAuthModule->GalleryModule\n\n\n\n\n\nNewsArticleModule\n\nNewsArticleModule\n\nNewsArticleModule -->\n\nAuthModule->NewsArticleModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\nAppModule -->\n\nEventModule->AppModule\n\n\n\nAppModule -->\n\nGalleryModule->AppModule\n\n\n\nAppModule -->\n\nNewsArticleModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\nEventModule -->\n\nSharedModule->EventModule\n\n\n\nGalleryModule -->\n\nSharedModule->GalleryModule\n\n\n\nNewsArticleModule -->\n\nSharedModule->NewsArticleModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEventService\n\nEventService\n\nEventModule -->\n\nEventService->EventModule\n\n\n\n\n\nGalleryService\n\nGalleryService\n\nGalleryModule -->\n\nGalleryService->GalleryModule\n\n\n\n\n\nNewsArticleService\n\nNewsArticleService\n\nNewsArticleModule -->\n\nNewsArticleService->NewsArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/uploadedFile.html":{"url":"interfaces/uploadedFile.html","title":"interface - uploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  uploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/cloudinary.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        public_id\n                                \n                                \n                                        secure_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        public_id\n                                    \n                                \n                                \n                                    \n                                        public_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secure_url\n                                    \n                                \n                                \n                                    \n                                        secure_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport * as config from 'config';\n\nconst cloudinaryConfig = config.cloudinary;\nconst logger = new Logger();\nvar cloudinary = require('cloudinary').v2;\ncloudinary.config({\n  cloud_name: cloudinaryConfig.cloud_name,\n  api_key: cloudinaryConfig.api_key,\n  api_secret: cloudinaryConfig.secret,\n});\nexport class Cloudinary {\n  async upload_image(file: Express.Multer.File) {\n    try {\n      const uploadResponse = await cloudinary.uploader.upload(file.path, {});\n      return uploadResponse;\n    } catch (err) {\n      logger.error(err);\n    }\n  }\n}\nexport interface uploadedFile {\n  secure_url: string;\n  public_id: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cloudinary   (src/.../cloudinary.ts)\n                        \n                        \n                            cloudinaryConfig   (src/.../cloudinary.ts)\n                        \n                        \n                            dbConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            dbConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            GetUser   (src/.../get-user-decorator.ts)\n                        \n                        \n                            jwtConfig   (src/.../auth.module.ts)\n                        \n                        \n                            jwtConfig   (src/.../jwt-strategy.ts)\n                        \n                        \n                            logger   (src/.../user.repository.ts)\n                        \n                        \n                            logger   (src/.../cloudinary.ts)\n                        \n                        \n                            TypeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            TypeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utilities/cloudinary.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('cloudinary').v2\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cloudinaryConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.cloudinary\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n\n\n            \n        \n\n    src/config/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('db')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: dbConfig.type,\n  port: dbConfig.port,\n  host: dbConfig.host,\n  username: dbConfig.username,\n  password: dbConfig.password,\n  database: dbConfig.database,\n  synchronize: dbConfig.synchronize,\n  ssl: dbConfig.ssl,\n  // logging: true,\n  extra: dbConfig.extra,\n\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n}\n                        \n                    \n\n\n            \n        \n\n    src/auth/config/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('db')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: dbConfig.type,\n  port: dbConfig.port,\n  host: dbConfig.host,\n  username: dbConfig.username,\n  password: dbConfig.password,\n  database: dbConfig.database,\n  synchronize: dbConfig.synchronize,\n  ssl: dbConfig.ssl,\n  // logging: true,\n  extra: dbConfig.extra,\n\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n}\n                        \n                    \n\n\n            \n        \n\n    src/auth/get-user-decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GetUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req) => {\n  return req.args[0].user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('jwt')\n                        \n                    \n\n\n            \n        \n\n    src/auth/jwt-strategy.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.jwt\n                        \n                    \n\n\n            \n        \n\n    src/auth/user.repository.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
