var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.248,1,2.366]],["body/controllers/AppController.html",[0,2.064,1,3.914,2,1.672,3,0.243,4,0.208,5,0.208,6,3.972,7,0.392,8,1.726,9,5.556,10,1.398,11,0.023,12,0.606,13,4.669,14,1.398,15,1.627,16,0.436,17,0.805,18,3.575,19,3.972,20,0.243,21,0.264,22,2.669,23,4.669,24,1.242,25,4.669,26,0.015,27,0.018,28,0.015]],["title/modules/AppModule.html",[29,1.248,30,2.366]],["body/modules/AppModule.html",[1,3.676,2,1.7,3,0.18,4,0.154,5,0.154,11,0.023,16,0.51,17,0.597,18,3.601,19,2.948,20,0.18,21,0.196,26,0.011,27,0.015,28,0.011,29,1.939,30,4.765,31,1.597,32,1.709,33,1.981,34,1.981,35,1.709,36,3.095,37,1.836,38,2.948,39,2.948,40,2.948,41,3.107,42,3.908,43,3.908,44,3.908,45,2.903,46,2.713,47,1.981,48,1.981,49,3.466,50,2.713,51,3.466,52,3.466,53,3.466,54,2.948,55,3.466,56,1.709,57,1.836,58,3.466,59,2.15,60,1.496,61,2.608,62,3.466,63,3.466]],["title/injectables/AppService.html",[18,1.992,64,1.411]],["body/injectables/AppService.html",[3,0.243,4,0.208,5,0.208,7,0.392,8,1.726,9,5.556,11,0.023,12,0.606,14,1.398,15,1.627,16,0.353,17,0.805,18,3.295,20,0.243,21,0.264,24,1.242,26,0.015,27,0.018,28,0.015,64,2.334,65,2.669,66,3.972,67,4.669,68,4.669,69,4.669,70,5.764,71,2.303,72,4.669,73,4.669,74,3.972,75,3.972,76,4.669,77,4.669,78,4.669]],["title/controllers/AuthController.html",[0,1.248,79,2.366]],["body/controllers/AuthController.html",[0,1.358,2,1.358,3,0.197,4,0.169,5,0.169,7,0.319,8,1.511,10,1.136,11,0.023,12,0.492,14,1.136,16,0.49,17,0.653,20,0.197,21,0.214,22,2.167,24,1.342,26,0.012,27,0.016,28,0.012,79,3.425,80,3.225,81,2.352,82,3.791,83,5.667,84,3.791,85,3.832,86,5.043,87,3.791,88,1.279,89,1.07,90,0.419,91,1.279,92,2.03,93,1.747,94,3.225,95,3.425,96,3.791,97,2.574,98,1.87,99,2.574,100,2.574,101,2.574,102,2.574,103,2.167,104,2.167,105,3.425,106,2.574,107,1.443,108,3.24,109,3.225,110,2.853,111,1.443,112,3.791,113,3.791,114,3.791,115,2.574,116,3.791,117,3.791,118,3.791]],["title/classes/AuthCredentialsDTO.html",[21,0.197,85,1.992]],["body/classes/AuthCredentialsDTO.html",[3,0.216,4,0.185,5,0.185,7,0.349,10,1.604,11,0.023,12,0.695,15,1.767,16,0.405,20,0.216,21,0.303,26,0.013,27,0.017,28,0.013,85,3.062,90,0.593,107,1.582,110,4.46,119,0.981,120,2.376,121,1.19,122,4.02,123,3.14,124,4.157,125,5.357,126,5.357,127,5.357,128,5.357,129,4.157,130,4.157,131,4.157,132,3.14,133,3.14,134,5.927,135,4.157,136,4.157,137,4.157,138,2.05,139,4.157,140,5.357,141,4.157,142,4.157]],["title/modules/AuthModule.html",[29,1.248,41,1.718]],["body/modules/AuthModule.html",[2,1.713,3,0.182,4,0.156,5,0.156,11,0.023,16,0.511,17,0.604,20,0.182,21,0.198,26,0.011,27,0.015,28,0.011,29,1.95,31,1.615,32,1.729,33,2.003,34,2.003,35,1.729,36,3.113,37,2.885,41,3.294,45,2.912,46,2.734,47,2.003,48,2.003,50,2.734,59,2.174,60,1.512,79,3.698,108,3.613,109,2.981,143,2.981,144,3.504,145,2.981,146,2.981,147,4.086,148,2.637,149,3.504,150,2.637,151,4.783,152,2.003,153,2.968,154,2.38,155,3.504,156,3.599,157,2.981,158,2.003,159,2.637,160,1.334,161,2.38,162,2.981,163,3.504,164,3.504,165,3.504,166,2.981,167,3.504,168,3.504,169,3.504,170,3.504,171,3.504]],["title/injectables/AuthService.html",[64,1.411,108,1.992]],["body/injectables/AuthService.html",[3,0.168,4,0.144,5,0.144,7,0.272,8,1.355,11,0.023,12,0.677,14,1.355,16,0.479,17,0.557,20,0.168,21,0.183,24,1.204,26,0.01,27,0.014,28,0.01,60,1.395,64,1.832,65,1.848,85,3.841,88,1.76,89,1.473,90,0.577,91,1.76,92,2.024,93,1.49,108,2.586,111,1.23,122,2.006,123,2.765,150,2.433,158,3.524,159,2.433,160,1.986,172,2.75,173,2.079,174,3.849,175,4.439,176,2.807,177,2.75,178,5.218,179,5.652,180,3.233,181,3.849,182,3.233,183,2.75,184,3.233,185,2.75,186,2.195,187,2.75,188,2.586,189,2.433,190,2.433,191,2.75,192,1.722,193,3.233,194,1.832,195,3.233,196,1.595,197,1.49,198,0.968,199,3.233,200,3.233,201,2.75,202,4.524,203,3.233]],["title/classes/Cloudinary.html",[21,0.197,204,1.326]],["body/classes/Cloudinary.html",[3,0.207,4,0.177,5,0.232,7,0.335,8,1.561,11,0.023,12,0.517,14,1.193,15,1.471,16,0.394,17,0.687,20,0.271,21,0.225,24,1.06,26,0.013,27,0.017,28,0.013,88,1.344,89,1.125,90,0.441,91,1.344,98,1.965,119,0.941,153,3.233,160,2.211,173,1.959,194,1.614,198,1.193,204,2.211,205,2.706,206,5.212,207,4.434,208,2.352,209,3.984,210,2.352,211,2.706,212,2.998,213,3.39,214,2.998,215,3.39,216,3.39,217,3.39,218,3.39,219,3.39,220,3.39,221,3.39,222,2.278,223,4.434,224,3.39,225,2.278,226,3.39,227,3.39,228,2.278,229,1.965,230,2.706]],["title/classes/CreateEventDTO.html",[21,0.197,231,1.992]],["body/classes/CreateEventDTO.html",[3,0.219,4,0.187,5,0.187,7,0.354,10,1.787,11,0.023,12,0.774,15,1.776,16,0.409,20,0.219,21,0.306,26,0.013,27,0.017,28,0.013,90,0.66,107,1.603,119,0.995,120,2.408,121,1.2,132,3.334,133,3.334,138,2.078,231,3.089,232,5.353,233,3.104,234,4.488,235,4.488,236,2.748,237,4.488,238,3.17,239,3.352,240,4.213,241,4.213]],["title/classes/CreateGalleryDTO.html",[21,0.197,242,1.992]],["body/classes/CreateGalleryDTO.html",[3,0.234,4,0.2,5,0.2,7,0.378,10,1.687,11,0.023,12,0.731,15,1.82,16,0.426,20,0.234,21,0.319,26,0.014,27,0.018,28,0.014,90,0.623,107,1.713,119,1.063,121,1.252,132,3.259,133,3.259,138,2.22,236,2.834,237,4.24,242,3.221,243,5.233,244,3.829,245,4.177,246,4.501,247,4.501]],["title/classes/CreateNewsArticleDTO.html",[21,0.197,248,1.992]],["body/classes/CreateNewsArticleDTO.html",[3,0.216,4,0.185,5,0.185,7,0.349,10,1.775,11,0.023,12,0.769,15,1.767,16,0.405,20,0.216,21,0.303,26,0.013,27,0.017,28,0.013,56,3.088,90,0.656,107,1.582,119,0.981,121,1.19,132,3.317,133,3.317,138,2.05,236,2.731,237,4.46,239,3.324,248,3.062,249,3.088,250,5.326,251,3.536,252,5.043,253,5.043,254,4.157,255,4.157,256,4.157]],["title/classes/Event.html",[21,0.197,233,1.718]],["body/classes/Event.html",[3,0.186,4,0.159,5,0.159,7,0.3,10,1.948,11,0.023,12,0.844,15,1.795,16,0.271,20,0.186,21,0.202,26,0.011,27,0.015,28,0.011,89,1.369,90,0.719,119,0.844,121,1.077,233,2.391,234,4.14,235,4.14,236,2.535,239,3.945,257,3.041,258,2.234,259,3.736,260,4.64,261,2.915,262,3.736,263,4.64,264,2.69,265,3.574,266,4.554,267,3.574,268,1.541,269,3.736,270,3.574,271,3.574,272,3.574,273,3.574,274,2.69,275,3.574,276,3.648,277,3.292,278,3.648,279,1.071]],["title/controllers/EventController.html",[0,1.248,280,2.366]],["body/controllers/EventController.html",[0,0.878,2,0.878,3,0.128,4,0.109,5,0.272,7,0.206,8,1.108,10,1.595,11,0.023,12,0.691,14,1.595,16,0.472,17,0.423,20,0.128,21,0.139,22,1.402,24,1.417,26,0.008,27,0.012,28,0.008,81,1.522,88,1.796,89,1.504,90,0.589,91,1.796,92,2.234,95,3.026,97,2.513,98,2.198,99,1.666,100,1.666,101,1.666,102,1.666,103,1.402,104,1.402,105,2.513,106,1.666,107,0.934,111,1.408,115,1.666,152,1.402,173,1.888,192,0.934,198,0.735,208,2.267,210,1.805,231,3.5,233,2.448,268,1.946,279,0.735,280,2.513,281,2.087,282,3.353,283,3.353,284,2.785,285,3.353,286,3.353,287,1.846,288,1.846,289,2.453,290,2.087,291,2.785,292,2.453,293,4.764,294,2.087,295,2.785,296,2.453,297,2.087,298,3.201,299,3.7,300,2.453,301,2.087,302,4.222,303,1.846,304,2.453,305,2.115,306,2.087,307,1.846,308,1.846,309,3.734,310,1.846,311,2.115,312,1.846,313,1.846,314,1.846,315,2.453,316,1.402,317,1.13,318,0.878,319,1.13,320,2.453,321,2.453,322,1.846,323,2.453,324,1.846,325,1.666,326,2.087,327,1.846,328,2.453,329,2.453,330,2.785,331,2.453,332,2.453,333,2.453,334,2.785,335,2.453,336,1.846,337,2.453]],["title/modules/EventModule.html",[29,1.248,42,2.162]],["body/modules/EventModule.html",[2,1.825,3,0.2,4,0.171,5,0.171,11,0.023,16,0.509,17,0.663,20,0.2,21,0.218,26,0.012,27,0.016,28,0.012,29,2.045,31,1.774,32,1.899,33,2.201,34,2.201,35,1.899,36,3.264,37,2.04,41,3.204,42,4.265,45,2.993,46,2.912,47,2.201,48,2.201,50,2.912,59,2.388,60,1.661,154,2.614,279,1.153,280,3.878,305,3.713,306,3.275,338,3.275,339,3.85,340,3.275,341,3.85,342,2.388,343,3.275,344,3.85,345,2.388,346,3.275,347,3.85]],["title/classes/EventRepository.html",[21,0.197,342,2.162]],["body/classes/EventRepository.html",[3,0.117,4,0.1,5,0.241,7,0.189,8,1.039,11,0.023,12,0.617,14,1.039,16,0.441,17,0.388,20,0.117,21,0.128,24,0.923,26,0.007,27,0.011,28,0.007,71,1.112,88,1.17,89,0.98,90,0.384,91,1.17,92,1.701,111,1.321,119,0.532,121,0.771,160,2.323,173,1.827,192,2.062,194,1.924,196,1.112,197,2.189,198,1.79,204,2.062,208,1.713,210,2.194,222,1.983,225,1.983,229,1.711,231,3.226,233,2.672,234,2.611,235,2.611,236,1.599,258,1.599,262,1.531,279,1.039,282,3.183,285,3.183,287,1.696,298,2.716,311,1.288,317,1.039,318,0.807,319,1.039,326,2.952,342,2.153,345,1.398,348,1.918,349,2.624,350,1.838,351,1.838,352,2.254,353,2.254,354,2.254,355,2.254,356,2.254,357,3.183,358,1.983,359,1.531,360,1.288,361,2.952,362,2.153,363,2.254,364,1.918,365,1.112,366,1.918,367,2.254,368,2.254,369,3.469,370,2.254,371,1.696,372,1.696,373,1.696,374,2.418,375,1.288,376,1.194,377,1.288,378,1.288,379,1.288,380,2.254,381,2.254,382,3.226,383,1.696,384,3.183,385,2.611,386,1.696,387,1.696,388,3.097,389,2.087,390,2.343,391,3.183,392,2.611,393,3.183,394,3.183,395,1.696,396,2.254,397,2.254,398,2.254,399,1.918,400,1.918,401,1.918,402,1.696,403,1.398,404,2.254,405,1.398,406,2.254,407,1.696,408,1.696,409,1.696,410,1.696]],["title/injectables/EventService.html",[64,1.411,305,1.992]],["body/injectables/EventService.html",[3,0.111,4,0.095,5,0.267,7,0.179,8,0.995,11,0.023,12,0.718,14,1.497,16,0.445,17,0.367,20,0.111,21,0.121,24,1.33,26,0.007,27,0.011,28,0.007,60,0.92,64,1.345,65,1.218,71,1.051,88,1.786,89,1.495,90,0.586,91,1.786,92,2.152,111,1.264,121,0.738,160,1.902,173,2.173,176,2.061,186,1.447,192,1.755,194,2.024,196,2.728,197,1.881,198,1.497,204,2.015,208,2.144,229,1.639,231,3.359,233,2.465,261,2.443,268,1.867,279,0.638,282,3.072,283,2.5,284,2.5,285,3.072,286,3.072,287,1.604,290,2.826,293,4.866,294,2.826,297,1.813,298,3.027,301,1.813,302,3.473,305,1.899,316,1.899,317,0.982,318,0.763,319,0.982,342,3.285,343,1.813,350,1.129,351,1.129,358,1.899,360,1.218,365,1.051,366,1.813,374,2.334,375,1.218,376,1.129,377,1.218,378,1.218,379,1.218,411,1.813,412,2.131,413,3.322,414,2.131,415,2.131,416,2.131,417,2.131,418,2.131,419,1.604,420,2.131,421,2.131,422,2.131,423,3.394,424,2.131,425,2.5,426,1.604,427,2.131,428,1.604,429,1.447,430,1.604,431,3.322,432,2.131,433,3.322,434,2.131,435,3.322,436,2.131,437,3.322,438,2.131,439,2.131,440,2.131]],["title/classes/Gallery.html",[21,0.197,441,1.846]],["body/classes/Gallery.html",[3,0.185,4,0.158,5,0.158,7,0.299,10,1.945,11,0.023,12,0.843,15,1.865,16,0.269,20,0.185,21,0.201,26,0.011,27,0.015,28,0.011,89,1.363,90,0.718,119,0.839,121,1.073,236,2.527,239,3.651,245,3.725,258,2.225,259,3.725,260,4.631,261,2.906,263,4.631,264,2.674,266,4.549,268,1.535,269,3.725,274,2.674,276,3.634,277,3.279,278,3.634,279,1.065,441,2.559,442,3.024,443,5.485,444,5.485,445,3.554,446,3.554,447,3.554,448,3.554,449,3.554,450,3.554,451,3.554,452,2.674,453,3.024]],["title/controllers/GalleryController.html",[0,1.248,454,2.366]],["body/controllers/GalleryController.html",[0,0.877,2,0.877,3,0.127,4,0.109,5,0.272,7,0.206,8,1.107,10,1.594,11,0.023,12,0.691,14,1.594,16,0.472,17,0.422,20,0.127,21,0.138,22,1.399,24,1.416,26,0.008,27,0.012,28,0.008,81,1.519,88,1.795,89,1.502,90,0.589,91,1.795,92,2.233,95,3.022,97,2.509,98,2.195,99,1.662,100,1.662,101,1.662,102,1.662,103,1.399,104,1.399,105,2.509,106,1.662,107,0.932,111,0.932,115,1.662,152,1.399,173,1.887,192,0.932,198,0.733,208,2.266,210,1.802,242,3.498,268,1.945,279,0.733,288,1.842,291,2.78,295,2.78,303,1.842,307,1.842,308,1.842,309,3.731,310,1.842,311,2.112,312,1.842,313,1.842,316,1.399,317,1.128,318,0.877,319,1.128,322,1.842,324,1.842,325,1.662,327,1.842,330,2.78,334,3.349,336,1.842,365,1.208,441,2.358,454,2.509,455,2.083,456,3.349,457,3.787,458,3.349,459,3.787,460,3.787,461,1.842,462,2.448,463,2.083,464,2.448,465,4.941,466,2.083,467,3.198,468,2.448,469,2.083,470,2.448,471,2.083,472,4.218,473,2.448,474,1.842,475,1.842,476,2.112,477,2.083,478,2.448,479,2.448,480,2.448,481,2.083,482,2.448,483,2.448,484,2.448,485,2.448,486,2.448,487,2.448]],["title/modules/GalleryModule.html",[29,1.248,43,2.162]],["body/modules/GalleryModule.html",[2,1.843,3,0.203,4,0.174,5,0.174,11,0.023,16,0.503,17,0.674,20,0.203,21,0.221,26,0.012,27,0.016,28,0.012,29,2.061,31,1.802,32,1.929,33,2.235,34,2.235,35,1.929,36,3.289,37,2.072,41,3.218,43,4.276,45,3.006,46,2.942,47,2.235,48,2.235,50,2.942,54,3.326,59,2.426,60,1.687,154,2.655,454,3.908,476,3.729,477,3.326,488,3.326,489,3.326,490,3.91,491,3.91,492,3.91,493,2.426,494,3.326,495,3.91]],["title/classes/GalleryRepository.html",[21,0.197,493,2.162]],["body/classes/GalleryRepository.html",[3,0.118,4,0.101,5,0.242,7,0.191,8,1.045,11,0.023,12,0.619,14,1.045,16,0.442,17,0.391,20,0.118,21,0.128,24,0.928,26,0.007,27,0.011,28,0.007,71,1.12,88,1.177,89,0.985,90,0.386,91,1.177,92,1.708,93,1.046,94,1.932,111,0.864,119,0.536,121,0.775,160,2.327,173,1.832,192,2.068,194,1.721,196,1.12,197,2.197,198,1.794,204,2.068,208,1.721,210,2.2,222,1.994,225,1.994,229,1.721,230,2.369,236,1.608,242,3.234,245,2.369,258,1.608,262,1.542,279,0.68,311,1.298,317,1.046,318,0.813,319,1.046,345,1.409,349,2.636,350,1.849,351,1.849,357,3.197,358,1.994,359,1.542,360,1.298,362,1.409,365,1.12,371,1.708,372,1.708,373,1.708,374,2.429,375,1.298,376,1.203,377,1.298,378,1.298,379,1.298,382,3.238,383,1.708,384,3.197,385,2.625,386,1.708,387,1.708,388,3.106,389,2.096,390,2.352,391,3.197,392,2.625,393,3.197,394,3.197,395,1.708,399,1.932,400,1.932,401,1.932,402,1.708,403,1.409,405,1.409,407,1.708,408,1.708,409,1.708,410,1.708,441,2.727,456,3.197,458,3.197,461,1.708,467,2.726,474,1.708,475,1.708,481,2.968,493,2.165,496,1.932,497,2.27,498,2.27,499,2.27,500,2.27,501,2.27,502,2.27,503,3.489,504,3.489,505,2.27,506,2.27,507,2.27,508,2.27,509,1.932,510,2.27,511,2.27,512,2.27]],["title/injectables/GalleryService.html",[64,1.411,476,1.992]],["body/injectables/GalleryService.html",[3,0.11,4,0.095,5,0.267,7,0.178,8,0.992,11,0.023,12,0.741,14,1.495,16,0.444,17,0.366,20,0.11,21,0.12,24,1.328,26,0.007,27,0.011,28,0.007,60,0.917,64,1.342,65,1.214,71,1.048,88,1.783,89,1.493,90,0.611,91,1.783,92,2.15,111,0.808,121,0.736,160,1.899,173,2.171,176,2.056,186,1.442,192,1.752,194,2.021,196,2.461,197,1.877,198,1.495,204,2.012,208,2.141,229,1.634,230,2.25,242,3.356,261,2.438,268,1.865,279,0.636,316,1.894,317,0.979,318,0.761,319,0.979,350,1.125,351,1.125,358,1.894,360,1.214,365,1.048,374,2.329,375,1.214,376,1.125,377,1.214,378,1.214,379,1.214,419,1.598,423,3.389,425,2.493,426,1.598,428,1.598,429,1.442,430,1.598,441,2.438,456,3.065,457,2.819,458,3.065,459,2.819,460,3.466,461,1.598,463,2.819,465,4.86,466,1.807,467,3.023,469,2.819,471,1.807,472,3.466,474,1.598,475,1.598,476,1.894,493,3.642,494,1.807,513,1.807,514,2.124,515,3.313,516,2.124,517,2.124,518,2.124,519,2.124,520,2.124,521,2.124,522,2.124,523,2.124,524,2.124,525,2.124,526,2.124,527,2.124,528,3.313,529,2.124,530,3.313,531,2.124,532,3.313,533,2.124,534,2.124,535,2.124,536,2.124]],["title/classes/GetEventFilterDTO.html",[21,0.197,298,1.992]],["body/classes/GetEventFilterDTO.html",[3,0.207,4,0.177,5,0.177,7,0.335,10,1.74,11,0.023,12,0.754,15,1.471,16,0.394,20,0.207,21,0.295,26,0.013,27,0.017,28,0.013,90,0.642,107,1.517,119,0.941,120,2.278,121,1.158,132,3.264,133,3.264,138,1.965,233,3.039,238,2.998,268,1.958,298,2.979,314,4.635,388,3.32,389,2.865,390,2.865,537,4.37,538,4.37,539,3.39,540,2.998,541,4.635,542,2.998,543,4.37,544,4.37]],["title/classes/GetGalleryFilterDTO.html",[21,0.197,467,1.992]],["body/classes/GetGalleryFilterDTO.html",[3,0.207,4,0.177,5,0.177,7,0.335,10,1.74,11,0.023,12,0.754,15,1.471,16,0.394,20,0.207,21,0.295,26,0.013,27,0.017,28,0.013,90,0.642,107,1.517,119,0.941,120,2.278,121,1.158,132,3.264,133,3.264,138,1.965,268,1.958,388,3.32,389,2.865,390,2.865,441,3.264,467,2.979,537,4.37,538,4.37,540,2.998,541,4.635,542,2.998,543,4.37,544,4.37,545,5.241,546,3.984,547,3.984]],["title/classes/GetNewsArticleFilterDTO.html",[21,0.197,548,1.992]],["body/classes/GetNewsArticleFilterDTO.html",[3,0.202,4,0.173,5,0.173,7,0.327,10,1.718,11,0.023,12,0.745,15,1.447,16,0.388,20,0.202,21,0.29,26,0.012,27,0.016,28,0.012,56,3.009,90,0.635,107,1.479,119,0.917,120,2.221,121,1.139,132,3.232,133,3.232,138,1.917,238,2.924,249,3.009,268,1.938,388,3.279,389,2.83,390,2.83,537,4.317,538,4.317,539,3.306,540,2.924,541,4.59,542,2.924,543,4.317,544,4.317,548,2.93,549,5.19,550,3.785]],["title/classes/JwtStrategy.html",[21,0.197,147,2.162]],["body/classes/JwtStrategy.html",[3,0.182,4,0.156,5,0.156,7,0.294,8,1.43,11,0.023,12,0.62,14,1.047,16,0.498,17,0.602,20,0.182,21,0.198,24,0.93,26,0.011,27,0.015,28,0.011,60,1.508,88,1.61,89,1.348,90,0.528,91,1.61,92,1.71,93,2.693,119,0.825,123,2.529,147,2.962,152,1.998,153,2.962,156,2.63,157,2.973,158,3.61,159,2.63,160,2.07,161,2.373,166,2.973,173,1.834,176,2.962,177,2.973,185,2.973,186,2.373,188,3.34,189,2.63,190,2.63,191,2.973,192,1.33,194,1.415,197,1.61,198,1.047,201,4.062,258,1.61,423,2.373,551,4.092,552,2.63,553,4.774,554,3.495,555,4.774,556,3.495,557,3.495,558,2.973,559,3.495,560,2.973,561,3.495,562,3.495,563,3.495,564,3.495,565,3.495,566,3.495,567,3.495]],["title/classes/NewsArticle.html",[21,0.197,568,1.992]],["body/classes/NewsArticle.html",[3,0.177,4,0.151,5,0.151,7,0.286,10,1.922,11,0.023,12,0.833,15,1.768,16,0.257,20,0.177,21,0.192,26,0.011,27,0.015,28,0.011,57,3.464,89,1.323,90,0.71,119,0.803,121,1.041,236,2.47,239,3.886,249,3.225,258,2.159,259,3.64,260,4.559,261,2.84,263,4.559,264,2.558,266,4.506,268,1.489,269,3.64,274,2.558,276,3.525,277,3.181,278,3.525,279,1.018,452,2.558,453,2.892,568,2.678,569,2.892,570,5.36,571,5.36,572,5.36,573,3.4,574,3.4,575,3.4,576,3.4,577,3.4,578,3.4,579,3.4]],["title/controllers/NewsArticleController.html",[0,1.248,580,2.366]],["body/controllers/NewsArticleController.html",[0,0.841,2,0.841,3,0.122,4,0.104,5,0.269,7,0.197,8,1.072,10,1.564,11,0.023,12,0.678,14,1.564,16,0.467,17,0.404,20,0.122,21,0.133,22,1.342,24,1.39,26,0.007,27,0.011,28,0.007,56,2.393,57,2.917,81,1.456,88,1.762,89,1.475,90,0.578,91,1.762,92,2.209,95,2.945,97,2.43,98,2.14,99,1.594,100,1.594,101,1.594,102,1.594,103,1.342,104,1.342,105,2.43,106,1.594,107,0.893,111,0.893,115,1.594,152,1.342,173,1.856,192,0.893,198,0.703,208,2.229,210,1.757,248,3.526,249,2.715,268,1.922,279,0.703,283,3.264,284,3.264,286,3.264,288,1.766,291,2.693,295,2.693,303,1.766,307,1.766,308,1.766,309,3.651,310,1.766,311,2.046,312,1.766,313,1.766,316,1.342,317,1.081,318,0.841,319,1.081,322,1.766,324,1.766,325,1.594,327,1.766,330,2.693,334,3.264,336,1.766,365,1.158,548,3.272,550,2.22,568,1.342,580,2.43,581,1.997,582,4.337,583,4.337,584,2.347,585,2.347,586,2.347,587,2.347,588,5.725,589,2.347,590,3.579,591,2.347,592,2.347,593,2.347,594,2.347,595,4.128,596,2.347,597,1.766,598,2.046,599,1.997,600,1.766,601,2.347,602,2.347,603,2.347,604,2.347,605,2.347,606,2.347,607,2.347,608,2.347,609,2.347,610,2.347]],["title/modules/NewsArticleModule.html",[29,1.248,44,2.162]],["body/modules/NewsArticleModule.html",[2,1.825,3,0.2,4,0.171,5,0.171,11,0.023,16,0.502,17,0.663,20,0.2,21,0.218,26,0.012,27,0.016,28,0.012,29,2.045,31,1.774,32,1.899,33,2.201,34,2.201,35,1.899,36,3.264,37,2.04,41,3.204,44,4.265,45,2.993,46,2.912,47,2.201,48,2.201,50,2.912,56,2.817,57,2.04,59,2.388,60,1.661,154,2.614,249,1.899,346,3.275,580,3.878,598,3.713,599,3.275,611,3.275,612,3.275,613,3.85,614,3.85,615,2.388,616,3.275,617,3.85,618,3.85]],["title/classes/NewsArticleRepository.html",[21,0.197,615,2.162]],["body/classes/NewsArticleRepository.html",[3,0.117,4,0.1,5,0.241,7,0.189,8,1.039,11,0.023,12,0.617,14,1.039,16,0.427,17,0.388,20,0.117,21,0.128,24,0.923,26,0.007,27,0.011,28,0.007,56,2.087,57,2.718,71,1.112,88,1.17,89,0.98,90,0.384,91,1.17,92,1.701,111,0.858,119,0.532,121,0.771,160,2.323,173,1.827,192,2.062,194,1.713,196,1.112,197,2.189,198,1.79,204,2.062,208,1.713,210,2.194,222,1.983,225,1.983,229,1.711,236,1.599,248,3.226,249,2.53,252,2.952,253,2.952,258,1.599,262,1.531,279,0.675,311,1.288,317,1.039,318,0.807,319,1.039,345,1.398,349,2.624,350,1.838,351,1.838,357,3.183,358,1.983,359,1.531,360,1.288,362,1.398,365,1.112,371,1.696,372,1.696,373,1.696,374,2.418,375,1.288,376,1.194,377,1.288,378,1.288,379,1.288,382,3.226,383,1.696,384,3.183,385,2.611,386,1.696,387,1.696,388,3.097,389,2.087,390,2.343,391,3.183,392,2.611,393,3.183,394,3.183,395,1.696,402,1.696,403,1.398,405,1.398,407,1.696,408,1.696,409,1.696,410,1.696,509,1.918,548,2.716,550,1.398,568,2.716,597,1.696,600,1.696,615,2.153,619,1.918,620,3.599,621,3.599,622,2.254,623,2.254,624,1.918,625,2.254,626,2.254,627,2.254,628,2.254,629,3.469,630,2.254,631,3.469,632,2.254,633,2.254,634,2.254,635,3.469,636,2.254,637,2.254]],["title/injectables/NewsArticleService.html",[64,1.411,598,1.992]],["body/injectables/NewsArticleService.html",[3,0.109,4,0.093,5,0.266,7,0.176,8,0.981,11,0.023,12,0.713,14,1.484,16,0.43,17,0.361,20,0.109,21,0.118,22,1.196,24,1.318,26,0.007,27,0.01,28,0.007,56,2.251,57,3.011,64,1.326,65,1.196,71,1.032,88,1.772,89,1.483,90,0.581,91,1.772,92,2.141,111,0.796,121,0.727,160,1.886,173,2.165,176,1.298,192,1.536,194,2.006,196,2.709,197,1.859,198,1.484,204,2,208,2.128,229,1.615,248,3.34,249,2.804,261,2.418,268,1.857,279,0.627,316,1.872,317,0.964,318,0.749,319,0.964,350,1.108,351,1.108,358,1.872,360,1.196,365,1.032,374,2.306,375,1.196,376,1.108,377,1.196,378,1.196,379,1.196,419,1.574,423,3.364,425,2.464,426,1.574,428,1.574,429,1.42,430,1.574,548,2.609,550,2.503,568,1.196,595,3.432,597,1.574,598,1.872,600,1.574,615,2.832,616,1.78,620,3.432,621,3.432,624,1.78,638,1.78,639,3.274,640,3.274,641,4.034,642,2.092,643,3.274,644,3.274,645,2.092,646,3.274,647,2.092,648,5.684,649,3.274,650,2.092,651,2.092,652,2.092,653,3.274,654,2.092,655,2.092,656,2.092,657,2.092,658,2.092,659,2.092,660,3.274,661,2.092,662,3.274,663,2.092,664,3.274,665,2.092,666,3.274,667,2.092,668,2.092,669,2.092]],["title/classes/PaginatedResultDto.html",[21,0.197,318,1.248]],["body/classes/PaginatedResultDto.html",[3,0.245,4,0.21,5,0.21,7,0.397,11,0.022,12,0.753,20,0.302,21,0.328,26,0.015,27,0.019,28,0.015,90,0.642,119,1.115,121,1.29,268,1.997,318,2.079,362,3.899,389,2.329,390,2.329,403,2.929,405,3.899,670,3.553,671,4.938,672,4.721,673,4.268,674,4.721]],["title/classes/PaginationDto.html",[21,0.197,673,2.366]],["body/classes/PaginationDto.html",[3,0.239,4,0.205,5,0.205,7,0.387,11,0.022,12,0.806,20,0.297,21,0.323,26,0.015,27,0.018,28,0.015,90,0.687,119,1.086,121,1.269,268,2.163,318,1.647,362,2.854,389,3.064,390,3.064,403,3.854,405,2.854,670,3.461,671,3.913,673,4.218,675,4.6,676,4.6,677,4.6]],["title/controllers/SharedController.html",[0,1.248,678,2.366]],["body/controllers/SharedController.html",[0,1.867,2,1.867,3,0.271,4,0.232,5,0.232,11,0.022,16,0.395,17,0.899,20,0.271,21,0.295,26,0.017,27,0.02,28,0.017,81,3.235,678,4.184,679,4.436,680,5.214,681,5.214]],["title/modules/SharedModule.html",[29,1.248,45,1.605]],["body/modules/SharedModule.html",[2,2.088,3,0.247,4,0.212,5,0.212,11,0.023,16,0.477,17,0.82,20,0.247,21,0.269,26,0.015,27,0.019,28,0.015,29,2.088,31,2.192,37,2.521,45,2.687,50,2.72,103,2.72,104,2.72,376,2.521,678,4.282,682,4.757,683,5.831,684,4.757,685,4.757,686,4.757]],["title/interfaces/TokenPayload.html",[188,1.992,228,1.992]],["body/interfaces/TokenPayload.html",[3,0.266,4,0.227,5,0.227,7,0.429,11,0.022,15,1.836,20,0.266,26,0.016,27,0.019,28,0.016,90,0.565,121,1.352,123,3.567,188,3.479,228,2.919,687,3.843,688,4.345]],["title/classes/User.html",[21,0.197,93,1.605]],["body/classes/User.html",[3,0.214,4,0.183,5,0.183,7,0.346,10,1.868,11,0.023,12,0.809,15,1.868,16,0.312,20,0.214,21,0.233,26,0.013,27,0.017,28,0.013,90,0.69,93,2.453,119,0.972,121,1.183,122,3.66,123,3.126,258,2.453,259,4.006,261,3.126,266,4.572,268,1.691,269,4.006,277,3.614,279,1.233,452,3.097,689,3.501,690,5.019,691,4.116,692,4.116,693,4.116,694,4.116,695,4.116,696,4.116]],["title/classes/UserRepository.html",[21,0.197,158,1.992]],["body/classes/UserRepository.html",[3,0.142,4,0.122,5,0.122,7,0.23,8,1.201,11,0.023,12,0.616,14,1.422,15,1.645,16,0.441,17,0.471,20,0.142,21,0.155,24,1.483,26,0.009,27,0.013,28,0.009,85,3.755,88,1.602,89,1.341,90,0.525,91,1.602,92,2.086,93,2.774,111,1.04,119,0.645,122,2.947,123,3.19,158,2.292,160,2.217,173,2.125,174,3.411,175,4.041,181,3.411,183,2.324,187,2.324,188,1.561,189,2.055,190,2.055,192,1.808,194,2.359,196,1.977,197,1.847,198,1.567,210,1.923,222,1.561,225,1.561,258,1.847,279,0.818,345,1.695,349,2.947,359,2.722,382,1.855,690,4.452,697,2.055,698,4.009,699,4.009,700,2.731,701,2.731,702,2.731,703,2.731,704,3.411,705,2.731,706,2.731,707,4.009,708,2.731,709,4.009,710,2.731,711,2.731,712,2.731,713,2.731,714,2.731,715,2.731,716,2.731,717,2.731,718,2.731,719,2.731,720,4.009,721,2.731,722,2.731]],["title/coverage.html",[723,3.585]],["body/coverage.html",[0,2.005,1,1.666,5,0.109,6,2.087,11,0.023,18,1.402,21,0.384,26,0.008,27,0.012,28,0.008,35,1.21,56,1.825,57,2.629,61,1.846,64,2.157,66,2.087,75,2.087,79,1.666,80,2.087,85,1.402,90,0.271,93,1.705,98,1.21,108,1.402,110,1.846,120,3.044,147,1.522,148,1.846,158,1.402,161,2.513,172,2.087,188,1.402,198,0.735,204,1.408,205,3.617,210,1.499,211,1.666,228,2.115,231,1.402,232,2.087,233,2.198,242,1.402,243,2.087,244,2.087,248,1.402,249,2.762,250,2.087,251,2.087,257,2.087,280,1.666,281,2.087,298,1.402,305,1.402,314,1.846,318,0.878,342,1.522,348,2.087,411,2.087,429,4.874,441,1.961,442,2.087,454,1.666,455,2.087,467,1.402,476,1.402,493,1.522,496,2.087,513,2.087,545,2.087,548,1.402,549,2.087,550,1.522,551,2.785,552,2.785,568,1.402,569,2.087,580,1.666,581,2.087,598,1.402,615,1.522,619,2.087,638,2.087,670,2.785,673,1.666,678,1.666,679,2.087,688,2.087,689,2.087,697,2.785,723,1.846,724,2.453,725,2.453,726,5.326,727,6.123,728,6.338,729,5.983,730,5.326,731,2.087,732,2.087,733,2.087,734,4.963,735,3.148,736,2.087,737,4.456,738,5.326,739,2.453,740,2.087,741,2.453,742,2.453,743,2.453]],["title/dependencies.html",[32,2.068,744,2.905]],["body/dependencies.html",[11,0.023,17,0.731,21,0.24,26,0.014,27,0.017,28,0.014,32,2.092,60,1.83,74,3.608,103,2.424,104,3.102,107,1.614,138,2.092,150,3.191,152,2.424,153,2.631,156,3.191,204,1.614,279,1.625,361,3.608,364,3.608,558,5.091,704,3.608,745,5.984,746,4.241,747,4.241,748,5.426,749,4.241,750,4.241,751,4.241,752,4.241,753,4.241,754,4.241,755,4.241,756,4.241,757,4.241,758,4.241,759,4.241,760,4.241,761,4.241,762,4.241,763,4.241,764,4.241,765,4.241,766,4.241,767,4.241,768,4.241,769,4.241,770,4.241]],["title/miscellaneous/functions.html",[771,1.973,772,3.567]],["body/miscellaneous/functions.html",[7,0.457,11,0.02,26,0.017,27,0.02,28,0.017,35,3.293,740,4.628,771,3.694,772,4.628,773,5.44]],["title/index.html",[7,0.244,325,1.973,774,2.905]],["body/index.html",[4,0.177,11,0.023,26,0.013,27,0.017,28,0.013,71,1.965,245,2.706,349,2.472,723,2.998,775,3.984,776,3.984,777,5.212,778,3.984,779,3.984,780,3.984,781,3.984,782,3.984,783,3.984,784,5.808,785,3.984,786,3.984,787,3.984,788,6.681,789,3.984,790,3.984,791,3.984,792,6.558,793,3.984,794,3.984,795,5.212,796,3.984,797,3.984,798,3.984,799,3.984,800,5.212,801,5.212,802,3.984,803,3.984,804,3.984,805,5.212,806,5.212,807,3.984,808,3.984,809,3.984,810,3.984,811,3.984,812,3.39,813,3.984,814,3.984,815,3.984,816,3.984,817,3.984,818,3.984,819,3.984,820,3.984,821,3.984,822,3.984,823,3.984,824,3.984,825,3.984,826,3.984,827,3.984,828,3.984,829,3.984]],["title/modules.html",[31,2.195]],["body/modules.html",[11,0.019,26,0.016,27,0.019,28,0.016,30,3.372,31,2.288,41,2.449,42,3.081,43,3.081,44,3.081,45,2.288,812,5.807,830,6.826,831,6.826,832,6.934,833,4.965,834,4.965]],["title/overview.html",[835,4.053]],["body/overview.html",[2,1.273,11,0.023,18,3.136,26,0.011,27,0.015,28,0.011,29,1.273,30,4.736,31,1.638,32,1.753,33,2.032,34,2.032,35,1.753,36,2.032,37,1.883,38,3.024,39,3.024,40,3.024,41,3.372,42,4.156,43,4.156,44,4.156,45,2.992,46,2.761,47,2.032,48,2.032,65,2.032,108,3.136,119,0.839,143,3.024,145,3.024,146,3.024,147,3.651,305,3.136,338,3.024,340,3.024,476,3.136,488,3.024,489,3.024,598,3.136,611,3.024,612,3.024,687,2.674,835,3.024,836,4.829,837,3.554,838,3.554,839,3.554]],["title/interfaces/uploadedFile.html",[98,1.718,228,1.992]],["body/interfaces/uploadedFile.html",[3,0.21,4,0.18,5,0.18,7,0.339,11,0.023,15,1.858,16,0.398,17,0.696,20,0.273,21,0.228,24,1.074,26,0.013,27,0.017,28,0.013,90,0.581,98,2.592,121,1.168,153,3.261,160,2.224,173,1.361,194,1.634,198,1.209,204,2,205,2.741,207,3.434,208,1.634,210,2.367,211,2.741,212,3.037,213,3.434,214,3.037,215,3.434,216,3.434,217,3.434,218,3.434,219,3.434,220,3.434,221,3.434,222,2.307,223,4.471,224,3.434,225,2.307,226,3.434,227,3.434,228,2.307,229,3.054,230,4.204,687,3.037]],["title/miscellaneous/variables.html",[771,1.973,840,3.567]],["body/miscellaneous/variables.html",[7,0.312,11,0.023,24,0.988,26,0.012,27,0.016,28,0.012,61,3.742,90,0.55,93,2.292,122,2.303,123,1.967,148,2.794,161,4.068,162,3.158,198,1.49,204,1.893,205,2.521,210,2.604,211,3.377,212,2.794,214,2.794,350,3.581,351,3.581,551,2.794,552,3.742,560,3.158,697,2.794,731,3.158,732,4.231,733,4.231,735,3.158,736,4.231,771,2.521,840,3.158,841,5.608,842,4.973,843,3.712,844,3.712,845,3.712,846,3.712,847,3.712,848,3.712,849,3.712,850,3.712,851,3.712,852,3.712,853,3.712,854,3.712,855,3.712,856,3.712,857,3.712,858,3.712,859,3.712,860,3.712,861,3.712,862,3.712,863,3.712,864,3.712,865,3.712,866,3.712,867,3.712,868,3.712,869,3.712,870,3.712,871,3.712]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":429,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["0.2.32",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":392,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["1.0.0",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["1.25.1",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":394,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["19",{"_index":838,"title":{},"body":{"overview.html":{}}}],["2",{"_index":839,"title":{},"body":{"overview.html":{}}}],["2.3.2",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["23505",{"_index":715,"title":{},"body":{"classes/UserRepository.html":{}}}],["3.0.2",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["3.3.6",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":837,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":836,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_eventservice",{"_index":323,"title":{},"body":{"controllers/EventController.html":{}}}],["_galleryservice",{"_index":480,"title":{},"body":{"controllers/GalleryController.html":{}}}],["_jwt",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["_newsarticleservice",{"_index":603,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["accesstoken",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["affected",{"_index":426,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["affected.affected",{"_index":428,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["affected.raw",{"_index":430,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["allow",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["already",{"_index":717,"title":{},"body":{"classes/UserRepository.html":{}}}],["amazing",{"_index":813,"title":{},"body":{"index.html":{}}}],["api",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["api_key",{"_index":218,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["api_secret",{"_index":220,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["apibearerauth",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["apiproperty",{"_index":132,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["apiproperty()@isnotempty",{"_index":237,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(4)@maxlength(50",{"_index":130,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(8)@maxlength(50)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":124,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["apiproperty({required",{"_index":537,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["apitags",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["apitags('article",{"_index":602,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["apitags('authentication",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('events",{"_index":321,"title":{},"body":{"controllers/EventController.html":{}}}],["apitags('gallery",{"_index":479,"title":{},"body":{"controllers/GalleryController.html":{}}}],["app",{"_index":790,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":783,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["article",{"_index":550,"title":{},"body":{"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["article.controller",{"_index":617,"title":{},"body":{"modules/NewsArticleModule.html":{}}}],["article.controller.ts",{"_index":581,"title":{},"body":{"controllers/NewsArticleController.html":{},"coverage.html":{}}}],["article.controller.ts:36",{"_index":591,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:50",{"_index":585,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:61",{"_index":593,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:67",{"_index":587,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:75",{"_index":596,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.dto",{"_index":597,"title":{},"body":{"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["article.dto.ts",{"_index":251,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"coverage.html":{}}}],["article.dto.ts:10",{"_index":255,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{}}}],["article.dto.ts:13",{"_index":254,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{}}}],["article.dto.ts:7",{"_index":256,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{}}}],["article.entity",{"_index":600,"title":{},"body":{"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["article.entity.ts",{"_index":569,"title":{},"body":{"classes/NewsArticle.html":{},"coverage.html":{}}}],["article.entity.ts:14",{"_index":576,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:16",{"_index":573,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:18",{"_index":579,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:20",{"_index":578,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:22",{"_index":574,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:24",{"_index":575,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:26",{"_index":577,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["article.module.ts",{"_index":614,"title":{},"body":{"modules/NewsArticleModule.html":{}}}],["article.repository",{"_index":616,"title":{},"body":{"modules/NewsArticleModule.html":{},"injectables/NewsArticleService.html":{}}}],["article.repository.ts",{"_index":619,"title":{},"body":{"classes/NewsArticleRepository.html":{},"coverage.html":{}}}],["article.repository.ts:14",{"_index":622,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.repository.ts:15",{"_index":623,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.repository.ts:16",{"_index":625,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.repository.ts:46",{"_index":627,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.service",{"_index":599,"title":{},"body":{"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{}}}],["article.service.ts",{"_index":638,"title":{},"body":{"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["article.service.ts:17",{"_index":643,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:19",{"_index":645,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:25",{"_index":652,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:31",{"_index":650,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:39",{"_index":647,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:48",{"_index":655,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article/dtos/create",{"_index":250,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"coverage.html":{}}}],["article/dtos/get",{"_index":549,"title":{},"body":{"classes/GetNewsArticleFilterDTO.html":{},"coverage.html":{}}}],["article/news",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["articleid",{"_index":588,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["articleidid",{"_index":648,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["articles",{"_index":635,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["articles[0",{"_index":637,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["articles[1",{"_index":636,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["async",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["auth",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/GalleryModule.html":{}}}],["authcontroller",{"_index":79,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authcredentialsdto",{"_index":85,"title":{"classes/AuthCredentialsDTO.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"injectables/AuthService.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["authguard",{"_index":313,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["authmodule",{"_index":41,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":822,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":108,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":834,"title":{},"body":{"modules.html":{}}}],["await",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["backers",{"_index":814,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":358,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["badrequestexception('please",{"_index":371,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["baseentity",{"_index":259,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["bcrypt",{"_index":704,"title":{},"body":{"classes/UserRepository.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":721,"title":{},"body":{"classes/UserRepository.html":{}}}],["bcrypt.gensalt",{"_index":708,"title":{},"body":{"classes/UserRepository.html":{}}}],["bcrypt.hash(password",{"_index":722,"title":{},"body":{"classes/UserRepository.html":{}}}],["body",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":832,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":830,"title":{},"body":{"modules.html":{}}}],["building",{"_index":778,"title":{},"body":{"index.html":{}}}],["catch",{"_index":225,"title":{},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["check",{"_index":377,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["class",{"_index":21,"title":{"classes/AuthCredentialsDTO.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{}}}],["classes",{"_index":119,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"overview.html":{}}}],["cloud_name",{"_index":216,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinary",{"_index":204,"title":{"classes/Cloudinary.html":{}},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["cloudinary.config",{"_index":215,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinary.uploader.upload(file.path",{"_index":224,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinaryconfig",{"_index":211,"title":{},"body":{"classes/Cloudinary.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["cloudinaryconfig.api_key",{"_index":219,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinaryconfig.cloud_name",{"_index":217,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinaryconfig.secret",{"_index":221,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_eventmodule",{"_index":338,"title":{},"body":{"modules/EventModule.html":{},"overview.html":{}}}],["cluster_eventmodule_imports",{"_index":339,"title":{},"body":{"modules/EventModule.html":{}}}],["cluster_eventmodule_providers",{"_index":340,"title":{},"body":{"modules/EventModule.html":{},"overview.html":{}}}],["cluster_gallerymodule",{"_index":488,"title":{},"body":{"modules/GalleryModule.html":{},"overview.html":{}}}],["cluster_gallerymodule_imports",{"_index":490,"title":{},"body":{"modules/GalleryModule.html":{}}}],["cluster_gallerymodule_providers",{"_index":489,"title":{},"body":{"modules/GalleryModule.html":{},"overview.html":{}}}],["cluster_newsarticlemodule",{"_index":611,"title":{},"body":{"modules/NewsArticleModule.html":{},"overview.html":{}}}],["cluster_newsarticlemodule_imports",{"_index":613,"title":{},"body":{"modules/NewsArticleModule.html":{}}}],["cluster_newsarticlemodule_providers",{"_index":612,"title":{},"body":{"modules/NewsArticleModule.html":{},"overview.html":{}}}],["column",{"_index":266,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["config",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"classes/Cloudinary.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{}}}],["config.cloudinary",{"_index":212,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["config.get('db",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('jwt",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["config.jwt",{"_index":560,"title":{},"body":{"classes/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["config/typeorm.config",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":703,"title":{},"body":{"classes/UserRepository.html":{}}}],["conflictexception('username",{"_index":716,"title":{},"body":{"classes/UserRepository.html":{}}}],["connection",{"_index":379,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["console.log(error",{"_index":712,"title":{},"body":{"classes/UserRepository.html":{}}}],["console.log(updategallerydto",{"_index":527,"title":{},"body":{"injectables/GalleryService.html":{}}}],["const",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["constructor",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"injectables/NewsArticleService.html":{}}}],["constructor(eventrepository",{"_index":412,"title":{},"body":{"injectables/EventService.html":{}}}],["constructor(galleryrepository",{"_index":514,"title":{},"body":{"injectables/GalleryService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{}}}],["constructor(repositiory",{"_index":642,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["constructor(userrepository",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["consumption",{"_index":78,"title":{},"body":{"injectables/AppService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"controllers/SharedController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"controllers/SharedController.html":{},"coverage.html":{}}}],["controller('article",{"_index":601,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["controller('auth",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('event",{"_index":320,"title":{},"body":{"controllers/EventController.html":{}}}],["controller('gallery",{"_index":478,"title":{},"body":{"controllers/GalleryController.html":{}}}],["controller('shared",{"_index":681,"title":{},"body":{"controllers/SharedController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["count",{"_index":403,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["coverage",{"_index":723,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created_at",{"_index":260,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["createdatecolumn",{"_index":276,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["createdatecolumn({name",{"_index":264,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["createevent",{"_index":282,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["createevent(createeventdto",{"_index":287,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["createeventdto",{"_index":231,"title":{"classes/CreateEventDTO.html":{}},"body":{"classes/CreateEventDTO.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"coverage.html":{}}}],["creategallery",{"_index":456,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["creategallery(creategallerydto",{"_index":461,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["creategallerydto",{"_index":242,"title":{"classes/CreateGalleryDTO.html":{}},"body":{"classes/CreateGalleryDTO.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"coverage.html":{}}}],["createnewsarticle",{"_index":620,"title":{},"body":{"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["createnewsarticle(createnewsarticledto",{"_index":624,"title":{},"body":{"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["createnewsarticledto",{"_index":248,"title":{"classes/CreateNewsArticleDTO.html":{}},"body":{"classes/CreateNewsArticleDTO.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["createparamdecorator((data",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createwallet",{"_index":582,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["createwallet(createnewsarticledto",{"_index":584,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["creating",{"_index":387,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["data",{"_index":405,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["database",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":239,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["date_published",{"_index":570,"title":{},"body":{"classes/NewsArticle.html":{}}}],["datepublished",{"_index":252,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"classes/NewsArticleRepository.html":{}}}],["dbconfig",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconfig.database",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.extra",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.host",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.password",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.port",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.ssl",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.synchronize",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.type",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.username",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["decorator.ts",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/User.html":{}}}],["default",{"_index":350,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["delete",{"_index":307,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["delete('/:id",{"_index":291,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["deleteevent",{"_index":283,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/NewsArticleController.html":{}}}],["deleteevent(articleid",{"_index":586,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["deleteevent(eventid",{"_index":290,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["deletegallery",{"_index":457,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["deletegallery(galleryid",{"_index":463,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["deletenewsarticle",{"_index":639,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["deletenewsarticle(articleidid",{"_index":646,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["deleteresult",{"_index":316,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":399,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{}}}],["description",{"_index":245,"title":{},"body":{"classes/CreateGalleryDTO.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"index.html":{}}}],["dest",{"_index":686,"title":{},"body":{"modules/SharedModule.html":{}}}],["detail",{"_index":234,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{}}}],["development",{"_index":791,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["dto",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["dto.ts",{"_index":120,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/CreateEventDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":240,"title":{},"body":{"classes/CreateEventDTO.html":{}}}],["dto.ts:12",{"_index":547,"title":{},"body":{"classes/GetGalleryFilterDTO.html":{}}}],["dto.ts:13",{"_index":238,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["dto.ts:16",{"_index":131,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["dto.ts:17",{"_index":546,"title":{},"body":{"classes/GetGalleryFilterDTO.html":{}}}],["dto.ts:18",{"_index":539,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["dto.ts:25",{"_index":129,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["dto.ts:7",{"_index":241,"title":{},"body":{"classes/CreateEventDTO.html":{}}}],["dto.ts:8",{"_index":540,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["dtos/auth",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["dtos/create",{"_index":317,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["dtos/get",{"_index":365,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["e2e",{"_index":802,"title":{},"body":{"index.html":{}}}],["ease",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["efficient",{"_index":779,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":372,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["entities",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":277,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["entity.{js,ts",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityrepository",{"_index":345,"title":{},"body":{"modules/EventModule.html":{},"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(event",{"_index":367,"title":{},"body":{"classes/EventRepository.html":{}}}],["entityrepository(gallery",{"_index":502,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["entityrepository(newsarticle",{"_index":628,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["entityrepository(user",{"_index":705,"title":{},"body":{"classes/UserRepository.html":{}}}],["err",{"_index":226,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["error",{"_index":382,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{}}}],["error.code",{"_index":714,"title":{},"body":{"classes/UserRepository.html":{}}}],["error.stack",{"_index":385,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["event",{"_index":233,"title":{"classes/Event.html":{}},"body":{"classes/CreateEventDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GetEventFilterDTO.html":{},"coverage.html":{}}}],["event.controller",{"_index":344,"title":{},"body":{"modules/EventModule.html":{}}}],["event.detail",{"_index":369,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.entity",{"_index":366,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["event.image",{"_index":380,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.publishdate",{"_index":370,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.repository",{"_index":343,"title":{},"body":{"modules/EventModule.html":{},"injectables/EventService.html":{}}}],["event.save",{"_index":381,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.service",{"_index":306,"title":{},"body":{"controllers/EventController.html":{},"modules/EventModule.html":{}}}],["event.title",{"_index":368,"title":{},"body":{"classes/EventRepository.html":{}}}],["event/event.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["eventcontroller",{"_index":280,"title":{"controllers/EventController.html":{}},"body":{"controllers/EventController.html":{},"modules/EventModule.html":{},"coverage.html":{}}}],["eventid",{"_index":293,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["eventmodule",{"_index":42,"title":{"modules/EventModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"modules.html":{},"overview.html":{}}}],["eventrepository",{"_index":342,"title":{"classes/EventRepository.html":{}},"body":{"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"coverage.html":{}}}],["events",{"_index":326,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{}}}],["events[0",{"_index":406,"title":{},"body":{"classes/EventRepository.html":{}}}],["events[1",{"_index":404,"title":{},"body":{"classes/EventRepository.html":{}}}],["eventservice",{"_index":305,"title":{"injectables/EventService.html":{}},"body":{"controllers/EventController.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"coverage.html":{},"overview.html":{}}}],["existingarticle",{"_index":660,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.date_published",{"_index":667,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.full_article",{"_index":665,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.preview_imageurl",{"_index":668,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.save",{"_index":669,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.title",{"_index":663,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingevent",{"_index":431,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.detail",{"_index":436,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.image",{"_index":439,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.publishdate",{"_index":438,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.save",{"_index":440,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.title",{"_index":434,"title":{},"body":{"injectables/EventService.html":{}}}],["existinggallery",{"_index":528,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.description",{"_index":533,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.image_public_id",{"_index":535,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.imageurl",{"_index":534,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.save",{"_index":536,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.title",{"_index":531,"title":{},"body":{"injectables/GalleryService.html":{}}}],["exists",{"_index":718,"title":{},"body":{"classes/UserRepository.html":{}}}],["expiresin",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":208,"title":{},"body":{"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"interfaces/uploadedFile.html":{}}}],["extends",{"_index":258,"title":{},"body":{"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["extra",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":557,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":564,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["false",{"_index":544,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["false})@isoptional()@isnotempty",{"_index":538,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["fetch",{"_index":410,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["fetching",{"_index":408,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{}}}],["fileinterceptor",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["filter",{"_index":327,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["filterdto",{"_index":357,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["found",{"_index":423,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"injectables/NewsArticleService.html":{}}}],["framework",{"_index":777,"title":{},"body":{"index.html":{}}}],["full_article",{"_index":571,"title":{},"body":{"classes/NewsArticle.html":{}}}],["fullarticle",{"_index":253,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"classes/NewsArticleRepository.html":{}}}],["function",{"_index":741,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":772,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["galleries",{"_index":481,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{}}}],["galleries[0",{"_index":512,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["galleries[1",{"_index":511,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery",{"_index":441,"title":{"classes/Gallery.html":{}},"body":{"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetGalleryFilterDTO.html":{},"coverage.html":{}}}],["gallery.controller",{"_index":492,"title":{},"body":{"modules/GalleryModule.html":{}}}],["gallery.description",{"_index":504,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.dto",{"_index":474,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["gallery.dto.ts",{"_index":244,"title":{},"body":{"classes/CreateGalleryDTO.html":{},"coverage.html":{}}}],["gallery.dto.ts:10",{"_index":246,"title":{},"body":{"classes/CreateGalleryDTO.html":{}}}],["gallery.dto.ts:7",{"_index":247,"title":{},"body":{"classes/CreateGalleryDTO.html":{}}}],["gallery.entity",{"_index":475,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["gallery.image_public_id",{"_index":506,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.imageurl",{"_index":505,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.repository",{"_index":494,"title":{},"body":{"modules/GalleryModule.html":{},"injectables/GalleryService.html":{}}}],["gallery.save",{"_index":507,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.service",{"_index":477,"title":{},"body":{"controllers/GalleryController.html":{},"modules/GalleryModule.html":{}}}],["gallery.title",{"_index":503,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery/gallery.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["gallerycontroller",{"_index":454,"title":{"controllers/GalleryController.html":{}},"body":{"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"coverage.html":{}}}],["galleryid",{"_index":465,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["gallerymodule",{"_index":43,"title":{"modules/GalleryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GalleryModule.html":{},"modules.html":{},"overview.html":{}}}],["galleryrepository",{"_index":493,"title":{"classes/GalleryRepository.html":{}},"body":{"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"coverage.html":{}}}],["galleryservice",{"_index":476,"title":{"injectables/GalleryService.html":{}},"body":{"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"injectables/GalleryService.html":{},"coverage.html":{},"overview.html":{}}}],["get('/:id",{"_index":295,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["get('articles",{"_index":590,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["get('events",{"_index":299,"title":{},"body":{"controllers/EventController.html":{}}}],["geteventarticles",{"_index":583,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["geteventarticles(getnewsarticlefilterdto",{"_index":589,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["geteventbyid",{"_index":284,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/NewsArticleController.html":{}}}],["geteventbyid(@param('id",{"_index":332,"title":{},"body":{"controllers/EventController.html":{}}}],["geteventbyid(articleid",{"_index":592,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["geteventbyid(eventid",{"_index":294,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["geteventfilterdto",{"_index":298,"title":{"classes/GetEventFilterDTO.html":{}},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GetEventFilterDTO.html":{},"coverage.html":{}}}],["getevents",{"_index":285,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["getevents(filterdto",{"_index":355,"title":{},"body":{"classes/EventRepository.html":{}}}],["getevents(geteventfilterdto",{"_index":297,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["getgalleries",{"_index":458,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["getgalleries(filterdto",{"_index":500,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["getgalleries(getgalleryfilterdto",{"_index":466,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["getgallerybyid",{"_index":459,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["getgallerybyid(galleryid",{"_index":469,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["getgalleryfilterdto",{"_index":467,"title":{"classes/GetGalleryFilterDTO.html":{}},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetGalleryFilterDTO.html":{},"coverage.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getnewsarticlebyid",{"_index":640,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getnewsarticlebyid(articleidid",{"_index":649,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getnewsarticlefilter",{"_index":653,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getnewsarticlefilterdto",{"_index":548,"title":{"classes/GetNewsArticleFilterDTO.html":{}},"body":{"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["getnewsarticles",{"_index":621,"title":{},"body":{"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["getnewsarticles(filterdto",{"_index":626,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["getnewsarticles(getnewsarticlefilter",{"_index":651,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getting",{"_index":325,"title":{"index.html":{}},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["getuser",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":833,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":809,"title":{},"body":{"index.html":{}}}],["hashpassword",{"_index":698,"title":{},"body":{"classes/UserRepository.html":{}}}],["hashpassword(password",{"_index":699,"title":{},"body":{"classes/UserRepository.html":{}}}],["here",{"_index":819,"title":{},"body":{"index.html":{}}}],["host",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":826,"title":{},"body":{"index.html":{}}}],["id",{"_index":261,"title":{},"body":{"classes/Event.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"injectables/GalleryService.html":{},"classes/NewsArticle.html":{},"injectables/NewsArticleService.html":{},"classes/User.html":{}}}],["identifier",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":262,"title":{},"body":{"classes/Event.html":{},"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["image_public_id",{"_index":443,"title":{},"body":{"classes/Gallery.html":{}}}],["imageurl",{"_index":444,"title":{},"body":{"classes/Gallery.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{}}}],["incorrect",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"miscellaneous/functions.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["injectable",{"_index":64,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["injectables",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{},"overview.html":{}}}],["injectrepository",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{}}}],["injectrepository(eventrepository",{"_index":420,"title":{},"body":{"injectables/EventService.html":{}}}],["injectrepository(galleryrepository",{"_index":522,"title":{},"body":{"injectables/GalleryService.html":{}}}],["injectrepository(userrepository",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["installation",{"_index":787,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":789,"title":{},"body":{"index.html":{}}}],["interface",{"_index":228,"title":{"interfaces/TokenPayload.html":{},"interfaces/uploadedFile.html":{}},"body":{"classes/Cloudinary.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{}}}],["interfaces",{"_index":687,"title":{},"body":{"interfaces/TokenPayload.html":{},"overview.html":{},"interfaces/uploadedFile.html":{}}}],["internalservererrorexception",{"_index":359,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{}}}],["internalservererrorexception('an",{"_index":386,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["internalservererrorexception('couldnt",{"_index":409,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["internet",{"_index":378,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["ipaginationoptions",{"_index":363,"title":{},"body":{"classes/EventRepository.html":{}}}],["isin",{"_index":542,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["isnotempty",{"_index":133,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["isoptional",{"_index":541,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["ispasswordcorrect",{"_index":720,"title":{},"body":{"classes/UserRepository.html":{}}}],["isstring",{"_index":134,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["join",{"_index":816,"title":{},"body":{"index.html":{}}}],["json.stringify",{"_index":605,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["json.stringify(geteventfilterdto",{"_index":328,"title":{},"body":{"controllers/EventController.html":{}}}],["json.stringify(getgalleryfilterdto",{"_index":482,"title":{},"body":{"controllers/GalleryController.html":{}}}],["jwt",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtconfig",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconfig.expiresin",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconfig.secret",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":563,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["jwtmodule",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":147,"title":{"classes/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":823,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["license",{"_index":829,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":806,"title":{},"body":{"index.html":{}}}],["limit",{"_index":390,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["limitt",{"_index":393,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["local",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":210,"title":{},"body":{"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["logger.error(err",{"_index":227,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["logger.error(error.stack",{"_index":713,"title":{},"body":{"classes/UserRepository.html":{}}}],["logging",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(authcredentialsdto",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{}}}],["matches",{"_index":135,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":142,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":136,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["maxlength(50",{"_index":140,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["message",{"_index":127,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["metadata",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["minlength",{"_index":137,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["minlength(4",{"_index":139,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["minlength(8",{"_index":141,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["miscellaneous",{"_index":771,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":805,"title":{},"body":{"index.html":{}}}],["mode",{"_index":795,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":818,"title":{},"body":{"index.html":{}}}],["multermodule",{"_index":683,"title":{},"body":{"modules/SharedModule.html":{}}}],["multermodule.register",{"_index":685,"title":{},"body":{"modules/SharedModule.html":{}}}],["myśliwiec",{"_index":824,"title":{},"body":{"index.html":{}}}],["name",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["nest",{"_index":784,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":828,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":364,"title":{},"body":{"classes/EventRepository.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"classes/UserRepository.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{}}}],["nestjs/core",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"modules/GalleryModule.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"modules/NewsArticleModule.html":{},"dependencies.html":{}}}],["new",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["news",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["newsarticle",{"_index":568,"title":{"classes/NewsArticle.html":{}},"body":{"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["newsarticle.date_published",{"_index":630,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.full_article",{"_index":631,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.preview_imageurl",{"_index":632,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.save",{"_index":633,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.title",{"_index":629,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticlecontroller",{"_index":580,"title":{"controllers/NewsArticleController.html":{}},"body":{"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"coverage.html":{}}}],["newsarticlemodule",{"_index":44,"title":{"modules/NewsArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NewsArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["newsarticlerepository",{"_index":615,"title":{"classes/NewsArticleRepository.html":{}},"body":{"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["newsarticles",{"_index":604,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["newsarticleservice",{"_index":598,"title":{"injectables/NewsArticleService.html":{}},"body":{"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{},"overview.html":{}}}],["node.js",{"_index":776,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":419,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["notfoundexception(`no",{"_index":425,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["npm",{"_index":788,"title":{},"body":{"index.html":{}}}],["null",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["number",{"_index":268,"title":{},"body":{"classes/Event.html":{},"controllers/EventController.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{}}}],["occured",{"_index":384,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["onetomany",{"_index":695,"title":{},"body":{"classes/User.html":{}}}],["open",{"_index":807,"title":{},"body":{"index.html":{}}}],["optional",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["overview",{"_index":835,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":744,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":389,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["pagee",{"_index":391,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["paginate",{"_index":361,"title":{},"body":{"classes/EventRepository.html":{},"dependencies.html":{}}}],["paginatedresultdto",{"_index":318,"title":{"classes/PaginatedResultDto.html":{}},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["pagination",{"_index":362,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["paginationdto",{"_index":673,"title":{"classes/PaginationDto.html":{}},"body":{"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["param",{"_index":308,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["param('id",{"_index":334,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["parameters",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["parseintpipe",{"_index":309,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["passport",{"_index":558,"title":{},"body":{"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":559,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":561,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["password",{"_index":122,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":310,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["patch('/:id",{"_index":336,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["patch('/:id')@useinterceptors(undefined",{"_index":303,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["payload",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["pg",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"index.html":{}}}],["police",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["port",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["post('/login",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/sign_up",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@usepipes(validationpipe)@useinterceptors(undefined",{"_index":288,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["prefix",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"controllers/SharedController.html":{}}}],["prepend",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["preview_imageurl",{"_index":572,"title":{},"body":{"classes/NewsArticle.html":{}}}],["primarygeneratedcolumn",{"_index":269,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["private",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["production",{"_index":797,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":775,"title":{},"body":{"index.html":{}}}],["project",{"_index":808,"title":{},"body":{"index.html":{}}}],["promise",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["properties",{"_index":121,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"interfaces/uploadedFile.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["public_id",{"_index":230,"title":{},"body":{"classes/Cloudinary.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"interfaces/uploadedFile.html":{}}}],["publishdate",{"_index":235,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{}}}],["query",{"_index":311,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{}}}],["query.andwhere",{"_index":509,"title":{},"body":{"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["query.andwhere('event.title",{"_index":397,"title":{},"body":{"classes/EventRepository.html":{}}}],["query.getmanyandcount",{"_index":402,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["query.limit(limitt",{"_index":401,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{}}}],["query.offset(skipped",{"_index":400,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{}}}],["query.orderby('event.id",{"_index":398,"title":{},"body":{"classes/EventRepository.html":{}}}],["query.orderby('gallery.id",{"_index":510,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["read",{"_index":817,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["repositiory",{"_index":644,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["repository",{"_index":349,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["req",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.args[0].user",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('cloudinary').v2",{"_index":214,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":543,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["res",{"_index":374,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["rimraf",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":792,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":690,"title":{},"body":{"classes/User.html":{},"classes/UserRepository.html":{}}}],["scalable",{"_index":780,"title":{},"body":{"index.html":{}}}],["search",{"_index":388,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticleRepository.html":{}}}],["secret",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":565,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["secure_url",{"_index":229,"title":{},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"interfaces/uploadedFile.html":{}}}],["select",{"_index":373,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["server",{"_index":781,"title":{},"body":{"index.html":{}}}],["shared",{"_index":680,"title":{},"body":{"controllers/SharedController.html":{}}}],["shared.controller",{"_index":684,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/shared.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedcontroller",{"_index":678,"title":{"controllers/SharedController.html":{}},"body":{"controllers/SharedController.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["sharedmodule",{"_index":45,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":782,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["signup(@body",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(authcredentialsdto",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["skipped",{"_index":395,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"index.html":{},"interfaces/uploadedFile.html":{}}}],["sponsors",{"_index":811,"title":{},"body":{"index.html":{}}}],["src/.../auth.module.ts",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cloudinary.ts",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":773,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../typeorm.config.ts",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.repository.ts",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module",{"_index":346,"title":{},"body":{"modules/EventModule.html":{},"modules/NewsArticleModule.html":{}}}],["src/auth/auth.module.ts",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:10",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:17",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dtos/auth",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"coverage.html":{}}}],["src/auth/get",{"_index":731,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":551,"title":{},"body":{"classes/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/token.model.ts",{"_index":688,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["src/auth/user.entity",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"classes/GalleryRepository.html":{}}}],["src/auth/user.entity.ts",{"_index":689,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/auth/user.entity.ts:14",{"_index":691,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.entity.ts:16",{"_index":694,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.entity.ts:18",{"_index":692,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.entity.ts:20",{"_index":693,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.repository.ts",{"_index":697,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/user.repository.ts:14",{"_index":701,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/auth/user.repository.ts:32",{"_index":702,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/auth/user.repository.ts:49",{"_index":700,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/config/typeorm.config.ts",{"_index":735,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/event/dtos/create",{"_index":232,"title":{},"body":{"classes/CreateEventDTO.html":{},"coverage.html":{}}}],["src/event/dtos/get",{"_index":314,"title":{},"body":{"controllers/EventController.html":{},"classes/GetEventFilterDTO.html":{},"coverage.html":{}}}],["src/event/event.controller.ts",{"_index":281,"title":{},"body":{"controllers/EventController.html":{},"coverage.html":{}}}],["src/event/event.controller.ts:36",{"_index":300,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:48",{"_index":289,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:56",{"_index":296,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:60",{"_index":292,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:68",{"_index":304,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.entity",{"_index":315,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.entity.ts",{"_index":257,"title":{},"body":{"classes/Event.html":{},"coverage.html":{}}}],["src/event/event.entity.ts:13",{"_index":270,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:15",{"_index":265,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:17",{"_index":275,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:19",{"_index":273,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:21",{"_index":271,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:23",{"_index":272,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:25",{"_index":267,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.module.ts",{"_index":341,"title":{},"body":{"modules/EventModule.html":{}}}],["src/event/event.repository.ts",{"_index":348,"title":{},"body":{"classes/EventRepository.html":{},"coverage.html":{}}}],["src/event/event.repository.ts:19",{"_index":352,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.repository.ts:20",{"_index":353,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.repository.ts:21",{"_index":354,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.repository.ts:51",{"_index":356,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.service.ts",{"_index":411,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/event/event.service.ts:17",{"_index":413,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:22",{"_index":414,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:28",{"_index":417,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:34",{"_index":416,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:42",{"_index":415,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:51",{"_index":418,"title":{},"body":{"injectables/EventService.html":{}}}],["src/gallery/dtos/create",{"_index":243,"title":{},"body":{"classes/CreateGalleryDTO.html":{},"coverage.html":{}}}],["src/gallery/dtos/get",{"_index":545,"title":{},"body":{"classes/GetGalleryFilterDTO.html":{},"coverage.html":{}}}],["src/gallery/gallery.controller.ts",{"_index":455,"title":{},"body":{"controllers/GalleryController.html":{},"coverage.html":{}}}],["src/gallery/gallery.controller.ts:36",{"_index":468,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:48",{"_index":462,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:56",{"_index":470,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:62",{"_index":464,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:70",{"_index":473,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.entity.ts",{"_index":442,"title":{},"body":{"classes/Gallery.html":{},"coverage.html":{}}}],["src/gallery/gallery.entity.ts:14",{"_index":447,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:16",{"_index":445,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:18",{"_index":451,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:20",{"_index":450,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:22",{"_index":446,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:24",{"_index":449,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:26",{"_index":448,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.module.ts",{"_index":491,"title":{},"body":{"modules/GalleryModule.html":{}}}],["src/gallery/gallery.repository.ts",{"_index":496,"title":{},"body":{"classes/GalleryRepository.html":{},"coverage.html":{}}}],["src/gallery/gallery.repository.ts:15",{"_index":497,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.repository.ts:16",{"_index":498,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.repository.ts:17",{"_index":499,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.repository.ts:46",{"_index":501,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.service.ts",{"_index":513,"title":{},"body":{"injectables/GalleryService.html":{},"coverage.html":{}}}],["src/gallery/gallery.service.ts:17",{"_index":521,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:18",{"_index":515,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:24",{"_index":516,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:30",{"_index":518,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:36",{"_index":519,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:44",{"_index":517,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:53",{"_index":520,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/main.ts",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/news",{"_index":249,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["src/shared/dto/pagination.dto",{"_index":319,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["src/shared/dto/pagination.dto.ts",{"_index":670,"title":{},"body":{"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["src/shared/dto/pagination.dto.ts:2",{"_index":677,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/shared/dto/pagination.dto.ts:3",{"_index":676,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/shared/dto/pagination.dto.ts:4",{"_index":675,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/shared/dto/pagination.dto.ts:8",{"_index":672,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/shared/dto/pagination.dto.ts:9",{"_index":674,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/shared/shared.controller.ts",{"_index":679,"title":{},"body":{"controllers/SharedController.html":{},"coverage.html":{}}}],["src/shared/shared.module",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{}}}],["src/shared/shared.module.ts",{"_index":682,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/utilities/cloudinary",{"_index":360,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["src/utilities/cloudinary.ts",{"_index":205,"title":{},"body":{"classes/Cloudinary.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["src/utilities/cloudinary.ts:13",{"_index":209,"title":{},"body":{"classes/Cloudinary.html":{}}}],["ssl",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":793,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":796,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":798,"title":{},"body":{"index.html":{}}}],["started",{"_index":774,"title":{"index.html":{}},"body":{}}],["starter",{"_index":786,"title":{},"body":{"index.html":{}}}],["statements",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":820,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{}}}],["strategy.ts",{"_index":552,"title":{},"body":{"classes/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategy.ts:10",{"_index":554,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["strategy.ts:21",{"_index":556,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthCredentialsDTO.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/Gallery.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["super",{"_index":562,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["support",{"_index":812,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":831,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["synchronize",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":671,"title":{},"body":{"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["table",{"_index":743,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":742,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":801,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":804,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":803,"title":{},"body":{"index.html":{}}}],["tests",{"_index":800,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":810,"title":{},"body":{"index.html":{}}}],["this._eventservice.createevent(createeventdto",{"_index":331,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.deleteevent(eventid",{"_index":335,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.geteventbyid(eventid",{"_index":333,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.getevents(geteventfilterdto",{"_index":329,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.updateevent(eventid",{"_index":337,"title":{},"body":{"controllers/EventController.html":{}}}],["this._galleryservice.creategallery(creategallerydto",{"_index":484,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.deletegallery(galleryid",{"_index":486,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.getgalleries(getgalleryfilterdto",{"_index":483,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.getgallerybyid(galleryid",{"_index":485,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.updategallery",{"_index":487,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._jwt.sign(payload",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._newsarticleservice.createnewsarticle",{"_index":607,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.deletenewsarticle(articleid",{"_index":609,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.getnewsarticlebyid(articleid",{"_index":608,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.getnewsarticles(getnewsarticlefilterdto",{"_index":606,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.updaterticle",{"_index":610,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signup(authcredentialsdto",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(authcredentialsdto",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cloudinary.upload_image(file",{"_index":375,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["this.createquerybuilder('event",{"_index":396,"title":{},"body":{"classes/EventRepository.html":{}}}],["this.createquerybuilder('gallery",{"_index":508,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["this.createquerybuilder('newsarticle",{"_index":634,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["this.eventrepository.createevent(createeventdto",{"_index":421,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventrepository.delete",{"_index":427,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventrepository.findone",{"_index":424,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventrepository.getevents(geteventfilterdto",{"_index":422,"title":{},"body":{"injectables/EventService.html":{}}}],["this.findone",{"_index":719,"title":{},"body":{"classes/UserRepository.html":{}}}],["this.galleryrepository.creategallery(creategallerydto",{"_index":523,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.galleryrepository.delete",{"_index":526,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.galleryrepository.findone",{"_index":525,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.galleryrepository.getgalleries(getgalleryfilterdto",{"_index":524,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.geteventbyid(eventid",{"_index":432,"title":{},"body":{"injectables/EventService.html":{}}}],["this.getgallerybyid(galleryid",{"_index":529,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.getnewsarticlebyid(articleidid",{"_index":661,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.hashpassword(password",{"_index":710,"title":{},"body":{"classes/UserRepository.html":{}}}],["this.logger.error('an",{"_index":407,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["this.logger.error(`error",{"_index":383,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["this.logger.verbose",{"_index":324,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["this.repositiory.createnewsarticle(createnewsarticledto",{"_index":656,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.repositiory.delete",{"_index":659,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.repositiory.findone",{"_index":658,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.repositiory.getnewsarticles(getnewsarticlefilter",{"_index":657,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.userrepository.findone",{"_index":566,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["this.userrepository.signup(authcredentialsdto",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.validateuser",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["title",{"_index":236,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{}}}],["token.model",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"classes/UserRepository.html":{}}}],["tokenpayload",{"_index":188,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["touch",{"_index":821,"title":{},"body":{"index.html":{}}}],["true",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":222,"title":{},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["twitter",{"_index":827,"title":{},"body":{"index.html":{}}}],["type",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":279,"title":{},"body":{"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{}}}],["typeormmodule.forfeature([eventrepository",{"_index":347,"title":{},"body":{"modules/EventModule.html":{}}}],["typeormmodule.forfeature([galleryrepository",{"_index":495,"title":{},"body":{"modules/GalleryModule.html":{}}}],["typeormmodule.forfeature([newsarticlerepository",{"_index":618,"title":{},"body":{"modules/NewsArticleModule.html":{}}}],["typeormmodule.forfeature([userrepository",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":785,"title":{},"body":{"index.html":{}}}],["ui",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["unauthorizedexception('user",{"_index":567,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["unauthorizedexception('username",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["unique",{"_index":452,"title":{},"body":{"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["unique(['title",{"_index":453,"title":{},"body":{"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["unique(['username",{"_index":696,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":799,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":263,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["updatedatecolumn",{"_index":278,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["updatedatecolumn({name",{"_index":274,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["updateevent",{"_index":286,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/NewsArticleController.html":{}}}],["updateevent(articleid",{"_index":594,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["updateevent(eventid",{"_index":301,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["updateeventdto",{"_index":302,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["updateeventdto.detail",{"_index":435,"title":{},"body":{"injectables/EventService.html":{}}}],["updateeventdto.publishdate",{"_index":437,"title":{},"body":{"injectables/EventService.html":{}}}],["updateeventdto.title",{"_index":433,"title":{},"body":{"injectables/EventService.html":{}}}],["updategallery",{"_index":460,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["updategallery(galleryid",{"_index":471,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["updategallerydto",{"_index":472,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["updategallerydto.description",{"_index":532,"title":{},"body":{"injectables/GalleryService.html":{}}}],["updategallerydto.title",{"_index":530,"title":{},"body":{"injectables/GalleryService.html":{}}}],["updatenewsarticledto",{"_index":595,"title":{},"body":{"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{}}}],["updatenewsarticledto.datepublished",{"_index":666,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updatenewsarticledto.fullarticle",{"_index":664,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updatenewsarticledto.title",{"_index":662,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updaterticle",{"_index":641,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updaterticle(articleidid",{"_index":654,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["upload",{"_index":376,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"modules/SharedModule.html":{}}}],["upload_image",{"_index":206,"title":{},"body":{"classes/Cloudinary.html":{}}}],["upload_image(file",{"_index":207,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["uploadedfile",{"_index":98,"title":{"interfaces/uploadedFile.html":{}},"body":{"controllers/AuthController.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{}}}],["uploadresponse",{"_index":223,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["useguards",{"_index":312,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["useguards(authguard",{"_index":322,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["useinterceptors",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":330,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["usepipes",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["usepipes(validationpipe",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["user",{"_index":93,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GalleryRepository.html":{},"classes/JwtStrategy.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.entity",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"classes/UserRepository.html":{}}}],["user.password",{"_index":709,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.repository",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["user.salt",{"_index":707,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.save",{"_index":711,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.username",{"_index":706,"title":{},"body":{"classes/UserRepository.html":{}}}],["username",{"_index":123,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":158,"title":{"classes/UserRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["validate",{"_index":553,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["validate(payload",{"_index":555,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["validateuser",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["validateuser(authcredentialsdto",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["validationpipe",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["validator",{"_index":138,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"dependencies.html":{}}}],["value",{"_index":351,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":213,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["variable",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":840,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["watch",{"_index":794,"title":{},"body":{"index.html":{}}}],["weak",{"_index":128,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["website",{"_index":825,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":815,"title":{},"body":{"index.html":{}}}],["z",{"_index":126,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["z])(?=.*[a",{"_index":125,"title":{},"body":{"classes/AuthCredentialsDTO.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEventModule\n\nEventModule\n\nAppModule -->\n\nEventModule->AppModule\n\n\n\n\n\nGalleryModule\n\nGalleryModule\n\nAppModule -->\n\nGalleryModule->AppModule\n\n\n\n\n\nNewsArticleModule\n\nNewsArticleModule\n\nAppModule -->\n\nNewsArticleModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EventModule\n                        \n                        \n                            GalleryModule\n                        \n                        \n                            NewsArticleModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { EventModule } from './event/event.module';\nimport { GalleryModule } from './gallery/gallery.module';\nimport { AuthModule } from './auth/auth.module';\nimport { SharedModule } from './shared/shared.module';\nimport { NewsArticleModule } from './news-article/news-article.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TypeOrmConfig } from './config/typeorm.config';\n\n@Module({\n  imports: [\n    EventModule,\n    GalleryModule,\n    NewsArticleModule,\n    SharedModule,\n    AuthModule,\n    TypeOrmModule.forRoot(TypeOrmConfig),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Welcome to the Police api, please prepend /api to view the swagger documentation to allow ease of consumption 😋';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { User } from 'src/auth/user.entity';\nimport {\n  Body,\n  Controller,\n  HttpCode,\n  Post,\n  UploadedFile,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\nimport { AuthCredentialsDTO } from 'src/auth/dtos/auth-dto';\n\n@Controller('auth')\n@ApiTags('Authentication')\n@ApiBearerAuth()\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n  // @Post('/sign_up')\n  // @UsePipes(ValidationPipe)\n  // signUp(@Body() authCredentialsDTO: AuthCredentialsDTO): Promise {\n  //   return this.authService.signUp(authCredentialsDTO);\n  // }\n  @Post('/login')\n  login(\n    @Body() authCredentialsDTO: AuthCredentialsDTO,\n  ): Promise {\n    return this.authService.validateUser(authCredentialsDTO);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCredentialsDTO.html":{"url":"classes/AuthCredentialsDTO.html","title":"class - AuthCredentialsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCredentialsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()@MinLength(8)@MaxLength(50)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Password too weak'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dtos/auth-dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()@MinLength(4)@MaxLength(50)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dtos/auth-dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class AuthCredentialsDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(4)\n  @MaxLength(50)\n  username: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  @MaxLength(50)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Password too weak',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport * as config from 'config';\nimport { SharedModule } from 'src/shared/shared.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt-strategy';\nimport { UserRepository } from './user.repository';\nconst jwtConfig = config.get('jwt');\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserRepository]),\n    JwtModule.register({\n      secret: jwtConfig.secret,\n      signOptions: { expiresIn: jwtConfig.expiresIn },\n    }),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    SharedModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [JwtStrategy, PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository, _JWT: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _JWT\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { AuthCredentialsDTO } from './dtos/auth-dto';\nimport { TokenPayload } from './token.model';\nimport { User } from './user.entity';\nimport { UserRepository } from './user.repository';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(UserRepository)\n    private userRepository: UserRepository,\n    private _JWT: JwtService,\n  ) {}\n\n  async signUp(authCredentialsDTO: AuthCredentialsDTO): Promise {\n    return this.userRepository.signUp(authCredentialsDTO);\n  }\n\n  async validateUser(\n    authCredentialsDTO: AuthCredentialsDTO,\n  ): Promise {\n    const { username } = await this.userRepository.validateUser(\n      authCredentialsDTO,\n    );\n    if (username == null) {\n      throw new UnauthorizedException('Username or password incorrect');\n    }\n    const payload: TokenPayload = { username };\n    const accessToken = await this._JWT.sign(payload);\n    return { accessToken };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cloudinary.html":{"url":"classes/Cloudinary.html","title":"class - Cloudinary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cloudinary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/cloudinary.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                upload_image\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload_image\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload_image(file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/cloudinary.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport * as config from 'config';\n\nconst cloudinaryConfig = config.cloudinary;\nconst logger = new Logger();\nvar cloudinary = require('cloudinary').v2;\ncloudinary.config({\n  cloud_name: cloudinaryConfig.cloud_name,\n  api_key: cloudinaryConfig.api_key,\n  api_secret: cloudinaryConfig.secret,\n});\nexport class Cloudinary {\n  async upload_image(file: Express.Multer.File) {\n    try {\n      const uploadResponse = await cloudinary.uploader.upload(file.path, {});\n      return uploadResponse;\n    } catch (err) {\n      logger.error(err);\n    }\n  }\n}\nexport interface uploadedFile {\n  secure_url: string;\n  public_id: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEventDTO.html":{"url":"classes/CreateEventDTO.html","title":"class - CreateEventDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEventDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/dtos/create-event-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detail\n                            \n                            \n                                publishDate\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/create-event-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/create-event-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/create-event-dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateEventDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  publishDate: Date;\n  @ApiProperty()\n  @IsNotEmpty()\n  detail: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGalleryDTO.html":{"url":"classes/CreateGalleryDTO.html","title":"class - CreateGalleryDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGalleryDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/dtos/create-gallery.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/create-gallery.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/create-gallery.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateGalleryDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsArticleDTO.html":{"url":"classes/CreateNewsArticleDTO.html","title":"class - CreateNewsArticleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsArticleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/dtos/create-news-article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datePublished\n                            \n                            \n                                fullArticle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/create-news-article.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullArticle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/create-news-article.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/create-news-article.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateNewsArticleDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  fullArticle: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  datePublished: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Event.html":{"url":"classes/Event.html","title":"class - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                detail\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                publishDate\n                            \n                            \n                                title\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Event extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n  @Column()\n  title: string;\n  @Column()\n  image: string;\n  @Column()\n  publishDate: Date;\n  @Column()\n  detail: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventController.html":{"url":"controllers/EventController.html","title":"controller - EventController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                event\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEvent\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                getEventById\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                            \n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEvent(createEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(eventId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventById\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventById(eventId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEvents(getEventFilterDTO: GetEventFilterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('events')\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getEventFilterDTO\n                                    \n                                                GetEventFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \nupdateEvent(eventId: number, file: Express.Multer.File, updateEventDTO: CreateEventDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { EventService } from './event.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Logger,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { GetEventFilterDTO } from 'src/Event/dtos/get-Event-dto';\nimport { Event } from 'src/Event/Event.entity';\nimport { DeleteResult } from 'typeorm';\nimport { CreateEventDTO } from './dtos/create-event-dto';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n@Controller('event')\n@ApiTags('events')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class EventController {\n  private logger = new Logger();\n  constructor(private _eventService: EventService) {}\n  @Get('events')\n  async getEvents(\n    @Query() getEventFilterDTO: GetEventFilterDTO,\n  ): Promise> {\n    this.logger.verbose(\n      `Getting events with Filter: ${JSON.stringify(getEventFilterDTO)}`,\n    );\n    return this._eventService.getEvents(getEventFilterDTO);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  @UseInterceptors(FileInterceptor('file'))\n  async createEvent(\n    @Body() createEventDTO: CreateEventDTO,\n    @UploadedFile() file: Express.Multer.File,\n  ): Promise {\n    return this._eventService.createEvent(createEventDTO, file);\n  }\n\n  @Get('/:id')\n  getEventById(@Param('id', ParseIntPipe) eventId: number): Promise {\n    return this._eventService.getEventById(eventId);\n  }\n  @Delete('/:id')\n  deleteEvent(\n    @Param('id', ParseIntPipe) eventId: number,\n  ): Promise {\n    return this._eventService.deleteEvent(eventId);\n  }\n\n  @Patch('/:id')\n  @UseInterceptors(FileInterceptor('file'))\n  updateEvent(\n    @Param('id', ParseIntPipe) eventId: number,\n    @UploadedFile() file: Express.Multer.File,\n    @Body()\n    updateEventDTO: CreateEventDTO,\n  ): Promise {\n    return this._eventService.updateEvent(eventId, updateEventDTO, file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventModule.html":{"url":"modules/EventModule.html","title":"module - EventModule","body":"\n                   \n\n\n\n\n    Modules\n    EventModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventModule\n\n\n\ncluster_EventModule_imports\n\n\n\ncluster_EventModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nEventModule\n\nEventModule\n\nEventModule -->\n\nAuthModule->EventModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventModule -->\n\nSharedModule->EventModule\n\n\n\n\n\nEventService\n\nEventService\n\nEventModule -->\n\nEventService->EventModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/event/event.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EventService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EventController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { EventRepository } from './event.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { EventService } from './event.service';\nimport { Module } from '@nestjs/common';\nimport { EventController } from './event.controller';\nimport { EntityRepository } from 'typeorm';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { SharedModule } from 'src/shared/shared.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([EventRepository]),\n    AuthModule,\n    SharedModule,\n  ],\n  controllers: [EventController],\n  providers: [EventService],\n})\nexport class EventModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventRepository.html":{"url":"classes/EventRepository.html","title":"class - EventRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEvent\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.repository.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.repository.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEvent(createEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.repository.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEvents(filterDTO: GetEventFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.repository.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDTO\n                                    \n                                                GetEventFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { EntityRepository, Repository } from 'typeorm';\nimport { CreateEventDTO } from './dtos/create-event-dto';\nimport {\n  paginate,\n  Pagination,\n  IPaginationOptions,\n} from 'nestjs-typeorm-paginate';\nimport { GetEventFilterDTO } from './dtos/get-event-dto';\nimport { Event } from './event.entity';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n@EntityRepository(Event)\nexport class EventRepository extends Repository {\n  private cloudinary = new Cloudinary();\n  private logger = new Logger();\n  async createEvent(\n    createEventDTO: CreateEventDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const { title, detail, publishDate } = createEventDTO;\n    const event = new Event();\n    (event.title = title),\n      (event.detail = detail),\n      (event.publishDate = publishDate);\n    if (!file) {\n      throw new BadRequestException('Please ensure that you select an image');\n    }\n    const res = await this.cloudinary.upload_image(file);\n    if (res == null) {\n      throw new BadRequestException(\n        'Could not upload file, please check your internet connection',\n      );\n    } else {\n      const { secure_url } = res;\n      event.image = secure_url;\n    }\n\n    try {\n      await event.save();\n      return event;\n    } catch (error) {\n      this.logger.error(`Error occured`, error.stack);\n      throw new InternalServerErrorException('An error occured while creating');\n    }\n  }\n  async getEvents(\n    filterDTO: GetEventFilterDTO,\n  ): Promise> {\n    const { search, page, limit } = filterDTO;\n    const pagee = page || 1;\n    const limitt = limit > 10 ? 10 : limit || 10;\n    const skipped = (pagee - 1) * limitt;\n    const query = await this.createQueryBuilder('event');\n    if (search) {\n      query.andWhere('event.title LIKE :search OR event.detail LIKE :search', {\n        search: `%${search}%`,\n      });\n    }\n    query.orderBy('event.id', 'DESC');\n    query.offset(skipped);\n    query.limit(limitt);\n    try {\n      const events = await query.getManyAndCount();\n      return {\n        pagination: { page: pagee, limit: limitt, count: events[1] },\n        data: events[0],\n      };\n    } catch (error) {\n      this.logger.error('An error occured while fetching', error.stack);\n      throw new InternalServerErrorException('Couldnt fetch events');\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEvent\n                            \n                            \n                                    Async\n                                deleteEvent\n                            \n                            \n                                    Async\n                                getEventById\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                            \n                                    Async\n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventRepository: EventRepository)\n                    \n                \n                        \n                            \n                                Defined in src/event/event.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventRepository\n                                                  \n                                                        \n                                                                        EventRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEvent(createEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteEvent(eventId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEventById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEventById(eventId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEvents(getEventFilterDTO: GetEventFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getEventFilterDTO\n                                    \n                                                GetEventFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEvent(eventId: number, updateEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { EventRepository } from './event.repository';\nimport { DeleteResult } from 'typeorm';\nimport { CreateEventDTO } from './dtos/create-event-dto';\nimport { GetEventFilterDTO } from './dtos/get-event-dto';\nimport { Event } from './event.entity';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Injectable()\nexport class EventService {\n  private cloudinary = new Cloudinary();\n  constructor(\n    @InjectRepository(EventRepository)\n    private eventRepository: EventRepository,\n  ) {}\n  async createEvent(\n    createEventDTO: CreateEventDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    return this.eventRepository.createEvent(createEventDTO, file);\n  }\n  async getEvents(\n    getEventFilterDTO: GetEventFilterDTO,\n  ): Promise> {\n    return this.eventRepository.getEvents(getEventFilterDTO);\n  }\n\n  async getEventById(eventId: number): Promise {\n    const found = await this.eventRepository.findOne({\n      where: { id: eventId },\n    });\n    if (!found)\n      throw new NotFoundException(`No Event with id ${eventId} found`);\n    return found;\n  }\n  async deleteEvent(eventId: number): Promise {\n    const affected: DeleteResult = await this.eventRepository.delete({\n      id: eventId,\n    });\n    if (affected.affected === 0) {\n      throw new NotFoundException(`No Event with id ${eventId} found`);\n    }\n    return affected.raw;\n  }\n  async updateEvent(\n    eventId: number,\n    updateEventDTO: CreateEventDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const existingEvent = await this.getEventById(eventId);\n    updateEventDTO.title == null\n      ? null\n      : (existingEvent.title = updateEventDTO.title);\n    updateEventDTO.detail == null\n      ? null\n      : (existingEvent.detail = updateEventDTO.detail);\n    updateEventDTO.publishDate == null\n      ? null\n      : (existingEvent.publishDate = updateEventDTO.publishDate);\n\n    if (file) {\n      const res = await this.cloudinary.upload_image(file);\n      if (res == null) {\n        throw new BadRequestException(\n          'Could not upload file, please check your internet connection',\n        );\n      } else {\n        const { secure_url } = res;\n        existingEvent.image = secure_url;\n      }\n    }\n\n    await existingEvent.save();\n    return existingEvent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Gallery.html":{"url":"classes/Gallery.html","title":"class - Gallery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Gallery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                image_public_id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                title\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image_public_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from 'typeorm';\n@Entity()\n@Unique(['title'])\nexport class Gallery extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n  @Column()\n  title: string;\n  @Column()\n  description: string;\n  @Column()\n  imageUrl: string;\n  @Column()\n  image_public_id: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GalleryController.html":{"url":"controllers/GalleryController.html","title":"controller - GalleryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GalleryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gallery\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGallery\n                            \n                            \n                                deleteGallery\n                            \n                            \n                                    Async\n                                getGalleries\n                            \n                            \n                                getGalleryById\n                            \n                            \n                                updateGallery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGallery(createGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteGallery\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteGallery(galleryId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleries(getGalleryFilterDTO: GetGalleryFilterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getGalleryFilterDTO\n                                    \n                                                GetGalleryFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGalleryById\n                        \n                        \n                    \n                \n            \n            \n                \ngetGalleryById(galleryId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGallery\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGallery(galleryId: number, file: Express.Multer.File, updateGalleryDTO: CreateGalleryDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateGalleryDTO } from './dtos/create-gallery.dto';\nimport { Gallery } from './gallery.entity';\nimport { GetGalleryFilterDTO } from './dtos/get-gallery-dto';\nimport { GalleryService } from './gallery.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Logger,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { DeleteResult } from 'typeorm';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Controller('gallery')\n@ApiTags('gallery')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class GalleryController {\n  private logger = new Logger();\n  constructor(private _galleryService: GalleryService) {}\n  @Get()\n  async getGalleries(\n    @Query() getGalleryFilterDTO: GetGalleryFilterDTO,\n  ): Promise> {\n    this.logger.verbose(\n      `Getting galleries with Filter: ${JSON.stringify(getGalleryFilterDTO)}`,\n    );\n    return this._galleryService.getGalleries(getGalleryFilterDTO);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  @UseInterceptors(FileInterceptor('file'))\n  async createGallery(\n    @Body() createGalleryDTO: CreateGalleryDTO,\n    @UploadedFile() file: Express.Multer.File,\n  ): Promise {\n    return this._galleryService.createGallery(createGalleryDTO, file);\n  }\n\n  @Get('/:id')\n  getGalleryById(\n    @Param('id', ParseIntPipe) galleryId: number,\n  ): Promise {\n    return this._galleryService.getGalleryById(galleryId);\n  }\n  @Delete('/:id')\n  deleteGallery(\n    @Param('id', ParseIntPipe) galleryId: number,\n  ): Promise {\n    return this._galleryService.deleteGallery(galleryId);\n  }\n\n  @Patch('/:id')\n  @UseInterceptors(FileInterceptor('file'))\n  updateGallery(\n    @Param('id', ParseIntPipe) galleryId: number,\n    @UploadedFile() file: Express.Multer.File,\n    @Body()\n    updateGalleryDTO: CreateGalleryDTO,\n  ): Promise {\n    return this._galleryService.updateGallery(\n      galleryId,\n      updateGalleryDTO,\n      file,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GalleryModule.html":{"url":"modules/GalleryModule.html","title":"module - GalleryModule","body":"\n                   \n\n\n\n\n    Modules\n    GalleryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GalleryModule\n\n\n\ncluster_GalleryModule_providers\n\n\n\ncluster_GalleryModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nGalleryModule\n\nGalleryModule\n\nGalleryModule -->\n\nAuthModule->GalleryModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nGalleryModule -->\n\nSharedModule->GalleryModule\n\n\n\n\n\nGalleryService\n\nGalleryService\n\nGalleryModule -->\n\nGalleryService->GalleryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gallery/gallery.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GalleryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GalleryController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SharedModule } from 'src/shared/shared.module';\nimport { AuthModule } from './../auth/auth.module';\nimport { GalleryService } from './gallery.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { GalleryController } from './gallery.controller';\nimport { GalleryRepository } from './gallery.repository';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([GalleryRepository]),\n    AuthModule,\n    SharedModule,\n  ],\n  controllers: [GalleryController],\n  providers: [GalleryService],\n})\nexport class GalleryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GalleryRepository.html":{"url":"classes/GalleryRepository.html","title":"class - GalleryRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GalleryRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGallery\n                            \n                            \n                                    Async\n                                getGalleries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.repository.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.repository.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGallery(createGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.repository.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleries(filterDTO: GetGalleryFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.repository.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDTO\n                                    \n                                                GetGalleryFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateGalleryDTO } from './dtos/create-gallery.dto';\nimport { GetGalleryFilterDTO } from './dtos/get-gallery-dto';\nimport { EntityRepository, Repository } from 'typeorm';\nimport { Gallery } from './gallery.entity';\nimport { User } from 'src/auth/user.entity';\nimport {\n  BadRequestException,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n@EntityRepository(Gallery)\nexport class GalleryRepository extends Repository {\n  private cloudinary = new Cloudinary();\n  private logger = new Logger();\n  async createGallery(\n    createGalleryDTO: CreateGalleryDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const { title, description } = createGalleryDTO;\n    const gallery = new Gallery();\n    (gallery.title = title), (gallery.description = description);\n    if (!file) {\n      throw new BadRequestException('Please ensure that you select an image');\n    }\n    const res = await this.cloudinary.upload_image(file);\n    if (res == null) {\n      throw new BadRequestException(\n        'Could not upload file, please check your internet connection',\n      );\n    } else {\n      const { public_id, secure_url } = res;\n      gallery.imageUrl = secure_url;\n      gallery.image_public_id = public_id;\n    }\n\n    try {\n      await gallery.save();\n      return gallery;\n    } catch (error) {\n      this.logger.error(`Error occured`, error.stack);\n      throw new InternalServerErrorException('An error occured while creating');\n    }\n  }\n  async getGalleries(\n    filterDTO: GetGalleryFilterDTO,\n  ): Promise> {\n    const { search, page, limit } = filterDTO;\n    const pagee = page || 1;\n    const limitt = limit > 10 ? 10 : limit || 10;\n    const skipped = (pagee - 1) * limitt;\n    const query = this.createQueryBuilder('gallery');\n    if (search) {\n      query.andWhere(\n        'gallery.title LIKE :search OR gallery.description LIKE :search',\n        {\n          search: `%${search}%`,\n        },\n      );\n    }\n    query.orderBy('gallery.id', 'DESC');\n    query.offset(skipped);\n    query.limit(limitt);\n    try {\n      const galleries = await query.getManyAndCount();\n      return {\n        pagination: { page: pagee, limit: limitt, count: galleries[1] },\n        data: galleries[0],\n      };\n    } catch (error) {\n      this.logger.error('An error occured while fetching', error.stack);\n      throw new InternalServerErrorException('Couldnt fetch galleries');\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GalleryService.html":{"url":"injectables/GalleryService.html","title":"injectable - GalleryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GalleryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                GalleryRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGallery\n                            \n                            \n                                    Async\n                                deleteGallery\n                            \n                            \n                                    Async\n                                getGalleries\n                            \n                            \n                                    Async\n                                getGalleryById\n                            \n                            \n                                    Async\n                                updateGallery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(galleryRepository: GalleryRepository)\n                    \n                \n                        \n                            \n                                Defined in src/gallery/gallery.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        galleryRepository\n                                                  \n                                                        \n                                                                        GalleryRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGallery(createGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGallery(galleryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleries(getGalleryFilterDTO: GetGalleryFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getGalleryFilterDTO\n                                    \n                                                GetGalleryFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleryById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleryById(galleryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGallery(galleryId: number, updateGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GalleryRepository\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { GetGalleryFilterDTO } from './dtos/get-gallery-dto';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Gallery } from './gallery.entity';\nimport { GalleryRepository } from './gallery.repository';\nimport { DeleteResult } from 'typeorm';\nimport { CreateGalleryDTO } from './dtos/create-gallery.dto';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Injectable()\nexport class GalleryService {\n  private cloudinary = new Cloudinary();\n  GalleryRepository: any;\n  constructor(\n    @InjectRepository(GalleryRepository)\n    private galleryRepository: GalleryRepository,\n  ) {}\n\n  async createGallery(\n    createGalleryDTO: CreateGalleryDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    return this.galleryRepository.createGallery(createGalleryDTO, file);\n  }\n  async getGalleries(\n    getGalleryFilterDTO: GetGalleryFilterDTO,\n  ): Promise> {\n    return this.galleryRepository.getGalleries(getGalleryFilterDTO);\n  }\n\n  async getGalleryById(galleryId: number): Promise {\n    const found = await this.galleryRepository.findOne({\n      where: { id: galleryId },\n    });\n    if (!found)\n      throw new NotFoundException(`No Gallery with id ${galleryId} found`);\n    return found;\n  }\n  async deleteGallery(galleryId: number): Promise {\n    const affected: DeleteResult = await this.galleryRepository.delete({\n      id: galleryId,\n    });\n    if (affected.affected === 0) {\n      throw new NotFoundException(`No Gallery with id ${galleryId} found`);\n    }\n    return affected.raw;\n  }\n  async updateGallery(\n    galleryId: number,\n    updateGalleryDTO: CreateGalleryDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    console.log(updateGalleryDTO);\n    const existingGallery = await this.getGalleryById(galleryId);\n    updateGalleryDTO.title == null\n      ? null\n      : (existingGallery.title = updateGalleryDTO.title);\n    updateGalleryDTO.description == null\n      ? null\n      : (existingGallery.description = updateGalleryDTO.description);\n\n    if (file) {\n      const res = await this.cloudinary.upload_image(file);\n      if (res == null) {\n        throw new BadRequestException(\n          'Could not upload file, please check your internet connection',\n        );\n      } else {\n        const { public_id, secure_url } = res;\n        existingGallery.imageUrl = secure_url;\n        existingGallery.image_public_id = public_id;\n      }\n    }\n\n    await existingGallery.save();\n    return existingGallery;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetEventFilterDTO.html":{"url":"classes/GetEventFilterDTO.html","title":"class - GetEventFilterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetEventFilterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/dtos/get-event-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/get-event-dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/get-event-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/get-event-dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsNotEmpty, IsIn } from 'class-validator';\n\nexport class GetEventFilterDTO {\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  page: number;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  limit: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGalleryFilterDTO.html":{"url":"classes/GetGalleryFilterDTO.html","title":"class - GetGalleryFilterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGalleryFilterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/dtos/get-gallery-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/get-gallery-dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/get-gallery-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/get-gallery-dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsNotEmpty, IsIn } from 'class-validator';\n\nexport class GetGalleryFilterDTO {\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  page: number;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  limit: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetNewsArticleFilterDTO.html":{"url":"classes/GetNewsArticleFilterDTO.html","title":"class - GetNewsArticleFilterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetNewsArticleFilterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/dtos/get-news-article-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/get-news-article-dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/get-news-article-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/get-news-article-dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsNotEmpty, IsIn } from 'class-validator';\n\nexport class GetNewsArticleFilterDTO {\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  page: number;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  limit: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtStrategy.html":{"url":"classes/JwtStrategy.html","title":"class - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserRepository } from './user.repository';\nimport { UnauthorizedException } from '@nestjs/common';\nimport * as config from 'config';\nimport { TokenPayload } from './token.model';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nconst jwtConfig = config.jwt;\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UserRepository)\n    private userRepository: UserRepository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: jwtConfig.secret,\n    });\n  }\n\n  async validate(payload: TokenPayload): Promise {\n    const { username } = payload;\n    const user = await this.userRepository.findOne({ username });\n    if (!user) {\n      throw new UnauthorizedException('user not found');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsArticle.html":{"url":"classes/NewsArticle.html","title":"class - NewsArticle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsArticle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                date_published\n                            \n                            \n                                full_article\n                            \n                            \n                                id\n                            \n                            \n                                preview_imageUrl\n                            \n                            \n                                title\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date_published\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            full_article\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preview_imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from 'typeorm';\n@Entity()\n@Unique(['title'])\nexport class NewsArticle extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n  @Column()\n  title: string;\n  @Column()\n  date_published: Date;\n  @Column()\n  full_article: string;\n  @Column()\n  preview_imageUrl: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsArticleController.html":{"url":"controllers/NewsArticleController.html","title":"controller - NewsArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createWallet\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                    Async\n                                getEventArticles\n                            \n                            \n                                getEventById\n                            \n                            \n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWallet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWallet(createNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(articleId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEventArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEventArticles(getNewsArticleFilterDTO: GetNewsArticleFilterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('articles')\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getNewsArticleFilterDTO\n                                    \n                                                GetNewsArticleFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventById\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventById(articleId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \nupdateEvent(articleId: number, file: Express.Multer.File, updateNewsArticleDTO: CreateNewsArticleDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateNewsArticleDTO } from './dtos/create-news-article.dto';\nimport { GetNewsArticleFilterDTO } from './dtos/get-news-article-dto';\nimport { NewsArticleService } from './news-article.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Logger,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { DeleteResult } from 'typeorm';\nimport { NewsArticle } from './news-article.entity';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Controller('article')\n@ApiBearerAuth()\n@ApiTags('article')\n@UseGuards(AuthGuard())\nexport class NewsArticleController {\n  private logger = new Logger();\n  constructor(private _newsArticleService: NewsArticleService) {}\n  @Get('articles')\n  async getEventArticles(\n    @Query() getNewsArticleFilterDTO: GetNewsArticleFilterDTO,\n  ): Promise> {\n    this.logger.verbose(\n      `Getting NewsArticles with Filter: ${JSON.stringify(\n        getNewsArticleFilterDTO,\n      )}`,\n    );\n    return this._newsArticleService.getNewsArticles(getNewsArticleFilterDTO);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  @UseInterceptors(FileInterceptor('file'))\n  async createWallet(\n    @Body() createNewsArticleDTO: CreateNewsArticleDTO,\n    @UploadedFile() file: Express.Multer.File,\n  ): Promise {\n    return this._newsArticleService.createNewsArticle(\n      createNewsArticleDTO,\n      file,\n    );\n  }\n\n  @Get('/:id')\n  getEventById(\n    @Param('id', ParseIntPipe) articleId: number,\n  ): Promise {\n    return this._newsArticleService.getNewsArticleById(articleId);\n  }\n  @Delete('/:id')\n  deleteEvent(\n    @Param('id', ParseIntPipe) articleId: number,\n  ): Promise {\n    return this._newsArticleService.deleteNewsArticle(articleId);\n  }\n\n  @Patch('/:id')\n  @UseInterceptors(FileInterceptor('file'))\n  updateEvent(\n    @Param('id', ParseIntPipe) articleId: number,\n    @UploadedFile() file: Express.Multer.File,\n    @Body()\n    updateNewsArticleDTO: CreateNewsArticleDTO,\n  ): Promise {\n    return this._newsArticleService.updaterticle(\n      articleId,\n      updateNewsArticleDTO,\n      file,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsArticleModule.html":{"url":"modules/NewsArticleModule.html","title":"module - NewsArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsArticleModule\n\n\n\ncluster_NewsArticleModule_providers\n\n\n\ncluster_NewsArticleModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nNewsArticleModule\n\nNewsArticleModule\n\nNewsArticleModule -->\n\nAuthModule->NewsArticleModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewsArticleModule -->\n\nSharedModule->NewsArticleModule\n\n\n\n\n\nNewsArticleService\n\nNewsArticleService\n\nNewsArticleModule -->\n\nNewsArticleService->NewsArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/news-article/news-article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsArticleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsArticleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NewsArticleRepository } from './news-article.repository';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { NewsArticleController } from './news-article.controller';\nimport { NewsArticleService } from './news-article.service';\nimport { AuthModule } from 'src/auth/auth.module';\nimport { SharedModule } from 'src/shared/shared.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([NewsArticleRepository]),\n    AuthModule,\n    SharedModule,\n  ],\n  controllers: [NewsArticleController],\n  providers: [NewsArticleService],\n})\nexport class NewsArticleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsArticleRepository.html":{"url":"classes/NewsArticleRepository.html","title":"class - NewsArticleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsArticleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewsArticle\n                            \n                            \n                                    Async\n                                getNewsArticles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.repository.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.repository.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewsArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewsArticle(createNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.repository.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNewsArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsArticles(filterDTO: GetNewsArticleFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.repository.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDTO\n                                    \n                                                GetNewsArticleFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsArticle } from './news-article.entity';\nimport { EntityRepository, Repository } from 'typeorm';\nimport {\n  Logger,\n  BadRequestException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { CreateNewsArticleDTO } from './dtos/create-news-article.dto';\nimport { GetNewsArticleFilterDTO } from './dtos/get-news-article-dto';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n@EntityRepository(NewsArticle)\nexport class NewsArticleRepository extends Repository {\n  private cloudinary = new Cloudinary();\n  private logger = new Logger();\n  async createNewsArticle(\n    createNewsArticleDTO: CreateNewsArticleDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const { title, datePublished, fullArticle } = createNewsArticleDTO;\n    const newsArticle = new NewsArticle();\n    (newsArticle.title = title),\n      (newsArticle.date_published = datePublished),\n      (newsArticle.full_article = fullArticle);\n    if (!file) {\n      throw new BadRequestException('Please ensure that you select an image');\n    }\n    const res = await this.cloudinary.upload_image(file);\n    if (res == null) {\n      throw new BadRequestException(\n        'Could not upload file, please check your internet connection',\n      );\n    } else {\n      const { secure_url } = res;\n      newsArticle.preview_imageUrl = secure_url;\n    }\n\n    try {\n      await newsArticle.save();\n      return newsArticle;\n    } catch (error) {\n      this.logger.error(`Error occured`, error.stack);\n      throw new InternalServerErrorException('An error occured while creating');\n    }\n  }\n  async getNewsArticles(\n    filterDTO: GetNewsArticleFilterDTO,\n  ): Promise> {\n    const { search, page, limit } = filterDTO;\n    const pagee = page || 1;\n    const limitt = limit > 10 ? 10 : limit || 10;\n    const skipped = (pagee - 1) * limitt;\n    const query = this.createQueryBuilder('newsArticle');\n    if (search) {\n      query.andWhere(\n        'newsArticle.title LIKE :search OR newsArticle.full_article LIKE :search',\n        {\n          search: `%${search}%`,\n        },\n      );\n    }\n    try {\n      const articles = await query.getManyAndCount();\n      return {\n        pagination: { page: pagee, limit: limitt, count: articles[1] },\n        data: articles[0],\n      };\n    } catch (error) {\n      this.logger.error('An error occured while fetching', error.stack);\n      throw new InternalServerErrorException('Couldnt fetch articles');\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsArticleService.html":{"url":"injectables/NewsArticleService.html","title":"injectable - NewsArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewsArticle\n                            \n                            \n                                    Async\n                                deleteNewsArticle\n                            \n                            \n                                    Async\n                                getNewsArticleById\n                            \n                            \n                                    Async\n                                getNewsArticles\n                            \n                            \n                                    Async\n                                updaterticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repositiory: NewsArticleRepository)\n                    \n                \n                        \n                            \n                                Defined in src/news-article/news-article.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repositiory\n                                                  \n                                                        \n                                                                        NewsArticleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewsArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewsArticle(createNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteNewsArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteNewsArticle(articleIdId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleIdId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNewsArticleById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsArticleById(articleIdId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleIdId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNewsArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsArticles(getNewsArticleFilter: GetNewsArticleFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getNewsArticleFilter\n                                    \n                                                GetNewsArticleFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updaterticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updaterticle(articleIdId: number, updateNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleIdId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { GetNewsArticleFilterDTO } from './dtos/get-news-article-dto';\n\nimport { NewsArticleRepository } from './news-article.repository';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateNewsArticleDTO } from './dtos/create-news-article.dto';\nimport { NewsArticle } from './news-article.entity';\nimport { DeleteResult } from 'typeorm';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Injectable()\nexport class NewsArticleService {\n  private cloudinary = new Cloudinary();\n  constructor(private repositiory: NewsArticleRepository) {}\n  async createNewsArticle(\n    createNewsArticleDTO: CreateNewsArticleDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    return this.repositiory.createNewsArticle(createNewsArticleDTO, file);\n  }\n  async getNewsArticles(\n    getNewsArticleFilter: GetNewsArticleFilterDTO,\n  ): Promise> {\n    return this.repositiory.getNewsArticles(getNewsArticleFilter);\n  }\n\n  async getNewsArticleById(articleIdId: number): Promise {\n    const found = await this.repositiory.findOne({\n      where: { id: articleIdId },\n    });\n    if (!found)\n      throw new NotFoundException(`No Article with id ${articleIdId} found`);\n    return found;\n  }\n  async deleteNewsArticle(articleIdId: number): Promise {\n    const affected: DeleteResult = await this.repositiory.delete({\n      id: articleIdId,\n    });\n    if (affected.affected === 0) {\n      throw new NotFoundException(`No Article with id ${articleIdId} found`);\n    }\n    return affected.raw;\n  }\n  async updaterticle(\n    articleIdId: number,\n    updateNewsArticleDTO: CreateNewsArticleDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const existingArticle = await this.getNewsArticleById(articleIdId);\n    updateNewsArticleDTO.title == null\n      ? null\n      : (existingArticle.title = updateNewsArticleDTO.title);\n    updateNewsArticleDTO.fullArticle == null\n      ? null\n      : (existingArticle.full_article = updateNewsArticleDTO.fullArticle);\n    updateNewsArticleDTO.datePublished == null\n      ? null\n      : (existingArticle.date_published = updateNewsArticleDTO.datePublished);\n\n    if (file) {\n      const res = await this.cloudinary.upload_image(file);\n      if (res == null) {\n        throw new BadRequestException(\n          'Could not upload file, please check your internet connection',\n        );\n      } else {\n        const { secure_url } = res;\n        existingArticle.preview_imageUrl = secure_url;\n      }\n    }\n\n    await existingArticle.save();\n    return existingArticle;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResultDto.html":{"url":"classes/PaginatedResultDto.html","title":"class - PaginatedResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/pagination.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagination\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PaginationDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginationDto {\n  page: number;\n  limit: number;\n  count: number;\n}\n\nexport class PaginatedResultDto {\n  data: T;\n  pagination: PaginationDto;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/pagination.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginationDto {\n  page: number;\n  limit: number;\n  count: number;\n}\n\nexport class PaginatedResultDto {\n  data: T;\n  pagination: PaginationDto;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SharedController.html":{"url":"controllers/SharedController.html","title":"controller - SharedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SharedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/shared.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                shared\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('shared')\nexport class SharedController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            SharedController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { SharedController } from './shared.controller';\n\n@Module({\n  imports: [\n    MulterModule.register({\n      dest: './upload',\n    }),\n  ],\n  controllers: [SharedController],\n  exports: [MulterModule],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/token.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  username: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                salt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Entity,\n  Unique,\n  BaseEntity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n} from 'typeorm';\n\n@Entity()\n@Unique(['username'])\nexport class User extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  username: string;\n  @Column()\n  password: string;\n  @Column()\n  salt: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/user.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string, salt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/user.repository.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/user.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/user.repository.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { EntityRepository, Repository } from 'typeorm';\nimport { User } from './user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { TokenPayload } from './token.model';\nimport { AuthCredentialsDTO } from './dtos/auth-dto';\nconst logger = new Logger();\n@EntityRepository(User)\nexport class UserRepository extends Repository {\n  async signUp(authCredentialsDTO: AuthCredentialsDTO): Promise {\n    const { username, password } = authCredentialsDTO;\n    const user = new User();\n    user.username = username;\n    user.salt = await bcrypt.genSalt();\n    user.password = await this.hashPassword(password, user.salt);\n    try {\n      await user.save();\n      return user;\n    } catch (error) {\n      console.log(error);\n      logger.error(error.stack);\n      if (error.code === '23505') {\n        throw new ConflictException('Username already exists');\n      } else throw new InternalServerErrorException();\n    }\n  }\n\n  async validateUser(\n    authCredentialsDTO: AuthCredentialsDTO,\n  ): Promise {\n    const { username, password } = authCredentialsDTO;\n\n    const user = await this.findOne({ username });\n    if (!user) {\n      return { username: null };\n    }\n\n    const isPasswordCorrect = await bcrypt.compare(password, user.password);\n    if (user && isPasswordCorrect) {\n      return { username };\n    }\n    return { username: null };\n  }\n\n  private async hashPassword(password: string, salt: string): Promise {\n    return await bcrypt.hash(password, salt);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-dto.ts\n            \n            class\n            AuthCredentialsDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/get-user-decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-strategy.ts\n            \n            class\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt-strategy.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/token.model.ts\n            \n            interface\n            TokenPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/user.repository.ts\n            \n            class\n            UserRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/user.repository.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            dbConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            TypeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/event/dtos/create-event-dto.ts\n            \n            class\n            CreateEventDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/event/dtos/get-event-dto.ts\n            \n            class\n            GetEventFilterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/event/event.controller.ts\n            \n            controller\n            EventController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/event/event.entity.ts\n            \n            class\n            Event\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/event/event.repository.ts\n            \n            class\n            EventRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/event/event.service.ts\n            \n            injectable\n            EventService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/gallery/dtos/create-gallery.dto.ts\n            \n            class\n            CreateGalleryDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gallery/dtos/get-gallery-dto.ts\n            \n            class\n            GetGalleryFilterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/gallery/gallery.controller.ts\n            \n            controller\n            GalleryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/gallery/gallery.entity.ts\n            \n            class\n            Gallery\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/gallery/gallery.repository.ts\n            \n            class\n            GalleryRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/gallery/gallery.service.ts\n            \n            injectable\n            GalleryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/news-article/dtos/create-news-article.dto.ts\n            \n            class\n            CreateNewsArticleDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/news-article/dtos/get-news-article-dto.ts\n            \n            class\n            GetNewsArticleFilterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/news-article/news-article.controller.ts\n            \n            controller\n            NewsArticleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/news-article/news-article.entity.ts\n            \n            class\n            NewsArticle\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/news-article/news-article.repository.ts\n            \n            class\n            NewsArticleRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/news-article/news-article.service.ts\n            \n            injectable\n            NewsArticleService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/shared/dto/pagination.dto.ts\n            \n            class\n            PaginatedResultDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dto/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/shared.controller.ts\n            \n            controller\n            SharedController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            class\n            Cloudinary\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            interface\n            uploadedFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            variable\n            cloudinary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            variable\n            cloudinaryConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            bcrypt : ^5.0.1\n        \n            class-validator : ^0.13.1\n        \n            cloudinary : ^1.25.1\n        \n            config : ^3.3.6\n        \n            nestjs-typeorm-paginate : ^2.3.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.32\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GalleryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_EventModule\n\n\n\ncluster_EventModule_providers\n\n\n\ncluster_GalleryModule\n\n\n\ncluster_GalleryModule_providers\n\n\n\ncluster_NewsArticleModule\n\n\n\ncluster_NewsArticleModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nEventModule\n\nEventModule\n\nEventModule -->\n\nAuthModule->EventModule\n\n\n\n\n\nGalleryModule\n\nGalleryModule\n\nGalleryModule -->\n\nAuthModule->GalleryModule\n\n\n\n\n\nNewsArticleModule\n\nNewsArticleModule\n\nNewsArticleModule -->\n\nAuthModule->NewsArticleModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\nAppModule -->\n\nEventModule->AppModule\n\n\n\nAppModule -->\n\nGalleryModule->AppModule\n\n\n\nAppModule -->\n\nNewsArticleModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\nEventModule -->\n\nSharedModule->EventModule\n\n\n\nGalleryModule -->\n\nSharedModule->GalleryModule\n\n\n\nNewsArticleModule -->\n\nSharedModule->NewsArticleModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEventService\n\nEventService\n\nEventModule -->\n\nEventService->EventModule\n\n\n\n\n\nGalleryService\n\nGalleryService\n\nGalleryModule -->\n\nGalleryService->GalleryModule\n\n\n\n\n\nNewsArticleService\n\nNewsArticleService\n\nNewsArticleModule -->\n\nNewsArticleService->NewsArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    19 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/uploadedFile.html":{"url":"interfaces/uploadedFile.html","title":"interface - uploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  uploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/cloudinary.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        public_id\n                                \n                                \n                                        secure_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        public_id\n                                    \n                                \n                                \n                                    \n                                        public_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secure_url\n                                    \n                                \n                                \n                                    \n                                        secure_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport * as config from 'config';\n\nconst cloudinaryConfig = config.cloudinary;\nconst logger = new Logger();\nvar cloudinary = require('cloudinary').v2;\ncloudinary.config({\n  cloud_name: cloudinaryConfig.cloud_name,\n  api_key: cloudinaryConfig.api_key,\n  api_secret: cloudinaryConfig.secret,\n});\nexport class Cloudinary {\n  async upload_image(file: Express.Multer.File) {\n    try {\n      const uploadResponse = await cloudinary.uploader.upload(file.path, {});\n      return uploadResponse;\n    } catch (err) {\n      logger.error(err);\n    }\n  }\n}\nexport interface uploadedFile {\n  secure_url: string;\n  public_id: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cloudinary   (src/.../cloudinary.ts)\n                        \n                        \n                            cloudinaryConfig   (src/.../cloudinary.ts)\n                        \n                        \n                            dbConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            GetUser   (src/.../get-user-decorator.ts)\n                        \n                        \n                            jwtConfig   (src/.../auth.module.ts)\n                        \n                        \n                            jwtConfig   (src/.../jwt-strategy.ts)\n                        \n                        \n                            logger   (src/.../user.repository.ts)\n                        \n                        \n                            logger   (src/.../cloudinary.ts)\n                        \n                        \n                            TypeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utilities/cloudinary.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('cloudinary').v2\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cloudinaryConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.cloudinary\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n\n\n            \n        \n\n    src/config/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('db')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: dbConfig.type,\n  port: dbConfig.port,\n  host: dbConfig.host,\n  username: dbConfig.username,\n  password: dbConfig.password,\n  database: dbConfig.database,\n  synchronize: dbConfig.synchronize,\n  ssl: dbConfig.ssl,\n  // logging: true,\n  extra: dbConfig.extra,\n\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n}\n                        \n                    \n\n\n            \n        \n\n    src/auth/get-user-decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GetUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req) => {\n  return req.args[0].user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('jwt')\n                        \n                    \n\n\n            \n        \n\n    src/auth/jwt-strategy.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.jwt\n                        \n                    \n\n\n            \n        \n\n    src/auth/user.repository.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
