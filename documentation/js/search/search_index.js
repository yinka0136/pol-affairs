var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.274,1,2.397]],["body/controllers/AppController.html",[0,2.096,1,3.942,2,1.696,3,0.236,4,0.202,5,0.202,6,3.988,7,0.381,8,1.759,9,5.59,10,1.343,11,0.022,12,0.588,13,4.683,14,1.423,15,1.567,16,0.52,17,0.942,18,3.609,19,3.988,20,0.236,21,0.274,22,2.689,23,4.683,24,1.267,25,4.683,26,0.015,27,0.018,28,0.015]],["title/modules/AppModule.html",[29,1.274,30,2.397]],["body/modules/AppModule.html",[1,3.714,2,1.732,3,0.176,4,0.151,5,0.151,11,0.023,16,0.602,17,0.703,18,3.642,19,2.975,20,0.176,21,0.204,26,0.011,27,0.015,28,0.011,29,1.975,30,4.81,31,1.621,32,1.734,33,2.006,34,2.006,35,1.734,36,3.132,37,1.861,38,2.975,39,2.975,40,2.975,41,3.149,42,3.95,43,3.95,44,3.95,45,2.944,46,2.746,47,2.006,48,2.006,49,3.493,50,2.746,51,3.493,52,3.493,53,3.493,54,2.975,55,3.493,56,1.861,57,1.861,58,3.493,59,2.634,60,1.734,61,2.006,62,3.493]],["title/injectables/AppService.html",[18,2.021,63,1.438]],["body/injectables/AppService.html",[3,0.236,4,0.202,5,0.202,7,0.381,8,1.759,9,5.59,11,0.022,12,0.588,14,1.423,15,1.567,16,0.42,17,0.942,18,3.324,20,0.236,21,0.274,24,1.267,26,0.015,27,0.018,28,0.015,63,2.366,64,2.689,65,3.988,66,4.683,67,4.683,68,4.683,69,5.789,70,2.325,71,4.683,72,4.683,73,3.988,74,3.988,75,4.683,76,4.683,77,4.683]],["title/controllers/AuthController.html",[0,1.274,78,2.397]],["body/controllers/AuthController.html",[0,1.374,2,1.374,3,0.191,4,0.164,5,0.164,7,0.309,8,1.536,10,1.088,11,0.023,12,0.476,14,1.153,16,0.567,17,0.763,20,0.191,21,0.222,22,2.178,24,1.539,26,0.012,27,0.016,28,0.012,61,2.904,78,3.443,79,3.231,80,2.362,81,3.793,82,5.687,83,3.793,84,3.293,85,5.056,86,3.793,87,1.295,88,1.088,89,0.406,90,1.295,91,2.059,92,1.761,93,3.231,94,3.443,95,3.793,96,2.583,97,1.883,98,2.583,99,2.583,100,2.583,101,2.583,102,2.178,103,2.178,104,3.443,105,2.583,106,1.374,107,3.266,108,3.231,109,3.793,110,3.793,111,5.056,112,3.793,113,2.583,114,3.793,115,3.793]],["title/classes/AuthCredentialsDTO.html",[21,0.206,84,1.747]],["body/classes/AuthCredentialsDTO.html",[3,0.21,4,0.18,5,0.18,7,0.339,10,1.541,11,0.022,12,0.675,15,1.702,16,0.482,20,0.21,21,0.314,26,0.013,27,0.017,28,0.013,84,2.668,89,0.576,106,1.508,116,0.945,117,5.068,118,2.218,119,1.149,120,3.739,121,2.954,122,3.546,123,4.577,124,4.577,125,4.577,126,4.577,127,3.546,128,3.546,129,3.546,130,2.954,131,2.954,132,5.068,133,3.546,134,3.546,135,3.546,136,1.932,137,3.546,138,4.577,139,3.546,140,3.546]],["title/classes/AuthCredentialsDTO-1.html",[21,0.172,84,1.458,141,2]],["body/classes/AuthCredentialsDTO-1.html",[3,0.21,4,0.18,5,0.18,7,0.339,10,1.541,11,0.022,12,0.675,15,1.702,16,0.482,20,0.21,21,0.314,26,0.013,27,0.017,28,0.013,84,2.668,89,0.576,106,1.508,116,0.945,118,2.218,119,1.149,120,3.739,121,2.954,122,3.546,123,4.577,124,4.577,125,4.577,126,4.577,127,3.546,128,3.546,129,3.546,130,2.954,131,2.954,132,5.068,133,3.546,134,3.546,135,3.546,136,1.932,137,3.546,138,4.577,139,3.546,140,3.546,142,5.068]],["title/modules/AuthModule.html",[29,1.274,41,1.747]],["body/modules/AuthModule.html",[2,1.735,3,0.177,4,0.151,5,0.151,11,0.023,16,0.609,17,0.705,20,0.177,21,0.205,26,0.011,27,0.015,28,0.011,29,1.978,31,1.626,32,1.739,33,2.012,34,2.012,35,1.739,36,3.136,37,2.909,41,3.332,45,2.946,46,2.752,47,2.012,48,2.012,50,2.752,59,2.641,60,1.739,78,3.719,107,3.646,108,2.984,143,2.984,144,2.984,145,3.503,146,2.984,147,4.121,148,2.641,149,3.503,150,2.641,151,4.791,152,2.012,153,2.984,154,2.984,155,3.503,156,3.613,157,2.984,158,2.012,159,2.641,160,1.347,161,2.386,162,2.984,163,3.503,164,3.503,165,3.503,166,2.984,167,3.503,168,3.503,169,3.503,170,3.503,171,3.503]],["title/injectables/AuthService.html",[63,1.438,107,2.021]],["body/injectables/AuthService.html",[3,0.165,4,0.141,5,0.141,7,0.266,8,1.386,11,0.023,12,0.66,14,1.386,16,0.557,17,0.657,20,0.165,21,0.191,24,1.235,26,0.01,27,0.014,28,0.01,60,1.62,61,1.874,63,1.864,64,1.874,84,3.323,87,1.796,88,1.509,89,0.563,90,1.796,91,2.063,92,1.515,107,2.62,120,1.874,121,2.611,150,2.46,158,3.566,159,2.46,160,2.022,172,2.779,173,2.12,174,3.885,175,4.48,176,2.841,177,2.779,178,5.26,179,5.695,180,3.263,181,3.885,182,3.263,183,2.779,184,3.263,185,2.779,186,2.222,187,2.841,188,2.779,189,2.46,190,2.779,191,1.754,192,3.263,193,1.864,194,3.263,195,1.62,196,1.515,197,0.992,198,3.263,199,3.263,200,2.779,201,4.562,202,3.263]],["title/classes/Cloudinary.html",[21,0.206,203,1.353]],["body/classes/Cloudinary.html",[3,0.201,4,0.172,5,0.226,7,0.325,8,1.588,11,0.023,12,0.501,14,1.212,15,1.415,16,0.469,17,0.803,20,0.264,21,0.233,24,1.08,26,0.012,27,0.016,28,0.012,87,1.362,88,1.144,89,0.427,90,1.362,97,1.98,116,0.906,153,3.255,160,2.241,173,1.99,193,1.63,197,1.212,203,2.241,204,2.717,205,5.226,206,4.451,207,2.382,208,3.989,209,2.382,210,2.717,211,3.007,212,3.397,213,3.007,214,3.397,215,3.397,216,3.397,217,3.397,218,3.397,219,3.397,220,3.397,221,2.291,222,4.451,223,3.397,224,2.291,225,3.397,226,3.397,227,2.291,228,1.98,229,2.717]],["title/classes/CreateEventDTO.html",[21,0.206,230,2.021]],["body/classes/CreateEventDTO.html",[3,0.213,4,0.182,5,0.182,7,0.344,10,1.718,11,0.022,12,0.752,15,1.711,16,0.487,20,0.213,21,0.317,26,0.013,27,0.017,28,0.013,89,0.641,106,1.528,116,0.958,118,2.248,119,1.159,130,3.138,131,3.138,136,1.959,230,3.113,231,5.383,232,3.138,233,4.516,234,4.516,235,2.78,236,4.516,237,3.182,238,3.376,239,4.22,240,4.22]],["title/classes/CreateGalleryDTO.html",[21,0.206,241,2.021]],["body/classes/CreateGalleryDTO.html",[3,0.228,4,0.195,5,0.195,7,0.368,10,1.622,11,0.022,12,0.71,15,1.753,16,0.508,20,0.228,21,0.331,26,0.014,27,0.018,28,0.014,89,0.606,106,1.634,116,1.024,119,1.21,130,3.067,131,3.067,136,2.094,235,2.868,236,4.265,241,3.249,242,5.262,243,3.843,244,4.208,245,4.512,246,4.512]],["title/classes/CreateNewsArticleDTO.html",[21,0.206,247,2.021]],["body/classes/CreateNewsArticleDTO.html",[3,0.21,4,0.18,5,0.18,7,0.339,10,1.707,11,0.022,12,0.747,15,1.702,16,0.482,20,0.21,21,0.314,26,0.013,27,0.017,28,0.013,56,3.35,89,0.637,106,1.508,116,0.945,119,1.149,130,3.122,131,3.122,136,1.932,235,2.762,236,4.487,238,3.347,247,3.086,248,3.122,249,5.356,250,3.546,251,5.068,252,5.068,253,4.163,254,4.163,255,4.163]],["title/classes/Event.html",[21,0.206,232,1.747]],["body/classes/Event.html",[3,0.18,4,0.154,5,0.154,7,0.291,10,1.874,11,0.022,12,0.82,15,1.728,16,0.321,20,0.18,21,0.209,26,0.011,27,0.015,28,0.011,88,1.393,89,0.7,116,0.811,119,1.039,232,2.411,233,4.16,234,4.16,235,2.561,238,3.977,256,3.044,257,2.255,258,3.758,259,4.668,260,2.94,261,3.758,262,4.668,263,2.695,264,3.574,265,4.59,266,3.574,267,1.564,268,3.758,269,3.574,270,3.574,271,3.574,272,3.574,273,2.695,274,3.574,275,3.662,276,3.308,277,3.662,278,1.151]],["title/controllers/EventController.html",[0,1.274,279,2.397]],["body/controllers/EventController.html",[0,0.885,2,0.885,3,0.123,4,0.106,5,0.266,7,0.199,8,1.123,10,1.531,11,0.023,12,0.67,14,1.622,16,0.562,17,0.492,20,0.123,21,0.143,22,1.404,24,1.445,26,0.008,27,0.011,28,0.008,80,1.523,87,1.822,88,1.531,89,0.572,90,1.822,91,2.268,94,3.036,96,2.518,97,2.213,98,1.665,99,1.665,100,1.665,101,1.665,102,1.404,103,1.404,104,2.518,105,1.665,106,0.885,113,1.665,152,1.404,173,1.916,191,0.94,197,0.743,207,2.294,209,1.822,230,3.529,232,2.467,267,1.979,278,0.787,279,2.518,280,2.082,281,3.361,282,3.361,283,2.787,284,3.361,285,3.361,286,1.843,287,1.843,288,2.445,289,2.082,290,2.787,291,2.445,292,4.781,293,2.082,294,2.787,295,2.445,296,2.082,297,3.224,298,3.697,299,2.445,300,2.082,301,4.232,302,1.843,303,2.445,304,2.123,305,2.445,306,1.843,307,1.843,308,3.747,309,1.843,310,2.123,311,1.843,312,1.843,313,1.843,314,1.716,315,2.445,316,1.404,317,1.135,318,0.885,319,1.135,320,2.445,321,2.445,322,1.843,323,2.445,324,1.843,325,1.665,326,2.082,327,1.843,328,2.445,329,2.445,330,2.787,331,2.445,332,2.445,333,2.445,334,2.787,335,2.445,336,1.843,337,2.445]],["title/modules/EventModule.html",[29,1.274,42,2.192]],["body/modules/EventModule.html",[2,1.646,3,0.229,4,0.196,5,0.196,11,0.022,20,0.229,21,0.266,26,0.014,27,0.018,28,0.014,29,1.646,31,2.11,32,2.256,33,2.61,34,2.61,35,2.256,36,3.263,37,2.422,41,3.224,42,4.425,45,3.015,46,3.263,47,2.61,48,2.61,50,2.61,61,2.61,279,3.096,304,3.73,338,3.871,339,4.545,340,3.871,341,4.545]],["title/classes/EventRepository.html",[21,0.206,342,2.397]],["body/classes/EventRepository.html",[3,0.113,4,0.097,5,0.235,7,0.183,8,1.053,11,0.023,12,0.597,14,1.053,16,0.524,17,0.452,20,0.113,21,0.131,24,0.938,26,0.007,27,0.011,28,0.007,70,1.115,87,1.183,88,0.993,89,0.371,90,1.183,91,1.722,116,0.51,119,0.741,141,2.359,160,2.354,173,1.853,191,2.087,193,1.943,195,1.115,196,2.207,197,1.822,203,2.087,207,1.728,209,2.219,221,1.989,224,1.989,228,1.72,230,3.25,232,2.695,233,2.612,234,2.612,235,1.608,257,1.608,261,1.529,278,1.116,281,3.189,284,3.189,286,1.693,297,2.731,310,1.289,314,1.608,317,1.042,318,0.813,319,1.042,326,2.95,342,2.359,343,1.912,344,2.634,345,1.846,346,1.846,347,2.245,348,2.245,349,2.245,350,2.245,351,2.245,352,3.189,353,1.989,354,1.529,355,1.289,356,1.529,357,2.95,358,2.157,359,2.245,360,1.912,361,1.115,362,1.912,363,2.245,364,2.245,365,3.464,366,2.245,367,1.693,368,1.693,369,1.693,370,2.429,371,1.289,372,1.196,373,1.289,374,1.289,375,1.289,376,2.245,377,2.245,378,3.238,379,1.693,380,3.189,381,2.612,382,1.693,383,1.693,384,3.118,385,2.1,386,2.36,387,3.189,388,3.189,389,3.189,390,1.693,391,2.245,392,2.245,393,2.245,394,1.912,395,1.912,396,1.912,397,1.693,398,1.398,399,2.245,400,1.398,401,2.245,402,1.693,403,1.693,404,1.693,405,1.693]],["title/injectables/EventService.html",[63,1.438,304,2.021]],["body/injectables/EventService.html",[3,0.107,4,0.092,5,0.26,7,0.173,8,1.008,11,0.023,12,0.696,14,1.521,16,0.529,17,0.427,20,0.107,21,0.124,24,1.355,26,0.007,27,0.01,28,0.007,60,1.053,63,1.355,64,1.219,70,1.053,87,1.811,88,1.521,89,0.568,90,1.811,91,2.183,119,0.709,160,1.924,173,2.209,176,2.065,186,1.445,191,1.774,193,2.045,195,2.751,196,1.894,197,1.521,203,2.04,207,2.168,228,1.646,230,3.385,232,2.484,260,2.458,267,1.898,278,0.683,281,3.077,282,2.5,283,2.5,284,3.077,285,3.077,286,1.6,289,2.824,292,4.884,293,2.824,296,1.807,297,3.047,300,1.807,301,3.475,304,1.904,314,1.539,316,1.904,317,0.985,318,0.768,319,0.985,342,3.613,345,1.131,346,1.131,353,1.904,355,1.219,361,1.053,362,1.807,370,2.344,371,1.219,372,1.131,373,1.219,374,1.219,375,1.219,406,1.807,407,2.122,408,3.316,409,2.122,410,2.122,411,2.122,412,2.122,413,2.122,414,1.6,415,2.122,416,2.122,417,2.122,418,2.122,419,3.408,420,2.122,421,2.5,422,1.6,423,2.122,424,1.6,425,1.445,426,1.6,427,3.316,428,2.122,429,3.316,430,2.122,431,3.316,432,2.122,433,3.316,434,2.122,435,2.122,436,2.122]],["title/classes/Gallery.html",[21,0.206,437,1.875]],["body/classes/Gallery.html",[3,0.179,4,0.154,5,0.154,7,0.289,10,1.871,11,0.022,12,0.819,15,1.797,16,0.319,20,0.179,21,0.208,26,0.011,27,0.015,28,0.011,88,1.388,89,0.699,116,0.807,119,1.035,235,2.553,238,3.678,244,3.747,257,2.246,258,3.747,259,4.659,260,2.931,262,4.659,263,2.679,265,4.584,267,1.558,268,3.747,273,2.679,275,3.648,276,3.295,277,3.648,278,1.144,437,2.578,438,3.027,439,5.501,440,5.501,441,3.553,442,3.553,443,3.553,444,3.553,445,3.553,446,3.553,447,3.553,448,2.679,449,3.027]],["title/controllers/GalleryController.html",[0,1.274,450,2.397]],["body/controllers/GalleryController.html",[0,0.884,2,0.884,3,0.123,4,0.105,5,0.265,7,0.199,8,1.122,10,1.529,11,0.023,12,0.669,14,1.62,16,0.562,17,0.491,20,0.123,21,0.143,22,1.401,24,1.443,26,0.008,27,0.011,28,0.008,80,1.52,87,1.82,88,1.529,89,0.571,90,1.82,91,2.267,94,3.032,96,2.514,97,2.21,98,1.662,99,1.662,100,1.662,101,1.662,102,1.401,103,1.401,104,2.514,105,1.662,106,0.884,113,1.662,152,1.401,173,1.915,191,0.938,197,0.741,207,2.292,209,1.82,241,3.527,267,1.978,278,0.786,287,1.84,290,2.783,294,2.783,302,1.84,306,1.84,307,1.84,308,3.743,309,1.84,310,2.12,311,1.84,312,1.84,314,1.132,316,1.401,317,1.132,318,0.884,319,1.132,322,1.84,324,1.84,325,1.662,327,1.84,330,2.783,334,3.357,336,1.84,361,1.211,437,2.372,450,2.514,451,2.078,452,3.357,453,3.792,454,3.357,455,3.792,456,3.792,457,1.84,458,2.44,459,2.078,460,2.44,461,4.962,462,2.078,463,3.222,464,2.44,465,2.078,466,2.44,467,2.078,468,4.228,469,2.44,470,1.84,471,1.84,472,2.12,473,2.078,474,2.44,475,2.44,476,2.44,477,2.078,478,2.44,479,2.44,480,2.44,481,2.44,482,2.44,483,2.44]],["title/modules/GalleryModule.html",[29,1.274,43,2.192]],["body/modules/GalleryModule.html",[2,1.869,3,0.197,4,0.169,5,0.169,11,0.023,16,0.6,17,0.787,20,0.197,21,0.229,26,0.012,27,0.016,28,0.012,29,2.091,31,1.816,32,1.943,33,2.247,34,2.247,35,1.943,36,3.317,37,2.085,41,3.254,43,4.316,45,3.042,46,2.964,47,2.247,48,2.247,50,2.964,54,3.333,59,2.95,60,1.943,154,3.333,450,3.933,472,3.765,473,3.333,484,3.333,485,3.913,486,3.333,487,3.913,488,3.913,489,2.437,490,3.333,491,3.913]],["title/classes/GalleryRepository.html",[21,0.206,489,2.192]],["body/classes/GalleryRepository.html",[3,0.114,4,0.098,5,0.235,7,0.184,8,1.059,11,0.023,12,0.599,14,1.059,16,0.526,17,0.455,20,0.114,21,0.132,24,0.943,26,0.007,27,0.011,28,0.007,70,1.123,87,1.189,88,0.999,89,0.373,90,1.189,91,1.728,92,1.05,93,1.926,116,0.513,119,0.745,141,2.372,160,2.359,173,1.859,191,2.093,193,1.736,195,1.123,196,2.215,197,1.826,203,2.093,207,1.736,209,2.225,221,2.001,224,2.001,228,1.729,229,2.372,235,1.617,241,3.258,244,2.372,257,1.617,261,1.54,278,0.728,310,1.299,314,1.05,317,1.05,318,0.819,319,1.05,344,2.646,345,1.856,346,1.856,352,3.204,353,2.001,354,1.54,355,1.299,356,1.54,358,1.408,361,1.123,367,1.705,368,1.705,369,1.705,370,2.44,371,1.299,372,1.205,373,1.299,374,1.299,375,1.299,378,3.251,379,1.705,380,3.204,381,2.627,382,1.705,383,1.705,384,3.127,385,2.109,386,2.369,387,3.204,388,3.204,389,3.204,390,1.705,394,1.926,395,1.926,396,1.926,397,1.705,398,1.408,400,1.408,402,1.705,403,1.705,404,1.705,405,1.705,437,2.746,452,3.204,454,3.204,457,1.705,463,2.741,470,1.705,471,1.705,477,2.967,489,2.17,492,1.926,493,2.261,494,2.261,495,2.261,496,2.261,497,2.261,498,2.261,499,3.483,500,3.483,501,2.261,502,2.261,503,2.261,504,2.261,505,1.926,506,2.261,507,2.261,508,2.261]],["title/injectables/GalleryService.html",[63,1.438,472,2.021]],["body/injectables/GalleryService.html",[3,0.107,4,0.091,5,0.26,7,0.172,8,1.005,11,0.023,12,0.719,14,1.518,16,0.528,17,0.426,20,0.107,21,0.124,24,1.352,26,0.007,27,0.01,28,0.007,60,1.05,63,1.351,64,1.214,70,1.05,87,1.808,88,1.519,89,0.593,90,1.808,91,2.181,119,0.707,160,1.921,173,2.207,176,2.059,186,1.44,191,1.77,193,2.042,195,2.48,196,1.89,197,1.518,203,2.037,207,2.165,228,1.642,229,2.252,241,3.382,260,2.453,267,1.896,278,0.681,314,0.982,316,1.899,317,0.982,318,0.766,319,0.982,345,1.127,346,1.127,353,1.899,355,1.214,361,1.05,370,2.338,371,1.214,372,1.127,373,1.214,374,1.214,375,1.214,414,1.595,419,3.403,421,2.493,422,1.595,424,1.595,425,1.44,426,1.595,437,2.453,452,3.07,453,2.816,454,3.07,455,2.816,456,3.468,457,1.595,459,2.816,461,4.879,462,1.801,463,3.042,465,2.816,467,1.801,468,3.468,470,1.595,471,1.595,472,1.899,489,3.667,490,1.801,509,1.801,510,2.115,511,3.307,512,2.115,513,2.115,514,2.115,515,2.115,516,2.115,517,2.115,518,2.115,519,2.115,520,2.115,521,2.115,522,2.115,523,2.115,524,3.307,525,2.115,526,3.307,527,2.115,528,3.307,529,2.115,530,2.115,531,2.115,532,2.115]],["title/classes/GetEventFilterDTO.html",[21,0.206,297,2.021]],["body/classes/GetEventFilterDTO.html",[3,0.201,4,0.172,5,0.172,7,0.325,10,1.672,11,0.022,12,0.732,15,1.415,16,0.469,20,0.201,21,0.306,26,0.012,27,0.016,28,0.012,89,0.624,106,1.444,116,0.906,118,2.125,119,1.118,130,3.071,131,3.071,136,1.851,232,3.071,237,3.007,267,1.992,297,3.002,313,4.665,384,3.348,385,2.894,386,2.894,533,4.396,534,4.396,535,3.397,536,3.007,537,4.665,538,3.007,539,4.396,540,4.396]],["title/classes/GetGalleryFilterDTO.html",[21,0.206,463,2.021]],["body/classes/GetGalleryFilterDTO.html",[3,0.201,4,0.172,5,0.172,7,0.325,10,1.672,11,0.022,12,0.732,15,1.415,16,0.469,20,0.201,21,0.306,26,0.012,27,0.016,28,0.012,89,0.624,106,1.444,116,0.906,118,2.125,119,1.118,130,3.071,131,3.071,136,1.851,267,1.992,384,3.348,385,2.894,386,2.894,437,3.296,463,3.002,533,4.396,534,4.396,536,3.007,537,4.665,538,3.007,539,4.396,540,4.396,541,5.269,542,3.989,543,3.989]],["title/classes/GetNewsArticleFilterDTO.html",[21,0.206,544,2.021]],["body/classes/GetNewsArticleFilterDTO.html",[3,0.196,4,0.168,5,0.168,7,0.317,10,1.651,11,0.022,12,0.723,15,1.391,16,0.461,20,0.196,21,0.301,26,0.012,27,0.016,28,0.012,56,3.263,89,0.617,106,1.408,116,0.883,118,2.072,119,1.099,130,3.041,131,3.041,136,1.805,237,2.932,248,3.041,267,1.973,384,3.306,385,2.858,386,2.858,533,4.341,534,4.341,535,3.312,536,2.932,537,4.619,538,2.932,539,4.341,540,4.341,544,2.952,545,5.217,546,3.815]],["title/classes/JwtStrategy.html",[21,0.206,147,2.192]],["body/classes/JwtStrategy.html",[3,0.176,4,0.151,5,0.151,7,0.285,8,1.453,11,0.023,12,0.6,14,1.062,16,0.593,17,0.703,20,0.176,21,0.204,24,0.946,26,0.011,27,0.015,28,0.011,60,1.734,87,1.633,88,1.372,89,0.512,90,1.633,91,1.732,92,2.722,116,0.793,121,2.374,147,2.978,152,2.006,153,2.978,156,2.634,157,2.975,158,3.642,159,2.634,160,2.097,161,2.379,166,2.975,173,1.862,176,2.978,177,2.975,185,2.975,186,2.379,187,3.652,188,2.975,189,2.634,190,2.975,191,1.343,193,1.428,196,1.621,197,1.062,200,4.073,257,1.621,419,2.379,547,4.112,548,2.634,549,4.782,550,3.493,551,4.782,552,3.493,553,3.493,554,2.975,555,3.493,556,2.975,557,3.493,558,3.493,559,3.493,560,3.493,561,3.493,562,3.493,563,3.493]],["title/classes/NewsArticle.html",[21,0.206,564,2.021]],["body/classes/NewsArticle.html",[3,0.171,4,0.147,5,0.147,7,0.277,10,1.849,11,0.022,12,0.809,15,1.702,16,0.305,20,0.171,21,0.199,26,0.011,27,0.015,28,0.011,57,3.499,88,1.346,89,0.69,116,0.771,119,1.003,235,2.494,238,3.917,248,3.261,257,2.178,258,3.66,259,4.586,260,2.863,262,4.586,263,2.562,265,4.541,267,1.511,268,3.66,273,2.562,275,3.538,276,3.195,277,3.538,278,1.094,448,2.562,449,2.894,564,2.694,565,2.894,566,5.374,567,5.374,568,5.374,569,3.397,570,3.397,571,3.397,572,3.397,573,3.397,574,3.397,575,3.397]],["title/controllers/NewsArticleController.html",[0,1.274,576,2.397]],["body/controllers/NewsArticleController.html",[0,0.847,2,0.847,3,0.118,4,0.101,5,0.262,7,0.19,8,1.086,10,1.501,11,0.023,12,0.657,14,1.59,16,0.556,17,0.471,20,0.118,21,0.137,22,1.343,24,1.416,26,0.007,27,0.011,28,0.007,56,2.588,57,2.94,80,1.456,87,1.787,88,1.501,89,0.56,90,1.787,91,2.242,94,2.955,96,2.434,97,2.154,98,1.593,99,1.593,100,1.593,101,1.593,102,1.343,103,1.343,104,2.434,105,1.593,106,0.847,113,1.593,152,1.343,173,1.884,191,0.899,197,0.711,207,2.255,209,1.773,247,3.556,248,2.739,267,1.954,278,0.753,282,3.271,283,3.271,285,3.271,287,1.763,290,2.695,294,2.695,302,1.763,306,1.763,307,1.763,308,3.662,309,1.763,310,2.053,311,1.763,312,1.763,314,1.085,316,1.343,317,1.085,318,0.847,319,1.085,322,1.763,324,1.763,325,1.593,327,1.763,330,2.695,334,3.271,336,1.763,361,1.161,544,3.297,546,2.226,564,1.343,576,2.434,577,1.992,578,4.338,579,4.338,580,2.338,581,2.338,582,2.338,583,2.338,584,5.741,585,2.338,586,3.574,587,2.338,588,2.338,589,2.338,590,2.338,591,4.137,592,2.338,593,1.763,594,2.053,595,2.338,596,1.763,597,2.338,598,2.338,599,2.338,600,2.338,601,2.338,602,2.338,603,2.338,604,2.338,605,2.338,606,2.338]],["title/modules/NewsArticleModule.html",[29,1.274,44,2.192]],["body/modules/NewsArticleModule.html",[2,1.634,3,0.228,4,0.195,5,0.195,11,0.022,20,0.228,21,0.264,26,0.014,27,0.018,28,0.014,29,1.634,31,2.094,32,2.24,33,2.591,34,2.591,35,2.24,36,3.249,37,2.404,41,3.216,44,4.42,45,3.007,46,3.249,47,2.591,48,2.591,50,2.591,57,2.404,61,2.591,248,2.24,576,3.073,594,3.72,607,3.843,608,3.843,609,4.512,610,4.512]],["title/classes/NewsArticleRepository.html",[21,0.206,611,2.397]],["body/classes/NewsArticleRepository.html",[3,0.113,4,0.097,5,0.235,7,0.183,8,1.053,11,0.023,12,0.597,14,1.053,16,0.508,17,0.452,20,0.113,21,0.131,24,0.938,26,0.007,27,0.011,28,0.007,56,2.253,57,2.737,70,1.115,87,1.183,88,0.993,89,0.371,90,1.183,91,1.722,116,0.51,119,0.741,141,2.359,160,2.354,173,1.853,191,2.087,193,1.728,195,1.115,196,2.207,197,1.822,203,2.087,207,1.728,209,2.219,221,1.989,224,1.989,228,1.72,235,1.608,247,3.25,248,2.55,251,2.95,252,2.95,257,1.608,261,1.529,278,0.723,310,1.289,314,1.042,317,1.042,318,0.813,319,1.042,344,2.634,345,1.846,346,1.846,352,3.189,353,1.989,354,1.529,355,1.289,356,1.529,358,1.398,361,1.115,367,1.693,368,1.693,369,1.693,370,2.429,371,1.289,372,1.196,373,1.289,374,1.289,375,1.289,378,3.238,379,1.693,380,3.189,381,2.612,382,1.693,383,1.693,384,3.118,385,2.1,386,2.36,387,3.189,388,3.189,389,3.189,390,1.693,397,1.693,398,1.398,400,1.398,402,1.693,403,1.693,404,1.693,405,1.693,505,1.912,544,2.731,546,1.398,564,2.731,593,1.693,596,1.693,611,2.359,612,1.912,613,3.602,614,3.602,615,2.245,616,2.245,617,1.912,618,2.245,619,2.245,620,2.245,621,2.245,622,3.464,623,2.245,624,3.464,625,2.245,626,2.245,627,2.245,628,3.464,629,2.245,630,2.245]],["title/injectables/NewsArticleService.html",[63,1.438,594,2.021]],["body/injectables/NewsArticleService.html",[3,0.105,4,0.09,5,0.259,7,0.17,8,0.993,11,0.023,12,0.691,14,1.507,16,0.511,17,0.419,20,0.105,21,0.122,22,1.196,24,1.343,26,0.006,27,0.01,28,0.006,56,2.433,57,3.036,63,1.335,64,1.196,70,1.034,87,1.797,88,1.51,89,0.564,90,1.797,91,2.171,119,0.699,160,1.907,173,2.2,176,1.297,191,1.55,193,2.027,195,2.732,196,1.871,197,1.507,203,2.024,207,2.151,228,1.622,247,3.366,248,2.829,260,2.433,267,1.887,278,0.671,314,0.967,316,1.877,317,0.967,318,0.754,319,0.967,345,1.11,346,1.11,353,1.877,355,1.196,361,1.034,370,2.316,371,1.196,372,1.11,373,1.196,374,1.196,375,1.196,414,1.57,419,3.378,421,2.464,422,1.57,424,1.57,425,1.418,426,1.57,544,2.622,546,2.511,564,1.196,591,3.434,593,1.57,594,1.877,596,1.57,611,3.11,613,3.434,614,3.434,617,1.774,631,1.774,632,3.267,633,3.267,634,4.032,635,2.083,636,3.267,637,3.267,638,2.083,639,3.267,640,2.083,641,5.699,642,3.267,643,2.083,644,2.083,645,2.083,646,3.267,647,2.083,648,2.083,649,2.083,650,2.083,651,2.083,652,2.083,653,2.083,654,3.267,655,2.083,656,3.267,657,2.083,658,3.267,659,2.083,660,3.267,661,2.083,662,2.083,663,2.083]],["title/classes/PaginatedResultDto.html",[21,0.206,318,1.274]],["body/classes/PaginatedResultDto.html",[3,0.239,4,0.205,5,0.205,7,0.386,11,0.022,12,0.732,20,0.294,21,0.341,26,0.015,27,0.018,28,0.015,89,0.624,116,1.075,119,1.247,267,2.034,318,2.111,358,3.933,385,2.351,386,2.351,398,2.95,400,3.933,664,3.571,665,4.965,666,4.736,667,4.301,668,4.736]],["title/classes/PaginationDto.html",[21,0.206,667,2.397]],["body/classes/PaginationDto.html",[3,0.233,4,0.199,5,0.199,7,0.376,11,0.022,12,0.783,20,0.289,21,0.335,26,0.014,27,0.018,28,0.014,89,0.668,116,1.047,119,1.226,267,2.204,318,1.671,358,2.873,385,3.098,386,3.098,398,3.887,400,2.873,664,3.478,665,3.929,667,4.251,669,4.613,670,4.613,671,4.613]],["title/controllers/SharedController.html",[0,1.274,672,2.397]],["body/controllers/SharedController.html",[0,1.897,2,1.897,3,0.264,4,0.226,5,0.226,11,0.022,16,0.47,17,1.054,20,0.264,21,0.306,26,0.016,27,0.019,28,0.016,80,3.262,672,4.219,673,4.461,674,5.237,675,5.237]],["title/modules/SharedModule.html",[29,1.274,45,1.633]],["body/modules/SharedModule.html",[2,2.121,3,0.241,4,0.206,5,0.206,11,0.023,16,0.569,17,0.96,20,0.241,21,0.279,26,0.015,27,0.018,28,0.015,29,2.121,31,2.215,37,2.543,45,2.719,50,2.741,102,2.741,103,2.741,372,2.543,672,4.316,676,4.773,677,5.857,678,4.773,679,4.773,680,4.773]],["title/interfaces/TokenPayload.html",[187,2.192,227,2.021]],["body/interfaces/TokenPayload.html",[3,0.259,4,0.222,5,0.222,7,0.418,11,0.021,15,1.77,20,0.259,26,0.016,27,0.019,28,0.016,89,0.549,119,1.308,121,3.361,187,3.81,227,2.946,681,3.867,682,4.368]],["title/classes/User.html",[21,0.206,92,1.633]],["body/classes/User.html",[3,0.208,4,0.178,5,0.178,7,0.336,10,1.797,11,0.022,12,0.786,15,1.8,16,0.37,20,0.208,21,0.241,26,0.013,27,0.017,28,0.013,89,0.671,92,2.478,116,0.936,119,1.142,120,3.401,121,2.94,257,2.478,258,4.034,260,3.155,265,4.609,267,1.719,268,4.034,276,3.636,278,1.327,448,3.108,683,3.51,684,5.044,685,4.121,686,4.121,687,4.121,688,4.121,689,4.121,690,4.121]],["title/classes/UserRepository.html",[21,0.206,158,2.021]],["body/classes/UserRepository.html",[3,0.14,4,0.12,5,0.12,7,0.226,8,1.236,11,0.023,12,0.604,14,1.462,15,1.593,16,0.475,17,0.559,20,0.14,21,0.163,24,1.525,26,0.009,27,0.013,28,0.009,61,1.596,84,3.252,87,1.642,88,1.38,89,0.515,90,1.642,91,2.131,92,2.822,116,0.631,120,2.763,121,3.018,158,2.336,160,2.263,173,2.171,174,3.464,175,4.097,181,3.464,183,2.367,189,2.096,191,1.849,193,2.405,195,2.019,196,1.888,197,1.609,209,1.966,221,1.596,224,1.596,257,1.888,278,0.895,344,2.996,354,2.77,356,1.893,378,1.893,684,4.508,691,2.096,692,4.067,693,4.067,694,2.779,695,2.779,696,2.779,697,2.779,698,3.464,699,2.779,700,2.779,701,4.067,702,2.779,703,4.067,704,2.779,705,2.779,706,2.779,707,2.779,708,2.779,709,2.779,710,2.779,711,2.779,712,2.779,713,2.779,714,4.067,715,2.779,716,2.779]],["title/coverage.html",[717,3.624]],["body/coverage.html",[0,2.004,1,1.605,5,0.102,6,2.007,11,0.022,18,1.353,21,0.399,26,0.007,27,0.011,28,0.007,35,1.17,56,1.915,57,2.598,63,2.146,65,2.007,74,2.007,78,1.605,79,2.007,84,1.785,89,0.252,92,1.669,97,1.17,107,1.353,117,2.007,118,2.948,142,2.007,147,1.467,148,1.777,158,1.353,161,2.448,172,2.007,187,1.467,197,0.716,203,1.382,204,3.576,209,1.469,210,1.605,227,2.065,230,1.353,231,2.007,232,2.164,241,1.353,242,2.007,243,2.007,247,1.353,248,2.747,249,2.007,250,2.007,256,2.007,279,1.605,280,2.007,297,1.353,304,1.353,313,1.777,318,0.853,342,1.605,343,2.007,406,2.007,425,4.919,437,1.915,438,2.007,450,1.605,451,2.007,463,1.353,472,1.353,489,1.467,492,2.007,509,2.007,541,2.007,544,1.353,545,2.007,546,1.467,547,2.711,548,2.711,564,1.353,565,2.007,576,1.605,577,2.007,594,1.353,611,1.605,612,2.007,631,2.007,664,2.711,667,1.605,672,1.605,673,2.007,682,2.007,683,2.007,691,2.711,717,1.777,718,2.356,719,2.356,720,5.251,721,6.307,722,6.474,723,5.934,724,3.062,725,3.062,726,3.062,727,5.534,728,2.007,729,2.007,730,2.007,731,4.876,732,3.062,733,4.358,734,5.251,735,2.356,736,2.007,737,2.356,738,2.356,739,2.356]],["title/dependencies.html",[32,2.102,740,2.937]],["body/dependencies.html",[11,0.023,17,0.855,21,0.248,26,0.013,27,0.017,28,0.013,32,2.109,60,2.109,73,3.619,102,2.44,103,3.127,106,1.539,136,1.972,150,3.204,152,2.44,153,2.646,156,3.204,203,1.634,278,1.753,357,3.619,360,3.619,554,5.118,698,3.619,741,6.009,742,4.249,743,4.249,744,5.445,745,4.249,746,4.249,747,4.249,748,4.249,749,4.249,750,4.249,751,4.249,752,4.249,753,4.249,754,4.249,755,4.249,756,4.249,757,4.249,758,4.249,759,4.249,760,4.249,761,4.249,762,4.249,763,4.249,764,4.249,765,4.249,766,4.249]],["title/miscellaneous/functions.html",[767,2,768,3.605]],["body/miscellaneous/functions.html",[7,0.446,11,0.02,26,0.017,27,0.02,28,0.017,35,3.334,736,4.658,767,3.725,768,4.658,769,5.469]],["title/index.html",[7,0.239,325,2,770,2.937]],["body/index.html",[4,0.172,11,0.022,26,0.012,27,0.016,28,0.012,70,1.98,244,2.717,344,2.484,717,3.007,771,3.989,772,3.989,773,5.226,774,3.989,775,3.989,776,3.989,777,3.989,778,3.989,779,3.989,780,5.829,781,3.989,782,3.989,783,3.989,784,6.715,785,3.989,786,3.989,787,3.989,788,6.59,789,3.989,790,3.989,791,5.226,792,3.989,793,3.989,794,3.989,795,3.989,796,5.226,797,5.226,798,3.989,799,3.989,800,3.989,801,5.226,802,5.226,803,3.989,804,3.989,805,3.989,806,3.989,807,3.989,808,3.397,809,3.989,810,3.989,811,3.989,812,3.989,813,3.989,814,3.989,815,3.989,816,3.989,817,3.989,818,3.989,819,3.989,820,3.989,821,3.989,822,3.989,823,3.989,824,3.989,825,3.989]],["title/modules.html",[31,2.231]],["body/modules.html",[11,0.019,26,0.015,27,0.019,28,0.015,30,3.395,31,2.314,41,2.474,42,3.104,43,3.104,44,3.104,45,2.314,808,5.846,826,6.864,827,6.864,828,6.973,829,4.984,830,4.984]],["title/overview.html",[831,4.093]],["body/overview.html",[2,1.287,11,0.022,18,3.159,26,0.011,27,0.015,28,0.011,29,1.287,30,4.775,31,1.649,32,1.764,33,2.041,34,2.041,35,1.764,36,2.041,37,1.893,38,3.027,39,3.027,40,3.027,41,3.411,42,4.192,43,4.192,44,4.192,45,3.028,46,2.779,47,2.041,48,2.041,64,2.041,107,3.159,116,0.807,143,3.027,144,3.027,146,3.027,147,3.678,304,3.159,338,3.027,340,3.027,472,3.159,484,3.027,486,3.027,594,3.159,607,3.027,608,3.027,681,2.679,831,3.027,832,4.838,833,3.553,834,3.553,835,3.553]],["title/interfaces/uploadedFile.html",[97,1.747,227,2.021]],["body/interfaces/uploadedFile.html",[3,0.204,4,0.175,5,0.175,7,0.329,11,0.023,15,1.79,16,0.473,17,0.813,20,0.266,21,0.236,24,1.094,26,0.013,27,0.016,28,0.013,89,0.564,97,2.617,119,1.127,153,3.283,160,2.255,173,1.379,193,1.651,197,1.228,203,2.027,204,2.752,206,3.441,207,1.651,209,2.397,210,2.752,211,3.047,212,3.441,213,3.047,214,3.441,215,3.441,216,3.441,217,3.441,218,3.441,219,3.441,220,3.441,221,2.321,222,4.489,223,3.441,224,2.321,225,3.441,226,3.441,227,2.321,228,3.087,229,4.235,681,3.047]],["title/miscellaneous/variables.html",[767,2,836,3.605]],["body/miscellaneous/variables.html",[7,0.267,11,0.022,24,0.888,26,0.01,27,0.014,28,0.01,89,0.611,92,2.125,120,2.63,121,2.273,148,2.473,161,3.888,162,2.794,197,1.391,203,1.76,204,2.234,209,2.542,210,3.118,211,2.473,213,2.473,345,3.608,346,3.608,547,2.473,548,3.453,556,2.794,691,2.473,724,2.794,725,4.862,726,4.862,728,2.794,729,3.9,730,3.9,732,2.794,767,2.234,836,2.794,837,5.275,838,5.708,839,3.28,840,3.28,841,3.28,842,3.28,843,4.579,844,4.579,845,4.579,846,4.579,847,4.579,848,4.579,849,4.579,850,4.579,851,4.579,852,4.579,853,4.579,854,4.579,855,4.579,856,4.579,857,4.579,858,4.579,859,4.579,860,4.579,861,4.579,862,4.579,863,4.579,864,4.579,865,3.28,866,3.28,867,3.28]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":425,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["0.1.13",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["0.2.32",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":141,"title":{"classes/AuthCredentialsDTO-1.html":{}},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["1.0.0",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["1.25.1",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":389,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["2",{"_index":835,"title":{},"body":{"overview.html":{}}}],["2.3.2",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":834,"title":{},"body":{"overview.html":{}}}],["23505",{"_index":709,"title":{},"body":{"classes/UserRepository.html":{}}}],["3.0.2",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["3.3.6",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":833,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":832,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_eventservice",{"_index":323,"title":{},"body":{"controllers/EventController.html":{}}}],["_galleryservice",{"_index":476,"title":{},"body":{"controllers/GalleryController.html":{}}}],["_jwt",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["_newsarticleservice",{"_index":599,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["a006562e2de7d9b64565680c8ac17ac1f23e926e",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/EventModule.html":{},"modules/NewsArticleModule.html":{},"classes/UserRepository.html":{}}}],["accesstoken",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["affected",{"_index":422,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["affected.affected",{"_index":424,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["affected.raw",{"_index":426,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["allow",{"_index":75,"title":{},"body":{"injectables/AppService.html":{}}}],["already",{"_index":711,"title":{},"body":{"classes/UserRepository.html":{}}}],["amazing",{"_index":809,"title":{},"body":{"index.html":{}}}],["api",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["api_key",{"_index":217,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["api_secret",{"_index":219,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["apibearerauth",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["apiproperty",{"_index":130,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["apiproperty()@isnotempty",{"_index":236,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(4)@maxlength(50",{"_index":128,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(8)@maxlength(50)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":122,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["apiproperty({required",{"_index":533,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["apitags",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["apitags('article",{"_index":598,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["apitags('authentication",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('events",{"_index":321,"title":{},"body":{"controllers/EventController.html":{}}}],["apitags('gallery",{"_index":475,"title":{},"body":{"controllers/GalleryController.html":{}}}],["app",{"_index":786,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":779,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["article",{"_index":546,"title":{},"body":{"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["article.controller.ts",{"_index":577,"title":{},"body":{"controllers/NewsArticleController.html":{},"coverage.html":{}}}],["article.controller.ts:36",{"_index":587,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:50",{"_index":581,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:61",{"_index":589,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:67",{"_index":583,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.controller.ts:75",{"_index":592,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.dto",{"_index":593,"title":{},"body":{"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["article.dto.ts",{"_index":250,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"coverage.html":{}}}],["article.dto.ts:10",{"_index":254,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{}}}],["article.dto.ts:13",{"_index":253,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{}}}],["article.dto.ts:7",{"_index":255,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{}}}],["article.entity",{"_index":596,"title":{},"body":{"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["article.entity.ts",{"_index":565,"title":{},"body":{"classes/NewsArticle.html":{},"coverage.html":{}}}],["article.entity.ts:14",{"_index":572,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:16",{"_index":569,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:18",{"_index":575,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:20",{"_index":574,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:22",{"_index":570,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:24",{"_index":571,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.entity.ts:26",{"_index":573,"title":{},"body":{"classes/NewsArticle.html":{}}}],["article.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["article.module.ts",{"_index":610,"title":{},"body":{"modules/NewsArticleModule.html":{}}}],["article.repository",{"_index":649,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.repository.ts",{"_index":612,"title":{},"body":{"classes/NewsArticleRepository.html":{},"coverage.html":{}}}],["article.repository.ts:14",{"_index":615,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.repository.ts:15",{"_index":616,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.repository.ts:16",{"_index":618,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.repository.ts:46",{"_index":620,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["article.service",{"_index":595,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["article.service.ts",{"_index":631,"title":{},"body":{"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["article.service.ts:17",{"_index":636,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:19",{"_index":638,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:25",{"_index":645,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:31",{"_index":643,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:39",{"_index":640,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article.service.ts:48",{"_index":648,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["article/dtos/create",{"_index":249,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"coverage.html":{}}}],["article/dtos/get",{"_index":545,"title":{},"body":{"classes/GetNewsArticleFilterDTO.html":{},"coverage.html":{}}}],["article/news",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["articleid",{"_index":584,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["articleidid",{"_index":641,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["articles",{"_index":628,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["articles[0",{"_index":630,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["articles[1",{"_index":629,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["async",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["auth",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/GalleryModule.html":{}}}],["authcontroller",{"_index":78,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authcredentialsdto",{"_index":84,"title":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["authguard",{"_index":312,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["authmodule",{"_index":41,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":818,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":107,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":830,"title":{},"body":{"modules.html":{}}}],["await",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["backers",{"_index":810,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":353,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["badrequestexception('please",{"_index":367,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["baseentity",{"_index":258,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["bcrypt",{"_index":698,"title":{},"body":{"classes/UserRepository.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":715,"title":{},"body":{"classes/UserRepository.html":{}}}],["bcrypt.gensalt",{"_index":702,"title":{},"body":{"classes/UserRepository.html":{}}}],["bcrypt.hash(password",{"_index":716,"title":{},"body":{"classes/UserRepository.html":{}}}],["body",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":828,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":826,"title":{},"body":{"modules.html":{}}}],["building",{"_index":774,"title":{},"body":{"index.html":{}}}],["catch",{"_index":224,"title":{},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["check",{"_index":373,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["class",{"_index":21,"title":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{}}}],["classes",{"_index":116,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"overview.html":{}}}],["cloud_name",{"_index":215,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinary",{"_index":203,"title":{"classes/Cloudinary.html":{}},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["cloudinary.config",{"_index":214,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinary.uploader.upload(file.path",{"_index":223,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinaryconfig",{"_index":210,"title":{},"body":{"classes/Cloudinary.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["cloudinaryconfig.api_key",{"_index":218,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinaryconfig.cloud_name",{"_index":216,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cloudinaryconfig.secret",{"_index":220,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_eventmodule",{"_index":338,"title":{},"body":{"modules/EventModule.html":{},"overview.html":{}}}],["cluster_eventmodule_imports",{"_index":339,"title":{},"body":{"modules/EventModule.html":{}}}],["cluster_eventmodule_providers",{"_index":340,"title":{},"body":{"modules/EventModule.html":{},"overview.html":{}}}],["cluster_gallerymodule",{"_index":484,"title":{},"body":{"modules/GalleryModule.html":{},"overview.html":{}}}],["cluster_gallerymodule_imports",{"_index":485,"title":{},"body":{"modules/GalleryModule.html":{}}}],["cluster_gallerymodule_providers",{"_index":486,"title":{},"body":{"modules/GalleryModule.html":{},"overview.html":{}}}],["cluster_newsarticlemodule",{"_index":607,"title":{},"body":{"modules/NewsArticleModule.html":{},"overview.html":{}}}],["cluster_newsarticlemodule_imports",{"_index":609,"title":{},"body":{"modules/NewsArticleModule.html":{}}}],["cluster_newsarticlemodule_providers",{"_index":608,"title":{},"body":{"modules/NewsArticleModule.html":{},"overview.html":{}}}],["column",{"_index":265,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["config",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"classes/Cloudinary.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{}}}],["config.cloudinary",{"_index":211,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["config.get('db",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.get('jwt",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["config.jwt",{"_index":556,"title":{},"body":{"classes/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["conflictexception",{"_index":697,"title":{},"body":{"classes/UserRepository.html":{}}}],["conflictexception('username",{"_index":710,"title":{},"body":{"classes/UserRepository.html":{}}}],["connection",{"_index":375,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["console.log(error",{"_index":706,"title":{},"body":{"classes/UserRepository.html":{}}}],["console.log(updategallerydto",{"_index":523,"title":{},"body":{"injectables/GalleryService.html":{}}}],["const",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["constructor",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"injectables/NewsArticleService.html":{}}}],["constructor(eventrepository",{"_index":407,"title":{},"body":{"injectables/EventService.html":{}}}],["constructor(galleryrepository",{"_index":510,"title":{},"body":{"injectables/GalleryService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{}}}],["constructor(repositiory",{"_index":635,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["constructor(userrepository",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["consumption",{"_index":77,"title":{},"body":{"injectables/AppService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"controllers/SharedController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"controllers/SharedController.html":{},"coverage.html":{}}}],["controller('article",{"_index":597,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["controller('auth",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('event",{"_index":320,"title":{},"body":{"controllers/EventController.html":{}}}],["controller('gallery",{"_index":474,"title":{},"body":{"controllers/GalleryController.html":{}}}],["controller('shared",{"_index":675,"title":{},"body":{"controllers/SharedController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["count",{"_index":398,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["coverage",{"_index":717,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["created_at",{"_index":259,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["createdatecolumn",{"_index":275,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["createdatecolumn({name",{"_index":263,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["createevent",{"_index":281,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["createevent(createeventdto",{"_index":286,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["createeventdto",{"_index":230,"title":{"classes/CreateEventDTO.html":{}},"body":{"classes/CreateEventDTO.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"coverage.html":{}}}],["creategallery",{"_index":452,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["creategallery(creategallerydto",{"_index":457,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["creategallerydto",{"_index":241,"title":{"classes/CreateGalleryDTO.html":{}},"body":{"classes/CreateGalleryDTO.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"coverage.html":{}}}],["createnewsarticle",{"_index":613,"title":{},"body":{"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["createnewsarticle(createnewsarticledto",{"_index":617,"title":{},"body":{"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["createnewsarticledto",{"_index":247,"title":{"classes/CreateNewsArticleDTO.html":{}},"body":{"classes/CreateNewsArticleDTO.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["createparamdecorator((data",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createwallet",{"_index":578,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["createwallet(createnewsarticledto",{"_index":580,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["creating",{"_index":383,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["data",{"_index":400,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["database",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":238,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["date_published",{"_index":566,"title":{},"body":{"classes/NewsArticle.html":{}}}],["datepublished",{"_index":251,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"classes/NewsArticleRepository.html":{}}}],["dbconfig",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconfig.database",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.extra",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.host",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.password",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.port",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.ssl",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.synchronize",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.type",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dbconfig.username",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["decorator.ts",{"_index":729,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/User.html":{}}}],["default",{"_index":345,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["delete",{"_index":306,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["delete('/:id",{"_index":290,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["deleteevent",{"_index":282,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/NewsArticleController.html":{}}}],["deleteevent(articleid",{"_index":582,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["deleteevent(eventid",{"_index":289,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["deletegallery",{"_index":453,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["deletegallery(galleryid",{"_index":459,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["deletenewsarticle",{"_index":632,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["deletenewsarticle(articleidid",{"_index":639,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["deleteresult",{"_index":316,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":394,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{}}}],["description",{"_index":244,"title":{},"body":{"classes/CreateGalleryDTO.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"index.html":{}}}],["dest",{"_index":680,"title":{},"body":{"modules/SharedModule.html":{}}}],["detail",{"_index":233,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{}}}],["development",{"_index":787,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":74,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["dto",{"_index":314,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["dto.ts",{"_index":118,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":239,"title":{},"body":{"classes/CreateEventDTO.html":{}}}],["dto.ts:12",{"_index":543,"title":{},"body":{"classes/GetGalleryFilterDTO.html":{}}}],["dto.ts:13",{"_index":237,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["dto.ts:16",{"_index":129,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["dto.ts:17",{"_index":542,"title":{},"body":{"classes/GetGalleryFilterDTO.html":{}}}],["dto.ts:18",{"_index":535,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["dto.ts:25",{"_index":127,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["dto.ts:7",{"_index":240,"title":{},"body":{"classes/CreateEventDTO.html":{}}}],["dto.ts:8",{"_index":536,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["dtos/create",{"_index":317,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["dtos/get",{"_index":361,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["e2e",{"_index":798,"title":{},"body":{"index.html":{}}}],["ease",{"_index":76,"title":{},"body":{"injectables/AppService.html":{}}}],["efficient",{"_index":775,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":368,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["entities",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity",{"_index":276,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["entity.{js,ts",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityrepository",{"_index":356,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{}}}],["entityrepository(event",{"_index":363,"title":{},"body":{"classes/EventRepository.html":{}}}],["entityrepository(gallery",{"_index":498,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["entityrepository(newsarticle",{"_index":621,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["entityrepository(user",{"_index":699,"title":{},"body":{"classes/UserRepository.html":{}}}],["err",{"_index":225,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["error",{"_index":378,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{}}}],["error.code",{"_index":708,"title":{},"body":{"classes/UserRepository.html":{}}}],["error.stack",{"_index":381,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["event",{"_index":232,"title":{"classes/Event.html":{}},"body":{"classes/CreateEventDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GetEventFilterDTO.html":{},"coverage.html":{}}}],["event.detail",{"_index":365,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.entity",{"_index":362,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["event.image",{"_index":376,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.publishdate",{"_index":366,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.repository",{"_index":415,"title":{},"body":{"injectables/EventService.html":{}}}],["event.save",{"_index":377,"title":{},"body":{"classes/EventRepository.html":{}}}],["event.service",{"_index":305,"title":{},"body":{"controllers/EventController.html":{}}}],["event.title",{"_index":364,"title":{},"body":{"classes/EventRepository.html":{}}}],["event/event.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["eventcontroller",{"_index":279,"title":{"controllers/EventController.html":{}},"body":{"controllers/EventController.html":{},"modules/EventModule.html":{},"coverage.html":{}}}],["eventid",{"_index":292,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["eventmodule",{"_index":42,"title":{"modules/EventModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventModule.html":{},"modules.html":{},"overview.html":{}}}],["eventrepository",{"_index":342,"title":{"classes/EventRepository.html":{}},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"coverage.html":{}}}],["events",{"_index":326,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{}}}],["events[0",{"_index":401,"title":{},"body":{"classes/EventRepository.html":{}}}],["events[1",{"_index":399,"title":{},"body":{"classes/EventRepository.html":{}}}],["eventservice",{"_index":304,"title":{"injectables/EventService.html":{}},"body":{"controllers/EventController.html":{},"modules/EventModule.html":{},"injectables/EventService.html":{},"coverage.html":{},"overview.html":{}}}],["existingarticle",{"_index":654,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.date_published",{"_index":661,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.full_article",{"_index":659,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.preview_imageurl",{"_index":662,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.save",{"_index":663,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingarticle.title",{"_index":657,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["existingevent",{"_index":427,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.detail",{"_index":432,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.image",{"_index":435,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.publishdate",{"_index":434,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.save",{"_index":436,"title":{},"body":{"injectables/EventService.html":{}}}],["existingevent.title",{"_index":430,"title":{},"body":{"injectables/EventService.html":{}}}],["existinggallery",{"_index":524,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.description",{"_index":529,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.image_public_id",{"_index":531,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.imageurl",{"_index":530,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.save",{"_index":532,"title":{},"body":{"injectables/GalleryService.html":{}}}],["existinggallery.title",{"_index":527,"title":{},"body":{"injectables/GalleryService.html":{}}}],["exists",{"_index":712,"title":{},"body":{"classes/UserRepository.html":{}}}],["expiresin",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["express",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":207,"title":{},"body":{"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"interfaces/uploadedFile.html":{}}}],["extends",{"_index":257,"title":{},"body":{"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"classes/User.html":{},"classes/UserRepository.html":{}}}],["extra",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":553,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":560,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["false",{"_index":540,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["false})@isoptional()@isnotempty",{"_index":534,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["fetch",{"_index":405,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["fetching",{"_index":403,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{}}}],["fileinterceptor",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["filter",{"_index":327,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["filterdto",{"_index":352,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["found",{"_index":419,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"injectables/NewsArticleService.html":{}}}],["framework",{"_index":773,"title":{},"body":{"index.html":{}}}],["full_article",{"_index":567,"title":{},"body":{"classes/NewsArticle.html":{}}}],["fullarticle",{"_index":252,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"classes/NewsArticleRepository.html":{}}}],["function",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":768,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["galleries",{"_index":477,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{}}}],["galleries[0",{"_index":508,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["galleries[1",{"_index":507,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery",{"_index":437,"title":{"classes/Gallery.html":{}},"body":{"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetGalleryFilterDTO.html":{},"coverage.html":{}}}],["gallery.controller",{"_index":488,"title":{},"body":{"modules/GalleryModule.html":{}}}],["gallery.description",{"_index":500,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.dto",{"_index":470,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["gallery.dto.ts",{"_index":243,"title":{},"body":{"classes/CreateGalleryDTO.html":{},"coverage.html":{}}}],["gallery.dto.ts:10",{"_index":245,"title":{},"body":{"classes/CreateGalleryDTO.html":{}}}],["gallery.dto.ts:7",{"_index":246,"title":{},"body":{"classes/CreateGalleryDTO.html":{}}}],["gallery.entity",{"_index":471,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["gallery.image_public_id",{"_index":502,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.imageurl",{"_index":501,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.repository",{"_index":490,"title":{},"body":{"modules/GalleryModule.html":{},"injectables/GalleryService.html":{}}}],["gallery.save",{"_index":503,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery.service",{"_index":473,"title":{},"body":{"controllers/GalleryController.html":{},"modules/GalleryModule.html":{}}}],["gallery.title",{"_index":499,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["gallery/gallery.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["gallerycontroller",{"_index":450,"title":{"controllers/GalleryController.html":{}},"body":{"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"coverage.html":{}}}],["galleryid",{"_index":461,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["gallerymodule",{"_index":43,"title":{"modules/GalleryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GalleryModule.html":{},"modules.html":{},"overview.html":{}}}],["galleryrepository",{"_index":489,"title":{"classes/GalleryRepository.html":{}},"body":{"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"coverage.html":{}}}],["galleryservice",{"_index":472,"title":{"injectables/GalleryService.html":{}},"body":{"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"injectables/GalleryService.html":{},"coverage.html":{},"overview.html":{}}}],["get('/:id",{"_index":294,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["get('articles",{"_index":586,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["get('events",{"_index":298,"title":{},"body":{"controllers/EventController.html":{}}}],["geteventarticles",{"_index":579,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["geteventarticles(getnewsarticlefilterdto",{"_index":585,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["geteventbyid",{"_index":283,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/NewsArticleController.html":{}}}],["geteventbyid(@param('id",{"_index":332,"title":{},"body":{"controllers/EventController.html":{}}}],["geteventbyid(articleid",{"_index":588,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["geteventbyid(eventid",{"_index":293,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["geteventfilterdto",{"_index":297,"title":{"classes/GetEventFilterDTO.html":{}},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GetEventFilterDTO.html":{},"coverage.html":{}}}],["getevents",{"_index":284,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{}}}],["getevents(filterdto",{"_index":350,"title":{},"body":{"classes/EventRepository.html":{}}}],["getevents(geteventfilterdto",{"_index":296,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["getgalleries",{"_index":454,"title":{},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{}}}],["getgalleries(filterdto",{"_index":496,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["getgalleries(getgalleryfilterdto",{"_index":462,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["getgallerybyid",{"_index":455,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["getgallerybyid(galleryid",{"_index":465,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["getgalleryfilterdto",{"_index":463,"title":{"classes/GetGalleryFilterDTO.html":{}},"body":{"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetGalleryFilterDTO.html":{},"coverage.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getnewsarticlebyid",{"_index":633,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getnewsarticlebyid(articleidid",{"_index":642,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getnewsarticlefilter",{"_index":646,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getnewsarticlefilterdto",{"_index":544,"title":{"classes/GetNewsArticleFilterDTO.html":{}},"body":{"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["getnewsarticles",{"_index":614,"title":{},"body":{"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["getnewsarticles(filterdto",{"_index":619,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["getnewsarticles(getnewsarticlefilter",{"_index":644,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["getting",{"_index":325,"title":{"index.html":{}},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["getuser",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["graph",{"_index":829,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":805,"title":{},"body":{"index.html":{}}}],["hashpassword",{"_index":692,"title":{},"body":{"classes/UserRepository.html":{}}}],["hashpassword(password",{"_index":693,"title":{},"body":{"classes/UserRepository.html":{}}}],["here",{"_index":815,"title":{},"body":{"index.html":{}}}],["host",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":822,"title":{},"body":{"index.html":{}}}],["id",{"_index":260,"title":{},"body":{"classes/Event.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"injectables/GalleryService.html":{},"classes/NewsArticle.html":{},"injectables/NewsArticleService.html":{},"classes/User.html":{}}}],["identifier",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":261,"title":{},"body":{"classes/Event.html":{},"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["image_public_id",{"_index":439,"title":{},"body":{"classes/Gallery.html":{}}}],["imageurl",{"_index":440,"title":{},"body":{"classes/Gallery.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["imports",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{}}}],["incorrect",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"miscellaneous/functions.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["injectable",{"_index":63,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["injectables",{"_index":64,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{},"overview.html":{}}}],["injectrepository",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventService.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{}}}],["injectrepository(eventrepository",{"_index":416,"title":{},"body":{"injectables/EventService.html":{}}}],["injectrepository(galleryrepository",{"_index":518,"title":{},"body":{"injectables/GalleryService.html":{}}}],["injectrepository(userrepository",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["installation",{"_index":783,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":785,"title":{},"body":{"index.html":{}}}],["interface",{"_index":227,"title":{"interfaces/TokenPayload.html":{},"interfaces/uploadedFile.html":{}},"body":{"classes/Cloudinary.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{}}}],["interfaces",{"_index":681,"title":{},"body":{"interfaces/TokenPayload.html":{},"overview.html":{},"interfaces/uploadedFile.html":{}}}],["internalservererrorexception",{"_index":354,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{}}}],["internalservererrorexception('an",{"_index":382,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["internalservererrorexception('couldnt",{"_index":404,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["internet",{"_index":374,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["ipaginationoptions",{"_index":359,"title":{},"body":{"classes/EventRepository.html":{}}}],["isin",{"_index":538,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["isnotempty",{"_index":131,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["isoptional",{"_index":537,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["ispasswordcorrect",{"_index":714,"title":{},"body":{"classes/UserRepository.html":{}}}],["isstring",{"_index":132,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["join",{"_index":812,"title":{},"body":{"index.html":{}}}],["json.stringify",{"_index":601,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["json.stringify(geteventfilterdto",{"_index":328,"title":{},"body":{"controllers/EventController.html":{}}}],["json.stringify(getgalleryfilterdto",{"_index":478,"title":{},"body":{"controllers/GalleryController.html":{}}}],["jwt",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtconfig",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconfig.expiresin",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconfig.secret",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":559,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["jwtmodule",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":147,"title":{"classes/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":819,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["license",{"_index":825,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":802,"title":{},"body":{"index.html":{}}}],["limit",{"_index":386,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["limitt",{"_index":388,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["local",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["logger",{"_index":209,"title":{},"body":{"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["logger.error(err",{"_index":226,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["logger.error(error.stack",{"_index":707,"title":{},"body":{"classes/UserRepository.html":{}}}],["logging",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(authcredentialsdto",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["matches",{"_index":133,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":140,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["maxlength",{"_index":134,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["maxlength(50",{"_index":138,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["message",{"_index":125,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["metadata",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["minlength",{"_index":135,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["minlength(4",{"_index":137,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["minlength(8",{"_index":139,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["miscellaneous",{"_index":767,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":801,"title":{},"body":{"index.html":{}}}],["mode",{"_index":791,"title":{},"body":{"index.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":814,"title":{},"body":{"index.html":{}}}],["multermodule",{"_index":677,"title":{},"body":{"modules/SharedModule.html":{}}}],["multermodule.register",{"_index":679,"title":{},"body":{"modules/SharedModule.html":{}}}],["myśliwiec",{"_index":820,"title":{},"body":{"index.html":{}}}],["name",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["nest",{"_index":780,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":824,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":360,"title":{},"body":{"classes/EventRepository.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"classes/UserRepository.html":{},"dependencies.html":{},"interfaces/uploadedFile.html":{}}}],["nestjs/core",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/EventService.html":{},"modules/GalleryModule.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["new",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["news",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["newsarticle",{"_index":564,"title":{"classes/NewsArticle.html":{}},"body":{"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["newsarticle.date_published",{"_index":623,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.full_article",{"_index":624,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.preview_imageurl",{"_index":625,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.save",{"_index":626,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticle.title",{"_index":622,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["newsarticlecontroller",{"_index":576,"title":{"controllers/NewsArticleController.html":{}},"body":{"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"coverage.html":{}}}],["newsarticlemodule",{"_index":44,"title":{"modules/NewsArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NewsArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["newsarticlerepository",{"_index":611,"title":{"classes/NewsArticleRepository.html":{}},"body":{"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["newsarticles",{"_index":600,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["newsarticleservice",{"_index":594,"title":{"injectables/NewsArticleService.html":{}},"body":{"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{},"overview.html":{}}}],["node.js",{"_index":772,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":414,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["notfoundexception(`no",{"_index":421,"title":{},"body":{"injectables/EventService.html":{},"injectables/GalleryService.html":{},"injectables/NewsArticleService.html":{}}}],["npm",{"_index":784,"title":{},"body":{"index.html":{}}}],["null",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["number",{"_index":267,"title":{},"body":{"classes/Event.html":{},"controllers/EventController.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"classes/User.html":{}}}],["occured",{"_index":380,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["onetomany",{"_index":689,"title":{},"body":{"classes/User.html":{}}}],["open",{"_index":803,"title":{},"body":{"index.html":{}}}],["optional",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["out",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["overview",{"_index":831,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":740,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":385,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["pagee",{"_index":387,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["paginate",{"_index":357,"title":{},"body":{"classes/EventRepository.html":{},"dependencies.html":{}}}],["paginatedresultdto",{"_index":318,"title":{"classes/PaginatedResultDto.html":{}},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["pagination",{"_index":358,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["paginationdto",{"_index":667,"title":{"classes/PaginationDto.html":{}},"body":{"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["param",{"_index":307,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["param('id",{"_index":334,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["parameters",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["parseintpipe",{"_index":308,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["passport",{"_index":554,"title":{},"body":{"classes/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":555,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":557,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["password",{"_index":120,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":309,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["patch('/:id",{"_index":336,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["patch('/:id')@useinterceptors(undefined",{"_index":302,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["payload",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["pg",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"index.html":{}}}],["police",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["port",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["post('/login",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('/sign_up",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["post()@usepipes(validationpipe)@useinterceptors(undefined",{"_index":287,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["prefix",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"controllers/SharedController.html":{}}}],["prepend",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["preview_imageurl",{"_index":568,"title":{},"body":{"classes/NewsArticle.html":{}}}],["primarygeneratedcolumn",{"_index":268,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["private",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["production",{"_index":793,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":771,"title":{},"body":{"index.html":{}}}],["project",{"_index":804,"title":{},"body":{"index.html":{}}}],["promise",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["properties",{"_index":119,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"interfaces/uploadedFile.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["public_id",{"_index":229,"title":{},"body":{"classes/Cloudinary.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"interfaces/uploadedFile.html":{}}}],["publishdate",{"_index":234,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{}}}],["query",{"_index":310,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{}}}],["query.andwhere",{"_index":505,"title":{},"body":{"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["query.andwhere('event.title",{"_index":392,"title":{},"body":{"classes/EventRepository.html":{}}}],["query.getmanyandcount",{"_index":397,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["query.limit(limitt",{"_index":396,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{}}}],["query.offset(skipped",{"_index":395,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{}}}],["query.orderby('event.id",{"_index":393,"title":{},"body":{"classes/EventRepository.html":{}}}],["query.orderby('gallery.id",{"_index":506,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["read",{"_index":813,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["reflect",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["repositiory",{"_index":637,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["repository",{"_index":344,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"index.html":{}}}],["req",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.args[0].user",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require('cloudinary').v2",{"_index":213,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":539,"title":{},"body":{"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{}}}],["res",{"_index":370,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["reset",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["rimraf",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":788,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["salt",{"_index":684,"title":{},"body":{"classes/User.html":{},"classes/UserRepository.html":{}}}],["scalable",{"_index":776,"title":{},"body":{"index.html":{}}}],["search",{"_index":384,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticleRepository.html":{}}}],["secret",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":561,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["secure_url",{"_index":228,"title":{},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"interfaces/uploadedFile.html":{}}}],["select",{"_index":369,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["server",{"_index":777,"title":{},"body":{"index.html":{}}}],["shared",{"_index":674,"title":{},"body":{"controllers/SharedController.html":{}}}],["shared.controller",{"_index":678,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/shared.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedcontroller",{"_index":672,"title":{"controllers/SharedController.html":{}},"body":{"controllers/SharedController.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["sharedmodule",{"_index":45,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":778,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{}}}],["signup",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["signup(@body",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(authcredentialsdto",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["skipped",{"_index":390,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"modules/EventModule.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"modules/GalleryModule.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"controllers/SharedController.html":{},"modules/SharedModule.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"index.html":{},"interfaces/uploadedFile.html":{}}}],["sponsors",{"_index":807,"title":{},"body":{"index.html":{}}}],["src/.../auth.module.ts",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cloudinary.ts",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../jwt",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../typeorm.config.ts",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.repository.ts",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":66,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:40",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/auth.service.ts",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:25",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/config/typeorm.config.ts",{"_index":724,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/auth",{"_index":117,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"coverage.html":{}}}],["src/auth/dtos/auth",{"_index":142,"title":{},"body":{"classes/AuthCredentialsDTO-1.html":{},"coverage.html":{}}}],["src/auth/get",{"_index":728,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":547,"title":{},"body":{"classes/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/token.model.ts",{"_index":682,"title":{},"body":{"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["src/auth/user.entity",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"classes/GalleryRepository.html":{}}}],["src/auth/user.entity.ts",{"_index":683,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/auth/user.entity.ts:14",{"_index":685,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.entity.ts:16",{"_index":688,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.entity.ts:18",{"_index":686,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.entity.ts:20",{"_index":687,"title":{},"body":{"classes/User.html":{}}}],["src/auth/user.repository.ts",{"_index":691,"title":{},"body":{"classes/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/user.repository.ts:19",{"_index":695,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/auth/user.repository.ts:37",{"_index":696,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/auth/user.repository.ts:54",{"_index":694,"title":{},"body":{"classes/UserRepository.html":{}}}],["src/config/typeorm.config.ts",{"_index":732,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/event/dtos/create",{"_index":231,"title":{},"body":{"classes/CreateEventDTO.html":{},"coverage.html":{}}}],["src/event/dtos/get",{"_index":313,"title":{},"body":{"controllers/EventController.html":{},"classes/GetEventFilterDTO.html":{},"coverage.html":{}}}],["src/event/event.controller.ts",{"_index":280,"title":{},"body":{"controllers/EventController.html":{},"coverage.html":{}}}],["src/event/event.controller.ts:36",{"_index":299,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:48",{"_index":288,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:56",{"_index":295,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:60",{"_index":291,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.controller.ts:68",{"_index":303,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.entity",{"_index":315,"title":{},"body":{"controllers/EventController.html":{}}}],["src/event/event.entity.ts",{"_index":256,"title":{},"body":{"classes/Event.html":{},"coverage.html":{}}}],["src/event/event.entity.ts:13",{"_index":269,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:15",{"_index":264,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:17",{"_index":274,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:19",{"_index":272,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:21",{"_index":270,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:23",{"_index":271,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.entity.ts:25",{"_index":266,"title":{},"body":{"classes/Event.html":{}}}],["src/event/event.module.ts",{"_index":341,"title":{},"body":{"modules/EventModule.html":{}}}],["src/event/event.repository.ts",{"_index":343,"title":{},"body":{"classes/EventRepository.html":{},"coverage.html":{}}}],["src/event/event.repository.ts:19",{"_index":347,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.repository.ts:20",{"_index":348,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.repository.ts:21",{"_index":349,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.repository.ts:51",{"_index":351,"title":{},"body":{"classes/EventRepository.html":{}}}],["src/event/event.service.ts",{"_index":406,"title":{},"body":{"injectables/EventService.html":{},"coverage.html":{}}}],["src/event/event.service.ts:17",{"_index":408,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:22",{"_index":409,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:28",{"_index":412,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:34",{"_index":411,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:42",{"_index":410,"title":{},"body":{"injectables/EventService.html":{}}}],["src/event/event.service.ts:51",{"_index":413,"title":{},"body":{"injectables/EventService.html":{}}}],["src/gallery/dtos/create",{"_index":242,"title":{},"body":{"classes/CreateGalleryDTO.html":{},"coverage.html":{}}}],["src/gallery/dtos/get",{"_index":541,"title":{},"body":{"classes/GetGalleryFilterDTO.html":{},"coverage.html":{}}}],["src/gallery/gallery.controller.ts",{"_index":451,"title":{},"body":{"controllers/GalleryController.html":{},"coverage.html":{}}}],["src/gallery/gallery.controller.ts:36",{"_index":464,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:48",{"_index":458,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:56",{"_index":466,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:62",{"_index":460,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.controller.ts:70",{"_index":469,"title":{},"body":{"controllers/GalleryController.html":{}}}],["src/gallery/gallery.entity.ts",{"_index":438,"title":{},"body":{"classes/Gallery.html":{},"coverage.html":{}}}],["src/gallery/gallery.entity.ts:14",{"_index":443,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:16",{"_index":441,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:18",{"_index":447,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:20",{"_index":446,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:22",{"_index":442,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:24",{"_index":445,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.entity.ts:26",{"_index":444,"title":{},"body":{"classes/Gallery.html":{}}}],["src/gallery/gallery.module.ts",{"_index":487,"title":{},"body":{"modules/GalleryModule.html":{}}}],["src/gallery/gallery.repository.ts",{"_index":492,"title":{},"body":{"classes/GalleryRepository.html":{},"coverage.html":{}}}],["src/gallery/gallery.repository.ts:15",{"_index":493,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.repository.ts:16",{"_index":494,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.repository.ts:17",{"_index":495,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.repository.ts:46",{"_index":497,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["src/gallery/gallery.service.ts",{"_index":509,"title":{},"body":{"injectables/GalleryService.html":{},"coverage.html":{}}}],["src/gallery/gallery.service.ts:17",{"_index":517,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:18",{"_index":511,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:24",{"_index":512,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:30",{"_index":514,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:36",{"_index":515,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:44",{"_index":513,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/gallery/gallery.service.ts:53",{"_index":516,"title":{},"body":{"injectables/GalleryService.html":{}}}],["src/main.ts",{"_index":736,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/news",{"_index":248,"title":{},"body":{"classes/CreateNewsArticleDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"modules/NewsArticleModule.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"coverage.html":{}}}],["src/shared/dto/pagination.dto",{"_index":319,"title":{},"body":{"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["src/shared/dto/pagination.dto.ts",{"_index":664,"title":{},"body":{"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"coverage.html":{}}}],["src/shared/dto/pagination.dto.ts:2",{"_index":671,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/shared/dto/pagination.dto.ts:3",{"_index":670,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/shared/dto/pagination.dto.ts:4",{"_index":669,"title":{},"body":{"classes/PaginationDto.html":{}}}],["src/shared/dto/pagination.dto.ts:8",{"_index":666,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/shared/dto/pagination.dto.ts:9",{"_index":668,"title":{},"body":{"classes/PaginatedResultDto.html":{}}}],["src/shared/shared.controller.ts",{"_index":673,"title":{},"body":{"controllers/SharedController.html":{},"coverage.html":{}}}],["src/shared/shared.module",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{},"modules/GalleryModule.html":{}}}],["src/shared/shared.module.ts",{"_index":676,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/utilities/cloudinary",{"_index":355,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["src/utilities/cloudinary.ts",{"_index":204,"title":{},"body":{"classes/Cloudinary.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["src/utilities/cloudinary.ts:13",{"_index":208,"title":{},"body":{"classes/Cloudinary.html":{}}}],["ssl",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":789,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":792,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":794,"title":{},"body":{"index.html":{}}}],["started",{"_index":770,"title":{"index.html":{}},"body":{}}],["starter",{"_index":782,"title":{},"body":{"index.html":{}}}],["statements",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":816,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"classes/JwtStrategy.html":{}}}],["strategy.ts",{"_index":548,"title":{},"body":{"classes/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strategy.ts:10",{"_index":550,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["strategy.ts:21",{"_index":552,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/Gallery.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/NewsArticle.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["super",{"_index":558,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["support",{"_index":808,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":827,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":73,"title":{},"body":{"injectables/AppService.html":{},"dependencies.html":{}}}],["synchronize",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":665,"title":{},"body":{"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{}}}],["table",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":797,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":800,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":799,"title":{},"body":{"index.html":{}}}],["tests",{"_index":796,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":806,"title":{},"body":{"index.html":{}}}],["this._eventservice.createevent(createeventdto",{"_index":331,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.deleteevent(eventid",{"_index":335,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.geteventbyid(eventid",{"_index":333,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.getevents(geteventfilterdto",{"_index":329,"title":{},"body":{"controllers/EventController.html":{}}}],["this._eventservice.updateevent(eventid",{"_index":337,"title":{},"body":{"controllers/EventController.html":{}}}],["this._galleryservice.creategallery(creategallerydto",{"_index":480,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.deletegallery(galleryid",{"_index":482,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.getgalleries(getgalleryfilterdto",{"_index":479,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.getgallerybyid(galleryid",{"_index":481,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._galleryservice.updategallery",{"_index":483,"title":{},"body":{"controllers/GalleryController.html":{}}}],["this._jwt.sign(payload",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._newsarticleservice.createnewsarticle",{"_index":603,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.deletenewsarticle(articleid",{"_index":605,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.getnewsarticlebyid(articleid",{"_index":604,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.getnewsarticles(getnewsarticlefilterdto",{"_index":602,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this._newsarticleservice.updaterticle",{"_index":606,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.signup(authcredentialsdto",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(authcredentialsdto",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cloudinary.upload_image(file",{"_index":371,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{}}}],["this.createquerybuilder('event",{"_index":391,"title":{},"body":{"classes/EventRepository.html":{}}}],["this.createquerybuilder('gallery",{"_index":504,"title":{},"body":{"classes/GalleryRepository.html":{}}}],["this.createquerybuilder('newsarticle",{"_index":627,"title":{},"body":{"classes/NewsArticleRepository.html":{}}}],["this.eventrepository.createevent(createeventdto",{"_index":417,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventrepository.delete",{"_index":423,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventrepository.findone",{"_index":420,"title":{},"body":{"injectables/EventService.html":{}}}],["this.eventrepository.getevents(geteventfilterdto",{"_index":418,"title":{},"body":{"injectables/EventService.html":{}}}],["this.findone",{"_index":713,"title":{},"body":{"classes/UserRepository.html":{}}}],["this.galleryrepository.creategallery(creategallerydto",{"_index":519,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.galleryrepository.delete",{"_index":522,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.galleryrepository.findone",{"_index":521,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.galleryrepository.getgalleries(getgalleryfilterdto",{"_index":520,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.geteventbyid(eventid",{"_index":428,"title":{},"body":{"injectables/EventService.html":{}}}],["this.getgallerybyid(galleryid",{"_index":525,"title":{},"body":{"injectables/GalleryService.html":{}}}],["this.getnewsarticlebyid(articleidid",{"_index":655,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.hashpassword(password",{"_index":704,"title":{},"body":{"classes/UserRepository.html":{}}}],["this.logger.error('an",{"_index":402,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["this.logger.error(`error",{"_index":379,"title":{},"body":{"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{}}}],["this.logger.verbose",{"_index":324,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["this.repositiory.createnewsarticle(createnewsarticledto",{"_index":650,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.repositiory.delete",{"_index":653,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.repositiory.findone",{"_index":652,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.repositiory.getnewsarticles(getnewsarticlefilter",{"_index":651,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["this.userrepository.findone",{"_index":562,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["this.userrepository.signup(authcredentialsdto",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userrepository.validateuser",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/UserRepository.html":{}}}],["title",{"_index":235,"title":{},"body":{"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"classes/EventRepository.html":{},"classes/Gallery.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticle.html":{},"classes/NewsArticleRepository.html":{}}}],["token.model",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["tokenpayload",{"_index":187,"title":{"interfaces/TokenPayload.html":{}},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"coverage.html":{}}}],["touch",{"_index":817,"title":{},"body":{"index.html":{}}}],["true",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":221,"title":{},"body":{"classes/Cloudinary.html":{},"classes/EventRepository.html":{},"classes/GalleryRepository.html":{},"classes/NewsArticleRepository.html":{},"classes/UserRepository.html":{},"interfaces/uploadedFile.html":{}}}],["twitter",{"_index":823,"title":{},"body":{"index.html":{}}}],["type",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/Cloudinary.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"classes/JwtStrategy.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/PaginatedResultDto.html":{},"classes/PaginationDto.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":278,"title":{},"body":{"classes/Event.html":{},"controllers/EventController.html":{},"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/Gallery.html":{},"controllers/GalleryController.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticle.html":{},"controllers/NewsArticleController.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"dependencies.html":{}}}],["typeormconfig",{"_index":726,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GalleryModule.html":{}}}],["typeormmodule.forfeature([galleryrepository",{"_index":491,"title":{},"body":{"modules/GalleryModule.html":{}}}],["typeormmodule.forfeature([userrepository",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{}}}],["typeormmodule.forroot(typeormconfig",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":781,"title":{},"body":{"index.html":{}}}],["ui",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["unauthorizedexception('user",{"_index":563,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["unauthorizedexception('username",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["unique",{"_index":448,"title":{},"body":{"classes/Gallery.html":{},"classes/NewsArticle.html":{},"classes/User.html":{}}}],["unique(['title",{"_index":449,"title":{},"body":{"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["unique(['username",{"_index":690,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":795,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":262,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["updatedatecolumn",{"_index":277,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["updatedatecolumn({name",{"_index":273,"title":{},"body":{"classes/Event.html":{},"classes/Gallery.html":{},"classes/NewsArticle.html":{}}}],["updateevent",{"_index":285,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{},"controllers/NewsArticleController.html":{}}}],["updateevent(articleid",{"_index":590,"title":{},"body":{"controllers/NewsArticleController.html":{}}}],["updateevent(eventid",{"_index":300,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["updateeventdto",{"_index":301,"title":{},"body":{"controllers/EventController.html":{},"injectables/EventService.html":{}}}],["updateeventdto.detail",{"_index":431,"title":{},"body":{"injectables/EventService.html":{}}}],["updateeventdto.publishdate",{"_index":433,"title":{},"body":{"injectables/EventService.html":{}}}],["updateeventdto.title",{"_index":429,"title":{},"body":{"injectables/EventService.html":{}}}],["updategallery",{"_index":456,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["updategallery(galleryid",{"_index":467,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["updategallerydto",{"_index":468,"title":{},"body":{"controllers/GalleryController.html":{},"injectables/GalleryService.html":{}}}],["updategallerydto.description",{"_index":528,"title":{},"body":{"injectables/GalleryService.html":{}}}],["updategallerydto.title",{"_index":526,"title":{},"body":{"injectables/GalleryService.html":{}}}],["updatenewsarticledto",{"_index":591,"title":{},"body":{"controllers/NewsArticleController.html":{},"injectables/NewsArticleService.html":{}}}],["updatenewsarticledto.datepublished",{"_index":660,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updatenewsarticledto.fullarticle",{"_index":658,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updatenewsarticledto.title",{"_index":656,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updaterticle",{"_index":634,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["updaterticle(articleidid",{"_index":647,"title":{},"body":{"injectables/NewsArticleService.html":{}}}],["upload",{"_index":372,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"modules/SharedModule.html":{}}}],["upload_image",{"_index":205,"title":{},"body":{"classes/Cloudinary.html":{}}}],["upload_image(file",{"_index":206,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["uploadedfile",{"_index":97,"title":{"interfaces/uploadedFile.html":{}},"body":{"controllers/AuthController.html":{},"classes/Cloudinary.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{},"coverage.html":{},"interfaces/uploadedFile.html":{}}}],["uploadresponse",{"_index":222,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["useguards",{"_index":311,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["useguards(authguard",{"_index":322,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["useinterceptors",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["useinterceptors(fileinterceptor('file",{"_index":330,"title":{},"body":{"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["usepipes",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["usepipes(validationpipe",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["user",{"_index":92,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/GalleryRepository.html":{},"classes/JwtStrategy.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.entity",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"classes/UserRepository.html":{}}}],["user.password",{"_index":703,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.repository",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{}}}],["user.salt",{"_index":701,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.save",{"_index":705,"title":{},"body":{"classes/UserRepository.html":{}}}],["user.username",{"_index":700,"title":{},"body":{"classes/UserRepository.html":{}}}],["username",{"_index":121,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"interfaces/TokenPayload.html":{},"classes/User.html":{},"classes/UserRepository.html":{},"miscellaneous/variables.html":{}}}],["userrepository",{"_index":158,"title":{"classes/UserRepository.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/JwtStrategy.html":{},"classes/UserRepository.html":{},"coverage.html":{}}}],["validate",{"_index":549,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["validate(payload",{"_index":551,"title":{},"body":{"classes/JwtStrategy.html":{}}}],["validateuser",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["validateuser(authcredentialsdto",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserRepository.html":{}}}],["validationpipe",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EventController.html":{},"controllers/GalleryController.html":{},"controllers/NewsArticleController.html":{}}}],["validator",{"_index":136,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{},"classes/CreateEventDTO.html":{},"classes/CreateGalleryDTO.html":{},"classes/CreateNewsArticleDTO.html":{},"classes/GetEventFilterDTO.html":{},"classes/GetGalleryFilterDTO.html":{},"classes/GetNewsArticleFilterDTO.html":{},"dependencies.html":{}}}],["value",{"_index":346,"title":{},"body":{"classes/EventRepository.html":{},"injectables/EventService.html":{},"classes/GalleryRepository.html":{},"injectables/GalleryService.html":{},"classes/NewsArticleRepository.html":{},"injectables/NewsArticleService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":212,"title":{},"body":{"classes/Cloudinary.html":{},"interfaces/uploadedFile.html":{}}}],["variable",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":836,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["watch",{"_index":790,"title":{},"body":{"index.html":{}}}],["weak",{"_index":126,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["website",{"_index":821,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":811,"title":{},"body":{"index.html":{}}}],["z",{"_index":124,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["z])(?=.*[a",{"_index":123,"title":{},"body":{"classes/AuthCredentialsDTO.html":{},"classes/AuthCredentialsDTO-1.html":{}}}],["zoom",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EventModule.html":{},"modules/GalleryModule.html":{},"modules/NewsArticleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEventModule\n\nEventModule\n\nAppModule -->\n\nEventModule->AppModule\n\n\n\n\n\nGalleryModule\n\nGalleryModule\n\nAppModule -->\n\nGalleryModule->AppModule\n\n\n\n\n\nNewsArticleModule\n\nNewsArticleModule\n\nAppModule -->\n\nNewsArticleModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EventModule\n                        \n                        \n                            GalleryModule\n                        \n                        \n                            NewsArticleModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { EventModule } from './event/event.module';\nimport { GalleryModule } from './gallery/gallery.module';\nimport { AuthModule } from './auth/auth.module';\nimport { SharedModule } from './shared/shared.module';\nimport { NewsArticleModule } from './news-article/news-article.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n>>>>>> a006562e2de7d9b64565680c8ac17ac1f23e926e\n\n@Module({\n  imports: [\n    EventModule,\n    GalleryModule,\n    NewsArticleModule,\n    SharedModule,\n    AuthModule,\n    TypeOrmModule.forRoot(TypeOrmConfig),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Welcome to the Police api, please prepend /api to view the swagger documentation to allow ease of consumption 😋';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { User } from 'src/auth/user.entity';\nimport {\n  Body,\n  Controller,\n  HttpCode,\n  Post,\n  UploadedFile,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\n>>>>>> a006562e2de7d9b64565680c8ac17ac1f23e926e\n\n@Controller('auth')\n@ApiTags('Authentication')\n@ApiBearerAuth()\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n {\n  //   return this.authService.signUp(authCredentialsDTO);\n  // }\n=======\n  @Post('/sign_up')\n  @UsePipes(ValidationPipe)\n  signUp(@Body() authCredentialsDTO: AuthCredentialsDTO): Promise {\n    return this.authService.signUp(authCredentialsDTO);\n  }\n>>>>>>> a006562e2de7d9b64565680c8ac17ac1f23e926e\n  @Post('/login')\n  login(\n    @Body() authCredentialsDTO: AuthCredentialsDTO,\n  ): Promise {\n    return this.authService.validateUser(authCredentialsDTO);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCredentialsDTO.html":{"url":"classes/AuthCredentialsDTO.html","title":"class - AuthCredentialsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCredentialsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/auth-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()@MinLength(8)@MaxLength(50)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Password too weak'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/auth-dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()@MinLength(4)@MaxLength(50)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dto/auth-dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class AuthCredentialsDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(4)\n  @MaxLength(50)\n  username: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  @MaxLength(50)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Password too weak',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthCredentialsDTO-1.html":{"url":"classes/AuthCredentialsDTO-1.html","title":"class - AuthCredentialsDTO-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthCredentialsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dtos/auth-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()@MinLength(8)@MaxLength(50)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Password too weak'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dtos/auth-dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()@IsString()@MinLength(4)@MaxLength(50)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/dtos/auth-dto.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  Matches,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\n\nexport class AuthCredentialsDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(4)\n  @MaxLength(50)\n  username: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(8)\n  @MaxLength(50)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Password too weak',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nSharedModule\n\nSharedModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport * as config from 'config';\nimport { SharedModule } from 'src/shared/shared.module';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './jwt-strategy';\nimport { UserRepository } from './user.repository';\nconst jwtConfig = config.get('jwt');\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([UserRepository]),\n    JwtModule.register({\n      secret: jwtConfig.secret,\n      signOptions: { expiresIn: jwtConfig.expiresIn },\n    }),\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    SharedModule,\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [JwtStrategy, PassportModule],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository, _JWT: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _JWT\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { InjectRepository } from '@nestjs/typeorm';\n>>>>>> a006562e2de7d9b64565680c8ac17ac1f23e926e\nimport { TokenPayload } from './token.model';\nimport { User } from './user.entity';\nimport { UserRepository } from './user.repository';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @InjectRepository(UserRepository)\n    private userRepository: UserRepository,\n    private _JWT: JwtService,\n  ) {}\n\n  async signUp(authCredentialsDTO: AuthCredentialsDTO): Promise {\n    return this.userRepository.signUp(authCredentialsDTO);\n  }\n\n  async validateUser(\n    authCredentialsDTO: AuthCredentialsDTO,\n  ): Promise {\n    const { username } = await this.userRepository.validateUser(\n      authCredentialsDTO,\n    );\n    if (username == null) {\n      throw new UnauthorizedException('Username or password incorrect');\n    }\n    const payload: TokenPayload = { username };\n    const accessToken = await this._JWT.sign(payload);\n    return { accessToken };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cloudinary.html":{"url":"classes/Cloudinary.html","title":"class - Cloudinary","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cloudinary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/cloudinary.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                upload_image\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            upload_image\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    upload_image(file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/cloudinary.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport * as config from 'config';\n\nconst cloudinaryConfig = config.cloudinary;\nconst logger = new Logger();\nvar cloudinary = require('cloudinary').v2;\ncloudinary.config({\n  cloud_name: cloudinaryConfig.cloud_name,\n  api_key: cloudinaryConfig.api_key,\n  api_secret: cloudinaryConfig.secret,\n});\nexport class Cloudinary {\n  async upload_image(file: Express.Multer.File) {\n    try {\n      const uploadResponse = await cloudinary.uploader.upload(file.path, {});\n      return uploadResponse;\n    } catch (err) {\n      logger.error(err);\n    }\n  }\n}\nexport interface uploadedFile {\n  secure_url: string;\n  public_id: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEventDTO.html":{"url":"classes/CreateEventDTO.html","title":"class - CreateEventDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEventDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/dtos/create-event-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                detail\n                            \n                            \n                                publishDate\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/create-event-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/create-event-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/create-event-dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateEventDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  publishDate: Date;\n  @ApiProperty()\n  @IsNotEmpty()\n  detail: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGalleryDTO.html":{"url":"classes/CreateGalleryDTO.html","title":"class - CreateGalleryDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGalleryDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/dtos/create-gallery.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/create-gallery.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/create-gallery.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateGalleryDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  description: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNewsArticleDTO.html":{"url":"classes/CreateNewsArticleDTO.html","title":"class - CreateNewsArticleDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNewsArticleDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/dtos/create-news-article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                datePublished\n                            \n                            \n                                fullArticle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePublished\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/create-news-article.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fullArticle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/create-news-article.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/create-news-article.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty } from 'class-validator';\n\nexport class CreateNewsArticleDTO {\n  @ApiProperty()\n  @IsNotEmpty()\n  title: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  fullArticle: string;\n  @ApiProperty()\n  @IsNotEmpty()\n  datePublished: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Event.html":{"url":"classes/Event.html","title":"class - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                detail\n                            \n                            \n                                id\n                            \n                            \n                                image\n                            \n                            \n                                publishDate\n                            \n                            \n                                title\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            detail\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.entity.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Event extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n  @Column()\n  title: string;\n  @Column()\n  image: string;\n  @Column()\n  publishDate: Date;\n  @Column()\n  detail: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventController.html":{"url":"controllers/EventController.html","title":"controller - EventController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                event\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEvent\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                getEventById\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                            \n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEvent(createEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(eventId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventById\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventById(eventId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEvents(getEventFilterDTO: GetEventFilterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('events')\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getEventFilterDTO\n                                    \n                                                GetEventFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \nupdateEvent(eventId: number, file: Express.Multer.File, updateEventDTO: CreateEventDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/event/event.controller.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { EventService } from './event.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Logger,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { GetEventFilterDTO } from 'src/Event/dtos/get-Event-dto';\nimport { Event } from 'src/Event/Event.entity';\nimport { DeleteResult } from 'typeorm';\nimport { CreateEventDTO } from './dtos/create-event-dto';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\nimport { FileInterceptor } from '@nestjs/platform-express';\n\n@Controller('event')\n@ApiTags('events')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class EventController {\n  private logger = new Logger();\n  constructor(private _eventService: EventService) {}\n  @Get('events')\n  async getEvents(\n    @Query() getEventFilterDTO: GetEventFilterDTO,\n  ): Promise> {\n    this.logger.verbose(\n      `Getting events with Filter: ${JSON.stringify(getEventFilterDTO)}`,\n    );\n    return this._eventService.getEvents(getEventFilterDTO);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  @UseInterceptors(FileInterceptor('file'))\n  async createEvent(\n    @Body() createEventDTO: CreateEventDTO,\n    @UploadedFile() file: Express.Multer.File,\n  ): Promise {\n    return this._eventService.createEvent(createEventDTO, file);\n  }\n\n  @Get('/:id')\n  getEventById(@Param('id', ParseIntPipe) eventId: number): Promise {\n    return this._eventService.getEventById(eventId);\n  }\n  @Delete('/:id')\n  deleteEvent(\n    @Param('id', ParseIntPipe) eventId: number,\n  ): Promise {\n    return this._eventService.deleteEvent(eventId);\n  }\n\n  @Patch('/:id')\n  @UseInterceptors(FileInterceptor('file'))\n  updateEvent(\n    @Param('id', ParseIntPipe) eventId: number,\n    @UploadedFile() file: Express.Multer.File,\n    @Body()\n    updateEventDTO: CreateEventDTO,\n  ): Promise {\n    return this._eventService.updateEvent(eventId, updateEventDTO, file);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventModule.html":{"url":"modules/EventModule.html","title":"module - EventModule","body":"\n                   \n\n\n\n\n    Modules\n    EventModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventModule\n\n\n\ncluster_EventModule_imports\n\n\n\ncluster_EventModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nEventModule\n\nEventModule\n\nEventModule -->\n\nAuthModule->EventModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nEventModule -->\n\nSharedModule->EventModule\n\n\n\n\n\nEventService\n\nEventService\n\nEventModule -->\n\nEventService->EventModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/event/event.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EventService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EventController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        >>>>>> a006562e2de7d9b64565680c8ac17ac1f23e926e\n})\nexport class EventModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EventRepository.html":{"url":"classes/EventRepository.html","title":"class - EventRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EventRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEvent\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.repository.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.repository.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEvent(createEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.repository.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEvents(filterDTO: GetEventFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.repository.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDTO\n                                    \n                                                GetEventFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { EntityRepository, Repository } from 'typeorm';\nimport { CreateEventDTO } from './dtos/create-event-dto';\nimport {\n  paginate,\n  Pagination,\n  IPaginationOptions,\n} from 'nestjs-typeorm-paginate';\nimport { GetEventFilterDTO } from './dtos/get-event-dto';\nimport { Event } from './event.entity';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n@EntityRepository(Event)\nexport class EventRepository extends Repository {\n  private cloudinary = new Cloudinary();\n  private logger = new Logger();\n  async createEvent(\n    createEventDTO: CreateEventDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const { title, detail, publishDate } = createEventDTO;\n    const event = new Event();\n    (event.title = title),\n      (event.detail = detail),\n      (event.publishDate = publishDate);\n    if (!file) {\n      throw new BadRequestException('Please ensure that you select an image');\n    }\n    const res = await this.cloudinary.upload_image(file);\n    if (res == null) {\n      throw new BadRequestException(\n        'Could not upload file, please check your internet connection',\n      );\n    } else {\n      const { secure_url } = res;\n      event.image = secure_url;\n    }\n\n    try {\n      await event.save();\n      return event;\n    } catch (error) {\n      this.logger.error(`Error occured`, error.stack);\n      throw new InternalServerErrorException('An error occured while creating');\n    }\n  }\n  async getEvents(\n    filterDTO: GetEventFilterDTO,\n  ): Promise> {\n    const { search, page, limit } = filterDTO;\n    const pagee = page || 1;\n    const limitt = limit > 10 ? 10 : limit || 10;\n    const skipped = (pagee - 1) * limitt;\n    const query = await this.createQueryBuilder('event');\n    if (search) {\n      query.andWhere('event.title LIKE :search OR event.detail LIKE :search', {\n        search: `%${search}%`,\n      });\n    }\n    query.orderBy('event.id', 'DESC');\n    query.offset(skipped);\n    query.limit(limitt);\n    try {\n      const events = await query.getManyAndCount();\n      return {\n        pagination: { page: pagee, limit: limitt, count: events[1] },\n        data: events[0],\n      };\n    } catch (error) {\n      this.logger.error('An error occured while fetching', error.stack);\n      throw new InternalServerErrorException('Couldnt fetch events');\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/event.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createEvent\n                            \n                            \n                                    Async\n                                deleteEvent\n                            \n                            \n                                    Async\n                                getEventById\n                            \n                            \n                                    Async\n                                getEvents\n                            \n                            \n                                    Async\n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventRepository: EventRepository)\n                    \n                \n                        \n                            \n                                Defined in src/event/event.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventRepository\n                                                  \n                                                        \n                                                                        EventRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createEvent(createEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteEvent(eventId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEventById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEventById(eventId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEvents\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEvents(getEventFilterDTO: GetEventFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getEventFilterDTO\n                                    \n                                                GetEventFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateEvent(eventId: number, updateEventDTO: CreateEventDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/event/event.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    eventId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEventDTO\n                                    \n                                                CreateEventDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/event/event.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { EventRepository } from './event.repository';\nimport { DeleteResult } from 'typeorm';\nimport { CreateEventDTO } from './dtos/create-event-dto';\nimport { GetEventFilterDTO } from './dtos/get-event-dto';\nimport { Event } from './event.entity';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Injectable()\nexport class EventService {\n  private cloudinary = new Cloudinary();\n  constructor(\n    @InjectRepository(EventRepository)\n    private eventRepository: EventRepository,\n  ) {}\n  async createEvent(\n    createEventDTO: CreateEventDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    return this.eventRepository.createEvent(createEventDTO, file);\n  }\n  async getEvents(\n    getEventFilterDTO: GetEventFilterDTO,\n  ): Promise> {\n    return this.eventRepository.getEvents(getEventFilterDTO);\n  }\n\n  async getEventById(eventId: number): Promise {\n    const found = await this.eventRepository.findOne({\n      where: { id: eventId },\n    });\n    if (!found)\n      throw new NotFoundException(`No Event with id ${eventId} found`);\n    return found;\n  }\n  async deleteEvent(eventId: number): Promise {\n    const affected: DeleteResult = await this.eventRepository.delete({\n      id: eventId,\n    });\n    if (affected.affected === 0) {\n      throw new NotFoundException(`No Event with id ${eventId} found`);\n    }\n    return affected.raw;\n  }\n  async updateEvent(\n    eventId: number,\n    updateEventDTO: CreateEventDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const existingEvent = await this.getEventById(eventId);\n    updateEventDTO.title == null\n      ? null\n      : (existingEvent.title = updateEventDTO.title);\n    updateEventDTO.detail == null\n      ? null\n      : (existingEvent.detail = updateEventDTO.detail);\n    updateEventDTO.publishDate == null\n      ? null\n      : (existingEvent.publishDate = updateEventDTO.publishDate);\n\n    if (file) {\n      const res = await this.cloudinary.upload_image(file);\n      if (res == null) {\n        throw new BadRequestException(\n          'Could not upload file, please check your internet connection',\n        );\n      } else {\n        const { secure_url } = res;\n        existingEvent.image = secure_url;\n      }\n    }\n\n    await existingEvent.save();\n    return existingEvent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Gallery.html":{"url":"classes/Gallery.html","title":"class - Gallery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Gallery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                image_public_id\n                            \n                            \n                                imageUrl\n                            \n                            \n                                title\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            image_public_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.entity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from 'typeorm';\n@Entity()\n@Unique(['title'])\nexport class Gallery extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n  @Column()\n  title: string;\n  @Column()\n  description: string;\n  @Column()\n  imageUrl: string;\n  @Column()\n  image_public_id: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GalleryController.html":{"url":"controllers/GalleryController.html","title":"controller - GalleryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GalleryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                gallery\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGallery\n                            \n                            \n                                deleteGallery\n                            \n                            \n                                    Async\n                                getGalleries\n                            \n                            \n                                getGalleryById\n                            \n                            \n                                updateGallery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGallery(createGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteGallery\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteGallery(galleryId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleries(getGalleryFilterDTO: GetGalleryFilterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getGalleryFilterDTO\n                                    \n                                                GetGalleryFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGalleryById\n                        \n                        \n                    \n                \n            \n            \n                \ngetGalleryById(galleryId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGallery\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGallery(galleryId: number, file: Express.Multer.File, updateGalleryDTO: CreateGalleryDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/gallery/gallery.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateGalleryDTO } from './dtos/create-gallery.dto';\nimport { Gallery } from './gallery.entity';\nimport { GetGalleryFilterDTO } from './dtos/get-gallery-dto';\nimport { GalleryService } from './gallery.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Logger,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { DeleteResult } from 'typeorm';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Controller('gallery')\n@ApiTags('gallery')\n@ApiBearerAuth()\n@UseGuards(AuthGuard())\nexport class GalleryController {\n  private logger = new Logger();\n  constructor(private _galleryService: GalleryService) {}\n  @Get()\n  async getGalleries(\n    @Query() getGalleryFilterDTO: GetGalleryFilterDTO,\n  ): Promise> {\n    this.logger.verbose(\n      `Getting galleries with Filter: ${JSON.stringify(getGalleryFilterDTO)}`,\n    );\n    return this._galleryService.getGalleries(getGalleryFilterDTO);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  @UseInterceptors(FileInterceptor('file'))\n  async createGallery(\n    @Body() createGalleryDTO: CreateGalleryDTO,\n    @UploadedFile() file: Express.Multer.File,\n  ): Promise {\n    return this._galleryService.createGallery(createGalleryDTO, file);\n  }\n\n  @Get('/:id')\n  getGalleryById(\n    @Param('id', ParseIntPipe) galleryId: number,\n  ): Promise {\n    return this._galleryService.getGalleryById(galleryId);\n  }\n  @Delete('/:id')\n  deleteGallery(\n    @Param('id', ParseIntPipe) galleryId: number,\n  ): Promise {\n    return this._galleryService.deleteGallery(galleryId);\n  }\n\n  @Patch('/:id')\n  @UseInterceptors(FileInterceptor('file'))\n  updateGallery(\n    @Param('id', ParseIntPipe) galleryId: number,\n    @UploadedFile() file: Express.Multer.File,\n    @Body()\n    updateGalleryDTO: CreateGalleryDTO,\n  ): Promise {\n    return this._galleryService.updateGallery(\n      galleryId,\n      updateGalleryDTO,\n      file,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GalleryModule.html":{"url":"modules/GalleryModule.html","title":"module - GalleryModule","body":"\n                   \n\n\n\n\n    Modules\n    GalleryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GalleryModule\n\n\n\ncluster_GalleryModule_imports\n\n\n\ncluster_GalleryModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nGalleryModule\n\nGalleryModule\n\nGalleryModule -->\n\nAuthModule->GalleryModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nGalleryModule -->\n\nSharedModule->GalleryModule\n\n\n\n\n\nGalleryService\n\nGalleryService\n\nGalleryModule -->\n\nGalleryService->GalleryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gallery/gallery.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GalleryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GalleryController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { SharedModule } from 'src/shared/shared.module';\nimport { AuthModule } from './../auth/auth.module';\nimport { GalleryService } from './gallery.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Module } from '@nestjs/common';\nimport { GalleryController } from './gallery.controller';\nimport { GalleryRepository } from './gallery.repository';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([GalleryRepository]),\n    AuthModule,\n    SharedModule,\n  ],\n  controllers: [GalleryController],\n  providers: [GalleryService],\n})\nexport class GalleryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GalleryRepository.html":{"url":"classes/GalleryRepository.html","title":"class - GalleryRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GalleryRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGallery\n                            \n                            \n                                    Async\n                                getGalleries\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.repository.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.repository.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGallery(createGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.repository.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleries(filterDTO: GetGalleryFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.repository.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDTO\n                                    \n                                                GetGalleryFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { CreateGalleryDTO } from './dtos/create-gallery.dto';\nimport { GetGalleryFilterDTO } from './dtos/get-gallery-dto';\nimport { EntityRepository, Repository } from 'typeorm';\nimport { Gallery } from './gallery.entity';\nimport { User } from 'src/auth/user.entity';\nimport {\n  BadRequestException,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n@EntityRepository(Gallery)\nexport class GalleryRepository extends Repository {\n  private cloudinary = new Cloudinary();\n  private logger = new Logger();\n  async createGallery(\n    createGalleryDTO: CreateGalleryDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const { title, description } = createGalleryDTO;\n    const gallery = new Gallery();\n    (gallery.title = title), (gallery.description = description);\n    if (!file) {\n      throw new BadRequestException('Please ensure that you select an image');\n    }\n    const res = await this.cloudinary.upload_image(file);\n    if (res == null) {\n      throw new BadRequestException(\n        'Could not upload file, please check your internet connection',\n      );\n    } else {\n      const { public_id, secure_url } = res;\n      gallery.imageUrl = secure_url;\n      gallery.image_public_id = public_id;\n    }\n\n    try {\n      await gallery.save();\n      return gallery;\n    } catch (error) {\n      this.logger.error(`Error occured`, error.stack);\n      throw new InternalServerErrorException('An error occured while creating');\n    }\n  }\n  async getGalleries(\n    filterDTO: GetGalleryFilterDTO,\n  ): Promise> {\n    const { search, page, limit } = filterDTO;\n    const pagee = page || 1;\n    const limitt = limit > 10 ? 10 : limit || 10;\n    const skipped = (pagee - 1) * limitt;\n    const query = this.createQueryBuilder('gallery');\n    if (search) {\n      query.andWhere(\n        'gallery.title LIKE :search OR gallery.description LIKE :search',\n        {\n          search: `%${search}%`,\n        },\n      );\n    }\n    query.orderBy('gallery.id', 'DESC');\n    query.offset(skipped);\n    query.limit(limitt);\n    try {\n      const galleries = await query.getManyAndCount();\n      return {\n        pagination: { page: pagee, limit: limitt, count: galleries[1] },\n        data: galleries[0],\n      };\n    } catch (error) {\n      this.logger.error('An error occured while fetching', error.stack);\n      throw new InternalServerErrorException('Couldnt fetch galleries');\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GalleryService.html":{"url":"injectables/GalleryService.html","title":"injectable - GalleryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GalleryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/gallery.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                GalleryRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createGallery\n                            \n                            \n                                    Async\n                                deleteGallery\n                            \n                            \n                                    Async\n                                getGalleries\n                            \n                            \n                                    Async\n                                getGalleryById\n                            \n                            \n                                    Async\n                                updateGallery\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(galleryRepository: GalleryRepository)\n                    \n                \n                        \n                            \n                                Defined in src/gallery/gallery.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        galleryRepository\n                                                  \n                                                        \n                                                                        GalleryRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createGallery(createGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteGallery(galleryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleries\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleries(getGalleryFilterDTO: GetGalleryFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getGalleryFilterDTO\n                                    \n                                                GetGalleryFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getGalleryById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGalleryById(galleryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateGallery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGallery(galleryId: number, updateGalleryDTO: CreateGalleryDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/gallery/gallery.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    galleryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGalleryDTO\n                                    \n                                                CreateGalleryDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            GalleryRepository\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/gallery.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { GetGalleryFilterDTO } from './dtos/get-gallery-dto';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Gallery } from './gallery.entity';\nimport { GalleryRepository } from './gallery.repository';\nimport { DeleteResult } from 'typeorm';\nimport { CreateGalleryDTO } from './dtos/create-gallery.dto';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Injectable()\nexport class GalleryService {\n  private cloudinary = new Cloudinary();\n  GalleryRepository: any;\n  constructor(\n    @InjectRepository(GalleryRepository)\n    private galleryRepository: GalleryRepository,\n  ) {}\n\n  async createGallery(\n    createGalleryDTO: CreateGalleryDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    return this.galleryRepository.createGallery(createGalleryDTO, file);\n  }\n  async getGalleries(\n    getGalleryFilterDTO: GetGalleryFilterDTO,\n  ): Promise> {\n    return this.galleryRepository.getGalleries(getGalleryFilterDTO);\n  }\n\n  async getGalleryById(galleryId: number): Promise {\n    const found = await this.galleryRepository.findOne({\n      where: { id: galleryId },\n    });\n    if (!found)\n      throw new NotFoundException(`No Gallery with id ${galleryId} found`);\n    return found;\n  }\n  async deleteGallery(galleryId: number): Promise {\n    const affected: DeleteResult = await this.galleryRepository.delete({\n      id: galleryId,\n    });\n    if (affected.affected === 0) {\n      throw new NotFoundException(`No Gallery with id ${galleryId} found`);\n    }\n    return affected.raw;\n  }\n  async updateGallery(\n    galleryId: number,\n    updateGalleryDTO: CreateGalleryDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    console.log(updateGalleryDTO);\n    const existingGallery = await this.getGalleryById(galleryId);\n    updateGalleryDTO.title == null\n      ? null\n      : (existingGallery.title = updateGalleryDTO.title);\n    updateGalleryDTO.description == null\n      ? null\n      : (existingGallery.description = updateGalleryDTO.description);\n\n    if (file) {\n      const res = await this.cloudinary.upload_image(file);\n      if (res == null) {\n        throw new BadRequestException(\n          'Could not upload file, please check your internet connection',\n        );\n      } else {\n        const { public_id, secure_url } = res;\n        existingGallery.imageUrl = secure_url;\n        existingGallery.image_public_id = public_id;\n      }\n    }\n\n    await existingGallery.save();\n    return existingGallery;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetEventFilterDTO.html":{"url":"classes/GetEventFilterDTO.html","title":"class - GetEventFilterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetEventFilterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/event/dtos/get-event-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/get-event-dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/get-event-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/event/dtos/get-event-dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsNotEmpty, IsIn } from 'class-validator';\n\nexport class GetEventFilterDTO {\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  page: number;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  limit: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetGalleryFilterDTO.html":{"url":"classes/GetGalleryFilterDTO.html","title":"class - GetGalleryFilterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetGalleryFilterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gallery/dtos/get-gallery-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/get-gallery-dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/get-gallery-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/gallery/dtos/get-gallery-dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsNotEmpty, IsIn } from 'class-validator';\n\nexport class GetGalleryFilterDTO {\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  page: number;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  limit: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetNewsArticleFilterDTO.html":{"url":"classes/GetNewsArticleFilterDTO.html","title":"class - GetNewsArticleFilterDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetNewsArticleFilterDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/dtos/get-news-article-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/get-news-article-dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/get-news-article-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({required: false})@IsOptional()@IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/dtos/get-news-article-dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsOptional, IsNotEmpty, IsIn } from 'class-validator';\n\nexport class GetNewsArticleFilterDTO {\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  search: string;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  page: number;\n\n  @ApiProperty({ required: false })\n  @IsOptional()\n  @IsNotEmpty()\n  limit: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtStrategy.html":{"url":"classes/JwtStrategy.html","title":"class - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: UserRepository)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt-strategy.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        UserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: TokenPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-strategy.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                TokenPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from './user.entity';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { UserRepository } from './user.repository';\nimport { UnauthorizedException } from '@nestjs/common';\nimport * as config from 'config';\nimport { TokenPayload } from './token.model';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nconst jwtConfig = config.jwt;\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @InjectRepository(UserRepository)\n    private userRepository: UserRepository,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: jwtConfig.secret,\n    });\n  }\n\n  async validate(payload: TokenPayload): Promise {\n    const { username } = payload;\n    const user = await this.userRepository.findOne({ username });\n    if (!user) {\n      throw new UnauthorizedException('user not found');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsArticle.html":{"url":"classes/NewsArticle.html","title":"class - NewsArticle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsArticle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                created_at\n                            \n                            \n                                date_published\n                            \n                            \n                                full_article\n                            \n                            \n                                id\n                            \n                            \n                                preview_imageUrl\n                            \n                            \n                                title\n                            \n                            \n                                updated_at\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @CreateDateColumn({name: 'created_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date_published\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            full_article\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preview_imageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updated_at\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @UpdateDateColumn({name: 'updated_at'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.entity.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  BaseEntity,\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  Unique,\n  UpdateDateColumn,\n} from 'typeorm';\n@Entity()\n@Unique(['title'])\nexport class NewsArticle extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @CreateDateColumn({ name: 'created_at' })\n  created_at: Date;\n  @UpdateDateColumn({ name: 'updated_at' })\n  updated_at: Date;\n  @Column()\n  title: string;\n  @Column()\n  date_published: Date;\n  @Column()\n  full_article: string;\n  @Column()\n  preview_imageUrl: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NewsArticleController.html":{"url":"controllers/NewsArticleController.html","title":"controller - NewsArticleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NewsArticleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createWallet\n                            \n                            \n                                deleteEvent\n                            \n                            \n                                    Async\n                                getEventArticles\n                            \n                            \n                                getEventById\n                            \n                            \n                                updateEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createWallet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWallet(createNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(ValidationPipe)@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteEvent\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteEvent(articleId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getEventArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEventArticles(getNewsArticleFilterDTO: GetNewsArticleFilterDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('articles')\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getNewsArticleFilterDTO\n                                    \n                                                GetNewsArticleFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventById\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventById(articleId: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateEvent\n                        \n                        \n                    \n                \n            \n            \n                \nupdateEvent(articleId: number, file: Express.Multer.File, updateNewsArticleDTO: CreateNewsArticleDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/news-article/news-article.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CreateNewsArticleDTO } from './dtos/create-news-article.dto';\nimport { GetNewsArticleFilterDTO } from './dtos/get-news-article-dto';\nimport { NewsArticleService } from './news-article.service';\nimport {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Logger,\n  Param,\n  ParseIntPipe,\n  Patch,\n  Post,\n  Query,\n  UploadedFile,\n  UseGuards,\n  UseInterceptors,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { DeleteResult } from 'typeorm';\nimport { NewsArticle } from './news-article.entity';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Controller('article')\n@ApiBearerAuth()\n@ApiTags('article')\n@UseGuards(AuthGuard())\nexport class NewsArticleController {\n  private logger = new Logger();\n  constructor(private _newsArticleService: NewsArticleService) {}\n  @Get('articles')\n  async getEventArticles(\n    @Query() getNewsArticleFilterDTO: GetNewsArticleFilterDTO,\n  ): Promise> {\n    this.logger.verbose(\n      `Getting NewsArticles with Filter: ${JSON.stringify(\n        getNewsArticleFilterDTO,\n      )}`,\n    );\n    return this._newsArticleService.getNewsArticles(getNewsArticleFilterDTO);\n  }\n\n  @Post()\n  @UsePipes(ValidationPipe)\n  @UseInterceptors(FileInterceptor('file'))\n  async createWallet(\n    @Body() createNewsArticleDTO: CreateNewsArticleDTO,\n    @UploadedFile() file: Express.Multer.File,\n  ): Promise {\n    return this._newsArticleService.createNewsArticle(\n      createNewsArticleDTO,\n      file,\n    );\n  }\n\n  @Get('/:id')\n  getEventById(\n    @Param('id', ParseIntPipe) articleId: number,\n  ): Promise {\n    return this._newsArticleService.getNewsArticleById(articleId);\n  }\n  @Delete('/:id')\n  deleteEvent(\n    @Param('id', ParseIntPipe) articleId: number,\n  ): Promise {\n    return this._newsArticleService.deleteNewsArticle(articleId);\n  }\n\n  @Patch('/:id')\n  @UseInterceptors(FileInterceptor('file'))\n  updateEvent(\n    @Param('id', ParseIntPipe) articleId: number,\n    @UploadedFile() file: Express.Multer.File,\n    @Body()\n    updateNewsArticleDTO: CreateNewsArticleDTO,\n  ): Promise {\n    return this._newsArticleService.updaterticle(\n      articleId,\n      updateNewsArticleDTO,\n      file,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NewsArticleModule.html":{"url":"modules/NewsArticleModule.html","title":"module - NewsArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    NewsArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NewsArticleModule\n\n\n\ncluster_NewsArticleModule_providers\n\n\n\ncluster_NewsArticleModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nNewsArticleModule\n\nNewsArticleModule\n\nNewsArticleModule -->\n\nAuthModule->NewsArticleModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nNewsArticleModule -->\n\nSharedModule->NewsArticleModule\n\n\n\n\n\nNewsArticleService\n\nNewsArticleService\n\nNewsArticleModule -->\n\nNewsArticleService->NewsArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/news-article/news-article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            NewsArticleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NewsArticleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        >>>>>> a006562e2de7d9b64565680c8ac17ac1f23e926e\n})\nexport class NewsArticleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NewsArticleRepository.html":{"url":"classes/NewsArticleRepository.html","title":"class - NewsArticleRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NewsArticleRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewsArticle\n                            \n                            \n                                    Async\n                                getNewsArticles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.repository.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.repository.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewsArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewsArticle(createNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.repository.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNewsArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsArticles(filterDTO: GetNewsArticleFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.repository.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filterDTO\n                                    \n                                                GetNewsArticleFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NewsArticle } from './news-article.entity';\nimport { EntityRepository, Repository } from 'typeorm';\nimport {\n  Logger,\n  BadRequestException,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { CreateNewsArticleDTO } from './dtos/create-news-article.dto';\nimport { GetNewsArticleFilterDTO } from './dtos/get-news-article-dto';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n@EntityRepository(NewsArticle)\nexport class NewsArticleRepository extends Repository {\n  private cloudinary = new Cloudinary();\n  private logger = new Logger();\n  async createNewsArticle(\n    createNewsArticleDTO: CreateNewsArticleDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const { title, datePublished, fullArticle } = createNewsArticleDTO;\n    const newsArticle = new NewsArticle();\n    (newsArticle.title = title),\n      (newsArticle.date_published = datePublished),\n      (newsArticle.full_article = fullArticle);\n    if (!file) {\n      throw new BadRequestException('Please ensure that you select an image');\n    }\n    const res = await this.cloudinary.upload_image(file);\n    if (res == null) {\n      throw new BadRequestException(\n        'Could not upload file, please check your internet connection',\n      );\n    } else {\n      const { secure_url } = res;\n      newsArticle.preview_imageUrl = secure_url;\n    }\n\n    try {\n      await newsArticle.save();\n      return newsArticle;\n    } catch (error) {\n      this.logger.error(`Error occured`, error.stack);\n      throw new InternalServerErrorException('An error occured while creating');\n    }\n  }\n  async getNewsArticles(\n    filterDTO: GetNewsArticleFilterDTO,\n  ): Promise> {\n    const { search, page, limit } = filterDTO;\n    const pagee = page || 1;\n    const limitt = limit > 10 ? 10 : limit || 10;\n    const skipped = (pagee - 1) * limitt;\n    const query = this.createQueryBuilder('newsArticle');\n    if (search) {\n      query.andWhere(\n        'newsArticle.title LIKE :search OR newsArticle.full_article LIKE :search',\n        {\n          search: `%${search}%`,\n        },\n      );\n    }\n    try {\n      const articles = await query.getManyAndCount();\n      return {\n        pagination: { page: pagee, limit: limitt, count: articles[1] },\n        data: articles[0],\n      };\n    } catch (error) {\n      this.logger.error('An error occured while fetching', error.stack);\n      throw new InternalServerErrorException('Couldnt fetch articles');\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NewsArticleService.html":{"url":"injectables/NewsArticleService.html","title":"injectable - NewsArticleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NewsArticleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/news-article/news-article.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                cloudinary\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createNewsArticle\n                            \n                            \n                                    Async\n                                deleteNewsArticle\n                            \n                            \n                                    Async\n                                getNewsArticleById\n                            \n                            \n                                    Async\n                                getNewsArticles\n                            \n                            \n                                    Async\n                                updaterticle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repositiory: NewsArticleRepository)\n                    \n                \n                        \n                            \n                                Defined in src/news-article/news-article.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repositiory\n                                                  \n                                                        \n                                                                        NewsArticleRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createNewsArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createNewsArticle(createNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteNewsArticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteNewsArticle(articleIdId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleIdId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNewsArticleById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsArticleById(articleIdId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleIdId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNewsArticles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNewsArticles(getNewsArticleFilter: GetNewsArticleFilterDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getNewsArticleFilter\n                                    \n                                                GetNewsArticleFilterDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updaterticle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updaterticle(articleIdId: number, updateNewsArticleDTO: CreateNewsArticleDTO, file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/news-article/news-article.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    articleIdId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateNewsArticleDTO\n                                    \n                                                CreateNewsArticleDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Cloudinary()\n                        \n                    \n                        \n                            \n                                    Defined in src/news-article/news-article.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { GetNewsArticleFilterDTO } from './dtos/get-news-article-dto';\n\nimport { NewsArticleRepository } from './news-article.repository';\nimport {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateNewsArticleDTO } from './dtos/create-news-article.dto';\nimport { NewsArticle } from './news-article.entity';\nimport { DeleteResult } from 'typeorm';\nimport { Cloudinary } from 'src/utilities/cloudinary';\nimport { PaginatedResultDto } from 'src/shared/dto/pagination.dto';\n\n@Injectable()\nexport class NewsArticleService {\n  private cloudinary = new Cloudinary();\n  constructor(private repositiory: NewsArticleRepository) {}\n  async createNewsArticle(\n    createNewsArticleDTO: CreateNewsArticleDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    return this.repositiory.createNewsArticle(createNewsArticleDTO, file);\n  }\n  async getNewsArticles(\n    getNewsArticleFilter: GetNewsArticleFilterDTO,\n  ): Promise> {\n    return this.repositiory.getNewsArticles(getNewsArticleFilter);\n  }\n\n  async getNewsArticleById(articleIdId: number): Promise {\n    const found = await this.repositiory.findOne({\n      where: { id: articleIdId },\n    });\n    if (!found)\n      throw new NotFoundException(`No Article with id ${articleIdId} found`);\n    return found;\n  }\n  async deleteNewsArticle(articleIdId: number): Promise {\n    const affected: DeleteResult = await this.repositiory.delete({\n      id: articleIdId,\n    });\n    if (affected.affected === 0) {\n      throw new NotFoundException(`No Article with id ${articleIdId} found`);\n    }\n    return affected.raw;\n  }\n  async updaterticle(\n    articleIdId: number,\n    updateNewsArticleDTO: CreateNewsArticleDTO,\n    file: Express.Multer.File,\n  ): Promise {\n    const existingArticle = await this.getNewsArticleById(articleIdId);\n    updateNewsArticleDTO.title == null\n      ? null\n      : (existingArticle.title = updateNewsArticleDTO.title);\n    updateNewsArticleDTO.fullArticle == null\n      ? null\n      : (existingArticle.full_article = updateNewsArticleDTO.fullArticle);\n    updateNewsArticleDTO.datePublished == null\n      ? null\n      : (existingArticle.date_published = updateNewsArticleDTO.datePublished);\n\n    if (file) {\n      const res = await this.cloudinary.upload_image(file);\n      if (res == null) {\n        throw new BadRequestException(\n          'Could not upload file, please check your internet connection',\n        );\n      } else {\n        const { secure_url } = res;\n        existingArticle.preview_imageUrl = secure_url;\n      }\n    }\n\n    await existingArticle.save();\n    return existingArticle;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatedResultDto.html":{"url":"classes/PaginatedResultDto.html","title":"class - PaginatedResultDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatedResultDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/pagination.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pagination\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PaginationDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginationDto {\n  page: number;\n  limit: number;\n  count: number;\n}\n\nexport class PaginatedResultDto {\n  data: T;\n  pagination: PaginationDto;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationDto.html":{"url":"classes/PaginationDto.html","title":"class - PaginationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/dto/pagination.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                count\n                            \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            count\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            limit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/shared/dto/pagination.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginationDto {\n  page: number;\n  limit: number;\n  count: number;\n}\n\nexport class PaginatedResultDto {\n  data: T;\n  pagination: PaginationDto;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SharedController.html":{"url":"controllers/SharedController.html","title":"controller - SharedController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SharedController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/shared.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                shared\n            \n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('shared')\nexport class SharedController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            SharedController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { SharedController } from './shared.controller';\n\n@Module({\n  imports: [\n    MulterModule.register({\n      dest: './upload',\n    }),\n  ],\n  controllers: [SharedController],\n  exports: [MulterModule],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenPayload.html":{"url":"interfaces/TokenPayload.html","title":"interface - TokenPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TokenPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/token.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TokenPayload {\n  username: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                salt\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            salt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/auth/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  Entity,\n  Unique,\n  BaseEntity,\n  PrimaryGeneratedColumn,\n  Column,\n  OneToMany,\n} from 'typeorm';\n\n@Entity()\n@Unique(['username'])\nexport class User extends BaseEntity {\n  @PrimaryGeneratedColumn()\n  id: number;\n  @Column()\n  username: string;\n  @Column()\n  password: string;\n  @Column()\n  salt: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRepository.html":{"url":"classes/UserRepository.html","title":"class - UserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/user.repository.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            hashPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string, salt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/user.repository.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            signUp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    signUp(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/user.repository.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(authCredentialsDTO: AuthCredentialsDTO)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/user.repository.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentialsDTO\n                                    \n                                                AuthCredentialsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  InternalServerErrorException,\n  Logger,\n} from '@nestjs/common';\nimport { EntityRepository, Repository } from 'typeorm';\nimport { User } from './user.entity';\nimport * as bcrypt from 'bcrypt';\n>>>>>> a006562e2de7d9b64565680c8ac17ac1f23e926e\nconst logger = new Logger();\n@EntityRepository(User)\nexport class UserRepository extends Repository {\n  async signUp(authCredentialsDTO: AuthCredentialsDTO): Promise {\n    const { username, password } = authCredentialsDTO;\n    const user = new User();\n    user.username = username;\n    user.salt = await bcrypt.genSalt();\n    user.password = await this.hashPassword(password, user.salt);\n    try {\n      await user.save();\n      return user;\n    } catch (error) {\n      console.log(error);\n      logger.error(error.stack);\n      if (error.code === '23505') {\n        throw new ConflictException('Username already exists');\n      } else throw new InternalServerErrorException();\n    }\n  }\n\n  async validateUser(\n    authCredentialsDTO: AuthCredentialsDTO,\n  ): Promise {\n    const { username, password } = authCredentialsDTO;\n\n    const user = await this.findOne({ username });\n    if (!user) {\n      return { username: null };\n    }\n\n    const isPasswordCorrect = await bcrypt.compare(password, user.password);\n    if (user && isPasswordCorrect) {\n      return { username };\n    }\n    return { username: null };\n  }\n\n  private async hashPassword(password: string, salt: string): Promise {\n    return await bcrypt.hash(password, salt);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.module.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/config/typeorm.config.ts\n            \n            variable\n            dbConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/config/typeorm.config.ts\n            \n            variable\n            TypeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/auth-dto.ts\n            \n            class\n            AuthCredentialsDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dtos/auth-dto.ts\n            \n            class\n            AuthCredentialsDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/get-user-decorator.ts\n            \n            variable\n            GetUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-strategy.ts\n            \n            class\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt-strategy.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/token.model.ts\n            \n            interface\n            TokenPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/user.repository.ts\n            \n            class\n            UserRepository\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/user.repository.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            dbConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            TypeOrmConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/event/dtos/create-event-dto.ts\n            \n            class\n            CreateEventDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/event/dtos/get-event-dto.ts\n            \n            class\n            GetEventFilterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/event/event.controller.ts\n            \n            controller\n            EventController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/event/event.entity.ts\n            \n            class\n            Event\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/event/event.repository.ts\n            \n            class\n            EventRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/event/event.service.ts\n            \n            injectable\n            EventService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/gallery/dtos/create-gallery.dto.ts\n            \n            class\n            CreateGalleryDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/gallery/dtos/get-gallery-dto.ts\n            \n            class\n            GetGalleryFilterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/gallery/gallery.controller.ts\n            \n            controller\n            GalleryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/gallery/gallery.entity.ts\n            \n            class\n            Gallery\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/gallery/gallery.repository.ts\n            \n            class\n            GalleryRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/gallery/gallery.service.ts\n            \n            injectable\n            GalleryService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/news-article/dtos/create-news-article.dto.ts\n            \n            class\n            CreateNewsArticleDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/news-article/dtos/get-news-article-dto.ts\n            \n            class\n            GetNewsArticleFilterDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/news-article/news-article.controller.ts\n            \n            controller\n            NewsArticleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/news-article/news-article.entity.ts\n            \n            class\n            NewsArticle\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/news-article/news-article.repository.ts\n            \n            class\n            NewsArticleRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/news-article/news-article.service.ts\n            \n            injectable\n            NewsArticleService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/shared/dto/pagination.dto.ts\n            \n            class\n            PaginatedResultDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/shared/dto/pagination.dto.ts\n            \n            class\n            PaginationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/shared/shared.controller.ts\n            \n            controller\n            SharedController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            class\n            Cloudinary\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            interface\n            uploadedFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            variable\n            cloudinary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            variable\n            cloudinaryConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utilities/cloudinary.ts\n            \n            variable\n            logger\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            bcrypt : ^5.0.1\n        \n            class-validator : ^0.13.1\n        \n            cloudinary : ^1.25.1\n        \n            config : ^3.3.6\n        \n            nestjs-typeorm-paginate : ^2.3.2\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n        \n            typeorm : ^0.2.32\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GalleryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NewsArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_EventModule\n\n\n\ncluster_EventModule_providers\n\n\n\ncluster_GalleryModule\n\n\n\ncluster_GalleryModule_providers\n\n\n\ncluster_NewsArticleModule\n\n\n\ncluster_NewsArticleModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nEventModule\n\nEventModule\n\nEventModule -->\n\nAuthModule->EventModule\n\n\n\n\n\nGalleryModule\n\nGalleryModule\n\nGalleryModule -->\n\nAuthModule->GalleryModule\n\n\n\n\n\nNewsArticleModule\n\nNewsArticleModule\n\nNewsArticleModule -->\n\nAuthModule->NewsArticleModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nJwtStrategy \n\nJwtStrategy \n\nJwtStrategy  -->\n\nAuthModule->JwtStrategy \n\n\n\nAppModule -->\n\nEventModule->AppModule\n\n\n\nAppModule -->\n\nGalleryModule->AppModule\n\n\n\nAppModule -->\n\nNewsArticleModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAuthModule -->\n\nSharedModule->AuthModule\n\n\n\nEventModule -->\n\nSharedModule->EventModule\n\n\n\nGalleryModule -->\n\nSharedModule->GalleryModule\n\n\n\nNewsArticleModule -->\n\nSharedModule->NewsArticleModule\n\n\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nEventService\n\nEventService\n\nEventModule -->\n\nEventService->EventModule\n\n\n\n\n\nGalleryService\n\nGalleryService\n\nGalleryModule -->\n\nGalleryService->GalleryModule\n\n\n\n\n\nNewsArticleService\n\nNewsArticleService\n\nNewsArticleModule -->\n\nNewsArticleService->NewsArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    20 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/uploadedFile.html":{"url":"interfaces/uploadedFile.html","title":"interface - uploadedFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  uploadedFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/cloudinary.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        public_id\n                                \n                                \n                                        secure_url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        public_id\n                                    \n                                \n                                \n                                    \n                                        public_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secure_url\n                                    \n                                \n                                \n                                    \n                                        secure_url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Logger } from '@nestjs/common';\nimport * as config from 'config';\n\nconst cloudinaryConfig = config.cloudinary;\nconst logger = new Logger();\nvar cloudinary = require('cloudinary').v2;\ncloudinary.config({\n  cloud_name: cloudinaryConfig.cloud_name,\n  api_key: cloudinaryConfig.api_key,\n  api_secret: cloudinaryConfig.secret,\n});\nexport class Cloudinary {\n  async upload_image(file: Express.Multer.File) {\n    try {\n      const uploadResponse = await cloudinary.uploader.upload(file.path, {});\n      return uploadResponse;\n    } catch (err) {\n      logger.error(err);\n    }\n  }\n}\nexport interface uploadedFile {\n  secure_url: string;\n  public_id: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cloudinary   (src/.../cloudinary.ts)\n                        \n                        \n                            cloudinaryConfig   (src/.../cloudinary.ts)\n                        \n                        \n                            dbConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            dbConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            GetUser   (src/.../get-user-decorator.ts)\n                        \n                        \n                            jwtConfig   (src/.../auth.module.ts)\n                        \n                        \n                            jwtConfig   (src/.../jwt-strategy.ts)\n                        \n                        \n                            logger   (src/.../user.repository.ts)\n                        \n                        \n                            logger   (src/.../cloudinary.ts)\n                        \n                        \n                            TypeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            TypeOrmConfig   (src/.../typeorm.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utilities/cloudinary.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cloudinary\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require('cloudinary').v2\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cloudinaryConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.cloudinary\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n\n\n            \n        \n\n    src/config/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('db')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: dbConfig.type,\n  port: dbConfig.port,\n  host: dbConfig.host,\n  username: dbConfig.username,\n  password: dbConfig.password,\n  database: dbConfig.database,\n  synchronize: dbConfig.synchronize,\n  ssl: dbConfig.ssl,\n  // logging: true,\n  extra: dbConfig.extra,\n\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n}\n                        \n                    \n\n\n            \n        \n\n    src/auth/config/typeorm.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            dbConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('db')\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TypeOrmConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TypeOrmModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: dbConfig.type,\n  port: dbConfig.port,\n  host: dbConfig.host,\n  username: dbConfig.username,\n  password: dbConfig.password,\n  database: dbConfig.database,\n  synchronize: dbConfig.synchronize,\n  ssl: dbConfig.ssl,\n  // logging: true,\n  extra: dbConfig.extra,\n\n  entities: [__dirname + '/../**/*.entity.{js,ts}'],\n}\n                        \n                    \n\n\n            \n        \n\n    src/auth/get-user-decorator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GetUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data, req) => {\n  return req.args[0].user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.get('jwt')\n                        \n                    \n\n\n            \n        \n\n    src/auth/jwt-strategy.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : config.jwt\n                        \n                    \n\n\n            \n        \n\n    src/auth/user.repository.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger()\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
